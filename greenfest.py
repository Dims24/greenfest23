import random
import telebot
from datetime import datetime
from telebot import types
import time
import os
from telebot.types import InputFile
import re
import json

import keyboard.main_keyboard as keyboard
import database.db_aa as db
from Export.export import export_data

bot = telebot.TeleBot('6616549457:AAH_N8dlV20ihCGKxaOhqUNR9HgV6Kn5fYM')


def timeppp(message):
    newTimeString = datetime.fromtimestamp(message).strftime('%H:%M:%S - %d %b %Z')
    print(newTimeString)


def text_check(text):
    import re
    regex = re.compile('[^a-zA-Z–∞-—è–ê-–Ø0-9]')
    return regex.sub('', text)


incorrect = ['–•–º.. –¥–∞—é –µ—â—ë —à–∞–Ω—Å üòä',
             '–ü—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ—Ä–∞–∑–º—ã—Å–ª–∏—Ç—å –µ—â—ë',
             '–ù—É—É—É—É... –Ω–µ —Ç–æ, —É–≤—ã',
             '–¢–∞–∫-—Ç–∞–∫-—Ç–∞–∫, –ø–æ—á—Ç–∏! –ù–æ –Ω–µ—Ç!',
             '–î–∞–≤–∞–π-–¥–∞–≤–∞–π! –Ø –≤ —Ç–µ–±—è –≤–µ—Ä—é!',
             ]
menedjer = 64783167
menedjer_1 = 64783167
# menedjer_1 = 703608663

admin_id = '703608663'


# 703608663
# 64783167

# def handle_callback_query(message):
#     source = None
#     if len(message.text.split()) > 1:
#         source = message.text.split()[1]
#
#     # Determine where the user came from
#     if source == 'source_qr':
#         # User came from a QR code
#         bot.reply_to(message, 'Welcome! You came from a QR code.')
#     elif source == 'source_link':
#         # User came from a link
#         bot.reply_to(message, 'Welcome! You came from a link.')
#     else:
#         # User did not come from a QR code or link
#         bot.reply_to(message, 'Welcome!')

# -------------–ù–∞—á–∞–ª–æ---------------------------
@bot.message_handler(commands=['start'])
def handle_start(message):
    if (message.from_user.id == menedjer_1):
        bot.send_message(message.chat.id, '–í–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω —ç–∫—Å–ø–æ—Ä—Ç', reply_markup=keyboard.export())
    else:
        info = db.Data(message.from_user)
        info.create()
        bot.send_sticker(message.chat.id,
                         "CAACAgIAAxkBAAEKSkJlAf8wjDicj1FxMdp1JVJrKoquYgACZTEAAmKeCUi6gWV5y2hgaTAE")
        bot.send_message(message.chat.id, '_–ü—Ä–∏–≤–µ—Ç, –¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥!_\n'
                                          '\n'
                                          '_–ú—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–ª—è —Ç–µ–±—è –∫–≤–µ—Å—Ç. –í–ø–µ—Ä–µ–¥–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∑–∞–≥–∞–¥–∫–∏ –Ω–∞ –ª–æ–≥–∏–∫—É, –∞ —Ç–∞–∫–∂–µ '
                                          '–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –ø–æ –≤—Å–µ–π —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏._', parse_mode="Markdown")
        bot.send_sticker(message.chat.id,
                         "CAACAgIAAxkBAAEKSn9lAhICYzX0fZrQl-hmN_Z5TwjkYgACF0YAAqUFEEjYj5lzUIFNxjAE")
        bot.send_message(message.chat.id,
                         "_–ü—Ä–µ–∂–¥–µ, —á–µ–º –º—ã –Ω–∞—á–Ω—ë–º, —Ä–∞—Å—Å–∫–∞–∂—É –æ–± –∏–≥—Ä–µ. –í—Å—ë –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ:_\n"
                         "\n"
                         "_1. –ö–∞–∂–¥—ã–π –∏–≥—Ä–∞–µ—Ç —Å–∞–º –∑–∞ —Å–µ–±—è, –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏  –º–æ–∂–Ω–æ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å—Å—è –≤ –ø–∞—Ä—ã. "
                         "–ë–æ—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å 11:00 –¥–æ 16:00\n"
                         "\n"
                         "2. –í–æ–π—Ç–∏ –≤ –∏–≥—Ä—É –º–æ–∂–Ω–æ –≤ —Ä–∞–º–∫–∞—Ö —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, —Ç–∞–∫–∂–µ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ—Å—Ç–∞–≤–∏—Ç—å –µ—ë –Ω–∞ "
                         "–ø–∞—É–∑—É –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∑–¥–Ω–µ–µ!\n"
                         "\n"
                         "3. –¢—ã –ø–æ–ª—É—á–∏—à—å –º–µ–Ω—é —Å –¥–µ—Å—è—Ç—å—é –∑–∞–¥–∞–Ω–∏—è–º–∏. –í—ã–±–∏—Ä–∞–π –ª—é–±–æ–µ –∏ –Ω–∞–∂–∏–º–∞–π –Ω–∞ –Ω–µ–≥–æ\n"
                         "\n"
                         "4. –Ø –ø—Ä–∏—à–ª—é –∫–∞—Ä—Ç—É —Å –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ–º —Ç–æ—á–∫–∏ –æ—Ñ—Ñ–ª–∞–π–Ω-–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ \n"
                         "\n"
                         "5. –ö–æ–≥–¥–∞ –ø—Ä–∏–¥–µ—à—å –Ω–∞ —Ç–æ—á–∫—É, –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –¥–∞—Å—Ç —Ç–µ–±–µ –æ—Ñ—Ñ–ª–∞–π–Ω-–∑–∞–¥–∞–Ω–∏–µ\n"
                         "\n"
                         "6. –ü–æ—Å–ª–µ –µ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ —Å–∫–∞–∂–µ—Ç –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–¥–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç\n"
                         "\n"
                         "7. –ü–æ—Å–ª–µ –∫–æ–¥–∞, —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ. –û—Ç–≤–µ—Ç –≤–ø–∏—à–∏ –≤ —á–∞—Ç\n"
                         "\n"
                         "8. –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è –æ–¥–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ—è–≤–∏—Ç—Å—è –≥–∞–ª–æ—á–∫–∞ –æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏\n"
                         "\n"
                         "9. –ó–∞–¥–∞–Ω–∏–µ –º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é\n"
                         "\n"
                         "–ó–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–¥–∞–Ω–∏–π, —Ç—ã –ø–æ–ª—É—á–∏—à—å 10 –ì—Ä–∏–Ω–∫–æ–∏–Ω–æ–≤,–Ω–æ –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–º –Ω—É–∂–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è\n"
                         "\n"
                         "–ü–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Å—è:_ [@blacklist_event](@blacklist_event)\n"
                         "\n"
                         "_–ï—Å–ª–∏ –≤—Å—ë –ø–æ–Ω—è—Ç–Ω–æ, –≤–≤–µ–¥–∏ —Å–≤–æ—é_ *—Ñ–∞–º–∏–ª–∏—é*", parse_mode="Markdown")
        bot.register_next_step_handler(message, surname)
        # bot.send_message(64783167, f'–ë–æ—Ç–∞ –∑–∞–ø—É—Å—Ç–∏–ª: {message.from_user.first_name}, @{message.from_user.username}')
        # bot.send_message(1248171558, f'–ë–æ—Ç–∞ –∑–∞–ø—É—Å—Ç–∏–ª: {message.from_user.first_name}, @{message.from_user.username}')
        # bot.send_message(483241197, f'–ë–æ—Ç–∞ –∑–∞–ø—É—Å—Ç–∏–ª: {message.from_user.first_name}, @{message.from_user.username}')


@bot.message_handler(func=lambda message: message.text.lower() == '—ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö', content_types=['text'])
def export(message):
    try:
        if (message.from_user.id == menedjer_1):
            excel_name = export_data()
            print(excel_name)
            bot.send_document(message.chat.id, InputFile(excel_name))
            os.remove(excel_name)
    except Exception as error:
        print(f'export: {error}')


@bot.message_handler(content_types=['document', 'photo', 'audio', 'video', 'animation', 'voice', 'sticker'])
def take(message):
    print(message)
    bot.delete_message(message.chat.id, message.message_id)


# -------------–í–≤–æ–¥ –∏–º–µ–Ω–∏---------------------------
def surname(message):
    try:
        if message.content_type == 'text':
            collector(message)
            set_surname(message)
            bot.send_message(message.chat.id,
                             "_–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å_ *–∏–º—è*", parse_mode="Markdown")
            bot.register_next_step_handler(message, name)
        else:
            bot.send_chat_action(message.chat.id, 'typing')
            bot.send_message(message.chat.id, '_–ù–∞–¥–æ –≤–≤–µ—Å—Ç–∏_ *—Ñ–∞–º–∏–ª–∏—é*\n',
                             parse_mode="Markdown")
            bot.register_next_step_handler(message, surname)
    except Exception as error:
        print(f'surname: {error}')
        bot.register_next_step_handler(message, surname)


# -------------–í–≤–æ–¥ —Ç–µ–ª–µ—Ñ–æ–Ω–∞---------------------------
def name(message):
    try:
        if message.content_type == 'text':
            set_name(message)
            bot.send_message(message.chat.id,
                             "_–í–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ! –ò –ø–æ—Å–ª–µ–¥–Ω–µ–µ ‚Äì_ *–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞*", parse_mode="Markdown")
            bot.register_next_step_handler(message, start)
        else:
            bot.send_chat_action(message.chat.id, 'typing')
            bot.send_message(message.chat.id, '_–ù–∞–¥–æ –≤–≤–µ—Å—Ç–∏_ *–∏–º—è*\n',
                             parse_mode="Markdown")
            bot.register_next_step_handler(message, name)
    except Exception as error:
        print(f'name: {error}')
        bot.register_next_step_handler(message, name)


# -------------–ù–∞—á–∞–ª–æ---------------------------
def start(message):
    try:
        if message.content_type == 'text':
            set_phone(message)
            bot.send_sticker(message.chat.id,
                             "CAACAgIAAxkBAAEKSkZlAgABoWZXxef8hvXfWYJNdtSikK4AAio0AAK5UQABSAOfBYq7prLiMAQ")
            bot.send_message(message.chat.id, '_–õ–µ—Ç–æ ‚Äì —É–Ω–∏–∫–∞–ª—å–Ω–∞—è –ø–æ—Ä–∞, –∫–æ–≥–¥–∞ –¥–∞–∂–µ —Å–∞–º—ã–π –∑–∞—è–¥–ª—ã–π –¥–æ–º–æ—Å–µ–¥ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è '
                                              '–Ω–∞ –ø—Ä–∏—Ä–æ–¥—É –∏ –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è. –ò–º–µ–Ω–Ω–æ —Ç–∞–º –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ–ø—ã—Ç,'
                                              ' –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è. –í–æ—Ç —Ç–æ–ª—å–∫–æ —Å–µ–π—á–∞—Å –ø–æ—Ä—Ç–∞–ª –≤ –ª–µ—Ç–æ –∑–∞–∫—Ä—ã—Ç!\n'
                                              '\n'
                                              '–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –µ—â–µ –≤ –æ–¥–Ω–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ, —Å—Ç–æ–ª–∫–Ω—É—Ç—å—Å—è —Å–æ –≤—Å–µ–º–∏ '
                                              '—Å—Ç–∏—Ö–∏—è–º–∏ –∏ –ø—Ä–∏—Ä—É—á–∏—Ç—å –∏—Ö! –í–µ–¥—å –µ—Å—Ç—å —Å—Ö–æ–¥—Å—Ç–≤–∞ –º–µ–∂–¥—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏ –ì—Ä–∏–Ω–∞—Ç–æ–º–∞'
                                              ' –∏ —Å—Ç–∏—Ö–∏—è–º–∏: –æ–¥–∏–Ω —Å –æ–≥–Ω–µ–º –≤ –≥–ª–∞–∑–∞—Ö –±–µ—Ä–µ—Ç—Å—è –∑–∞ –Ω–æ–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã; –¥—Ä—É–≥–æ–π '
                                              '–∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –∏ –ª–µ–≥–∫–∏–π –Ω–∞ –ø–æ–¥—ä–µ–º –∫–∞–∫ –≤–æ–∑–¥—É—à–Ω—ã–µ –ø–æ—Ç–æ–∫–∏; –µ—Å—Ç—å –ª—é–¥–∏, –∫–æ—Ç–æ—Ä—ã—Ö'
                                              ' –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤ —Ä–∞–±–æ—á–µ–º –ø—Ä–æ—Ü–µ—Å—Å–µ –∫–∞–∫ –±—É—Ä–Ω—É—é —Ä–µ–∫—É; –∞ –µ—Å—Ç—å –ª—é–¥–∏-—Ç–∏—Ç–∞–Ω—ã,'
                                              ' —Å–ø–æ–∫–æ–π–Ω—ã–µ –∏ —É—Ä–∞–≤–Ω–æ–≤–µ—à–µ–Ω–Ω—ã–µ –ø—Ä–∏ –ª—é–±—ã—Ö –∫—Ä–∏–∑–∏—Å–∞—Ö –∫–∞–∫ —Å–∫–∞–ª—ã. –ò –∏–º–µ–Ω–Ω–æ —ç—Ç–∞ '
                                              '—É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –Ω–∞—Å –≤—Å–µ—Ö –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç.\n'
                                              '\n'
                                              '–°–∞–º–æ–µ –≤—Ä–µ–º—è –ø–æ–ª—É—á–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏: –ø—Ä–æ–∫–∞—á–∞—Ç—å –≤ —Å–µ–±–µ –≤—Å–µ —Å—Ç–∏—Ö–∏–∏ –∏ '
                                              '–ø—Ä–æ–¥–ª–∏—Ç—å –ª–µ—Ç–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–µ –¥–µ–Ω—å–∫–∏.\n'
                                              '\n'
                                              '–°–ø—Ä–∞–≤–∞ —Å–Ω–∏–∑—É –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–∫—Ä–æ–µ—Ç –º–µ–Ω—é, –Ω–∞–∂–º–∏ –µ—ë!_\n',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
        else:
            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id, '_–ú–Ω–µ –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ —Ç–≤–æ–π_ *–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞*\n'
                             , parse_mode="Markdown")
            bot.register_next_step_handler(message, name)
    except Exception as error:
        print(f'start: {error}')
        bot.register_next_step_handler(message, name)


# -------------–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å', content_types=['text'])
def miss(message):
    try:
        bot.send_message(message.chat.id, '_–†–µ—à–∏–ª –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ? –ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ–π—Ç–∏ –µ–≥–æ '
                                          '–ø–æ–∑–∂–µ, –∞ —Å–µ–π—á–∞—Å –≤—ã–±–∏—Ä–∞–π –Ω–æ–≤–æ–µ!_\n',
                         parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
    except Exception as error:
        print(f'miss: {error}')
        bot.register_next_step_handler(message, miss)


# -------------–û–≥–æ–Ω—å 1---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–æ–≥–æ–Ω—å 1' or message.text.lower() == '–æ–≥–æ–Ω—å 1 ‚úÖ',
                     content_types=['text'])
def fire1_1(message):
    try:
        if check(message.from_user, "fire_1_1"):
            if check(message.from_user, "fire_1_2"):
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª. –í—ã–±–∏—Ä–∞–π—Ç–µ –¥—Ä—É–≥–æ–π_',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            else:
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 2_',
                                 parse_mode="Markdown")
                bot.send_sticker(message.chat.id,
                                 'CAACAgIAAxkBAAEKSnZlAhGzFb1BWCzfNqoeKfo9R-uJsAACEjkAArpp-Eub3YPQbW7KUzAE')
                bot.send_message(message.chat.id,
                                 '_–û—Ö —É–∂ —ç—Ç–∏ –ª—é–¥–∏, –æ–Ω–∏ —Ç–∞–∫ –ª—é–±—è—Ç –ø—Ä—è—Ç–∞—Ç—å—Å—è –æ—Ç –º–æ–µ–≥–æ –±—Ä–∞—Ç—Ü–∞ –°–æ–ª–Ω—ã—à–∫–∞ –Ω–∞ —Å–≤–æ–∏—Ö –ø–ª—è–∂–∞—Ö. '
                                 '–ù–æ –∫–∞–∂–µ—Ç—Å—è —ç—Ç–∏ –ø–æ–¥–∞—é—Ç —Å–≤–æ–∏–º–∏ –∑–æ–Ω—Ç–∏–∫–∞–º–∏ –∫–∞–∫–∏–µ-—Ç–æ —Å–∏–≥–Ω–∞–ª—ã. –ß—Ç–æ –∂–µ –æ–Ω–∏ –≥–æ–≤–æ—Ä—è—Ç?\n'
                                 '\n'
                                 '–û—Ç–≤–µ—Ç –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –û—Ç–≤–µ—Ç_\n'
                                 , parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                bot.send_animation(message.chat.id,
                                   'CgACAgIAAxkBAANkZQNFLNq22IubCJZooUDvhgLzHR0AAug_AALfaRhIfD7X0-4D5UwwBA')
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAANlZQNFU4MEVCoQ6nRkp6eJ8DpkoTIAArTMMRvfaRhIH4jTywJuzJ4BAAMCAAN5AAMwBA')
                bot.register_next_step_handler(message, fire1_3)
        else:
            bot.send_message(message.chat.id,
                             '_–§–æ—Ç–æ –û–≥–æ–Ω—å 1_',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
            # bot.send_photo(message.chat.id,
            #                'AgACAgIAAxkBAAIBdGQUSliGbcKAQZ5N3Y3fBbdt3WqeAAIQxjEboWegSOJiFHAp2QmyAQADAgADeQADLwQ',)
            bot.register_next_step_handler(message, fire1_2)
    except Exception as error:
        print(f'fire1_1: {error}')
        bot.register_next_step_handler(message, fire1_1)


def fire1_2(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['–∑–∞—â–∏—Ç–∞']:
            change(message.from_user, "fire_1_1")
            bot.send_sticker(message.chat.id,
                             'CAACAgIAAxkBAAEKSnZlAhGzFb1BWCzfNqoeKfo9R-uJsAACEjkAArpp-Eub3YPQbW7KUzAE')
            bot.send_message(message.chat.id,
                             '_–û—Ö —É–∂ —ç—Ç–∏ –ª—é–¥–∏, –æ–Ω–∏ —Ç–∞–∫ –ª—é–±—è—Ç –ø—Ä—è—Ç–∞—Ç—å—Å—è –æ—Ç –º–æ–µ–≥–æ –±—Ä–∞—Ç—Ü–∞ –°–æ–ª–Ω—ã—à–∫–∞ –Ω–∞ —Å–≤–æ–∏—Ö –ø–ª—è–∂–∞—Ö. '
                             '–ù–æ –∫–∞–∂–µ—Ç—Å—è —ç—Ç–∏ –ø–æ–¥–∞—é—Ç —Å–≤–æ–∏–º–∏ –∑–æ–Ω—Ç–∏–∫–∞–º–∏ –∫–∞–∫–∏–µ-—Ç–æ —Å–∏–≥–Ω–∞–ª—ã. –ß—Ç–æ –∂–µ –æ–Ω–∏ –≥–æ–≤–æ—Ä—è—Ç?\n'
                             '\n'
                             '–û—Ç–≤–µ—Ç –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –û—Ç–≤–µ—Ç_\n'
                             , parse_mode="Markdown")
            bot.send_animation(message.chat.id,
                               'CgACAgIAAxkBAANkZQNFLNq22IubCJZooUDvhgLzHR0AAug_AALfaRhIfD7X0-4D5UwwBA')
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAANlZQNFU4MEVCoQ6nRkp6eJ8DpkoTIAArTMMRvfaRhIH4jTywJuzJ4BAAMCAAN5AAMwBA'
                           , reply_markup=keyboard.keyboard_miss())
            bot.register_next_step_handler(message, fire1_3)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, fire1_2)
    except Exception as error:
        print(f'fire1_2: {error}')
        bot.register_next_step_handler(message, fire1_2)


def fire1_3(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['–∂–∞—Ä–∫–æ']:
            change(message.from_user, "fire_1_2")
            bot.send_message(message.chat.id,
                             '_–ú–æ–ª–æ–¥—Ü—ã. –í—ã –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ –æ—Ç–∫—Ä—ã—Ç–∏—é –ø–æ—Ä—Ç–∞–ª–∞ –≤ –ª–µ—Ç–æ_ üëçüèº _–û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –º–µ–Ω—é –∏ '
                             '–ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ!_\n'
                             , parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            bot.send_sticker(message.chat.id, get_need_sticker(message, 'fire'))
            if check_final(message.from_user):
                end(message)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, fire1_3)
    except Exception as error:
        print(f'fire1_3: {error}')
        bot.register_next_step_handler(message, fire1_3)


# -------------–û–≥–æ–Ω—å 2---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–æ–≥–æ–Ω—å 2' or message.text.lower() == '–æ–≥–æ–Ω—å 2 ‚úÖ',
                     content_types=['text'])
def fire2_1(message):
    try:
        if check(message.from_user, "fire_2_1"):
            if check(message.from_user, "fire_2_2"):
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª. –í—ã–±–∏—Ä–∞–π—Ç–µ –¥—Ä—É–≥–æ–π_',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            else:
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 2_',
                                 parse_mode="Markdown")
                bot.send_sticker(message.chat.id,
                                 'CAACAgIAAxkBAAEKSnZlAhGzFb1BWCzfNqoeKfo9R-uJsAACEjkAArpp-Eub3YPQbW7KUzAE')
                bot.send_message(message.chat.id,
                                 '_–õ–µ—Ç–æ —Å–∞–º–∞—è –∂–∞—Ä–∫–∞—è –ø–æ—Ä–∞, —Ç–∞–∫ —á—Ç–æ –¥–∞–º –≤–∞–º —Å–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å —Ç–µ–º, –∫–∞–∫ –≤—ã '
                                 '–ª—é–¥–∏ –ø—Ä—è—á–µ—Ç–µ—Å—å –æ—Ç –∂–∞—Ä—ã. –ó–∞–ø–∏—Ä–∞–µ—Ç–µ—Å—å –¥–æ–º–∞, —Å–º–æ—Ç—Ä–∏—Ç–µ —Ñ–∏–ª—å–º—ã –ø–æ–¥ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–º. '
                                 '–û—Ç–≥–∞–¥–∞–π—Ç–µ –∫–∞–∫–æ–π —è –∑–∞–≥–∞–¥–∞–ª —Ñ–∏–ª—å–º –ø–æ–º–µ–Ω—è–≤ –≤—Å–µ —Å–ª–æ–≤–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–µ_\n'
                                 , parse_mode="Markdown")
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAANvZQNHMMoteezQaXGwJSjIDh6R0ZsAAsPMMRvfaRhIWN9K1AtLHqYBAAMCAAN5AAMwBA'
                               , reply_markup=keyboard.keyboard_miss())
                bot.register_next_step_handler(message, fire2_3)
        else:
            bot.send_message(message.chat.id,
                             '_–§–æ—Ç–æ –û–≥–æ–Ω—å 2_',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
            # bot.send_photo(message.chat.id,
            #                'AgACAgIAAxkBAAIBdGQUSliGbcKAQZ5N3Y3fBbdt3WqeAAIQxjEboWegSOJiFHAp2QmyAQADAgADeQADLwQ',)
            bot.register_next_step_handler(message, fire2_2)
    except Exception as error:
        print(f'fire2_1: {error}')
        bot.register_next_step_handler(message, fire2_1)


def fire2_2(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['–≤–µ—Å–æ–º–æ—Å—Ç—å']:
            change(message.from_user, "fire_2_1")
            bot.send_sticker(message.chat.id,
                             'CAACAgIAAxkBAAEKSnZlAhGzFb1BWCzfNqoeKfo9R-uJsAACEjkAArpp-Eub3YPQbW7KUzAE')
            bot.send_message(message.chat.id,
                             '_–õ–µ—Ç–æ —Å–∞–º–∞—è –∂–∞—Ä–∫–∞—è –ø–æ—Ä–∞, —Ç–∞–∫ —á—Ç–æ –¥–∞–º –≤–∞–º —Å–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å —Ç–µ–º, –∫–∞–∫ –≤—ã '
                             '–ª—é–¥–∏ –ø—Ä—è—á–µ—Ç–µ—Å—å –æ—Ç –∂–∞—Ä—ã. –ó–∞–ø–∏—Ä–∞–µ—Ç–µ—Å—å –¥–æ–º–∞, —Å–º–æ—Ç—Ä–∏—Ç–µ —Ñ–∏–ª—å–º—ã –ø–æ–¥ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–º. '
                             '–û—Ç–≥–∞–¥–∞–π—Ç–µ –∫–∞–∫–æ–π —è –∑–∞–≥–∞–¥–∞–ª —Ñ–∏–ª—å–º –ø–æ–º–µ–Ω—è–≤ –≤—Å–µ —Å–ª–æ–≤–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–µ_\n'
                             , parse_mode="Markdown")
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAANvZQNHMMoteezQaXGwJSjIDh6R0ZsAAsPMMRvfaRhIWN9K1AtLHqYBAAMCAAN5AAMwBA',
                           reply_markup=keyboard.keyboard_miss())
            bot.register_next_step_handler(message, fire2_3)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, fire2_2)
    except Exception as error:
        print(f'fire2_2: {error}')
        bot.register_next_step_handler(message, fire2_2)


def fire2_3(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['500 –¥–Ω–µ–π –ª–µ—Ç–∞', '–ø—è—Ç—å—Å–æ—Ç –¥–Ω–µ–π –ª–µ—Ç–∞']:

            change(message.from_user, "fire_2_2")
            bot.send_message(message.chat.id,
                             '_–ú–æ–ª–æ–¥—Ü—ã. –í—ã –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ –æ—Ç–∫—Ä—ã—Ç–∏—é –ø–æ—Ä—Ç–∞–ª–∞ –≤ –ª–µ—Ç–æ_ üëçüèº _–û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –º–µ–Ω—é –∏ '
                             '–ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ!_\n'
                             , parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            bot.send_sticker(message.chat.id, get_need_sticker(message, 'fire'))
            if check_final(message.from_user):
                end(message)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, fire2_3)
    except Exception as error:
        print(f'fire2_3: {error}')
        bot.register_next_step_handler(message, fire2_3)


# -------------–û–≥–æ–Ω—å 3---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–æ–≥–æ–Ω—å 3' or message.text.lower() == '–æ–≥–æ–Ω—å 3 ‚úÖ',
                     content_types=['text'])
def fire3_1(message):
    try:
        if check(message.from_user, "fire_3_1"):
            if check(message.from_user, "fire_3_2"):
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª. –í—ã–±–∏—Ä–∞–π—Ç–µ –¥—Ä—É–≥–æ–π_',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            else:
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 2_',
                                 parse_mode="Markdown")
                bot.send_sticker(message.chat.id,
                                 'CAACAgIAAxkBAAEKSnZlAhGzFb1BWCzfNqoeKfo9R-uJsAACEjkAArpp-Eub3YPQbW7KUzAE')
                bot.send_message(message.chat.id,
                                 '_–ù–∞—Å—Ç–æ—è—â–∏–µ –∫–æ–ª–ª–µ–≥–∏ –¥–æ–ª–∂–Ω—ã –ø–æ–Ω–∏–º–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ! –ò –¥–∞–∂–µ –Ω–∞ —è–∑—ã–∫–µ '
                                 '—ç–º–æ–¥–∑–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–Ω—è—Ç—å, –∫—Ç–æ –∂–µ —Ç—É—Ç –∑–∞–≥–∞–¥–∞–Ω!_\n'
                                 , parse_mode="Markdown")
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAANwZQNHcAQDoFhSKCl858XEk2KK8D4AAsTMMRvfaRhIYfRxE9YEJDcBAAMCAAN5AAMwBA',
                               reply_markup=keyboard.keyboard_miss())
                bot.register_next_step_handler(message, fire3_3)
        else:
            bot.send_message(message.chat.id,
                             '_–§–æ—Ç–æ –û–≥–æ–Ω—å 3_',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
            # bot.send_photo(message.chat.id,
            #                'AgACAgIAAxkBAAIBdGQUSliGbcKAQZ5N3Y3fBbdt3WqeAAIQxjEboWegSOJiFHAp2QmyAQADAgADeQADLwQ',)
            bot.register_next_step_handler(message, fire3_2)
    except Exception as error:
        print(f'fire3_1: {error}')
        bot.register_next_step_handler(message, fire3_1)


def fire3_2(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å']:
            change(message.from_user, "fire_3_1")
            bot.send_sticker(message.chat.id,
                             'CAACAgIAAxkBAAEKSnZlAhGzFb1BWCzfNqoeKfo9R-uJsAACEjkAArpp-Eub3YPQbW7KUzAE')
            bot.send_message(message.chat.id,
                             '_–ù–∞—Å—Ç–æ—è—â–∏–µ –∫–æ–ª–ª–µ–≥–∏ –¥–æ–ª–∂–Ω—ã –ø–æ–Ω–∏–º–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ! –ò –¥–∞–∂–µ –Ω–∞ —è–∑—ã–∫–µ '
                             '—ç–º–æ–¥–∑–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–Ω—è—Ç—å, –∫—Ç–æ –∂–µ —Ç—É—Ç –∑–∞–≥–∞–¥–∞–Ω!_\n'
                             , parse_mode="Markdown")
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAANwZQNHcAQDoFhSKCl858XEk2KK8D4AAsTMMRvfaRhIYfRxE9YEJDcBAAMCAAN5AAMwBA',
                           reply_markup=keyboard.keyboard_miss())
            bot.register_next_step_handler(message, fire3_3)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, fire3_2)
    except Exception as error:
        print(f'fire3_2: {error}')
        bot.register_next_step_handler(message, fire3_2)


def fire3_3(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['–∫—É—Ä—á–∞—Ç–æ–≤']:

            change(message.from_user, "fire_3_2")
            bot.send_message(message.chat.id,
                             '_–ú–æ–ª–æ–¥—Ü—ã. –í—ã –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ –æ—Ç–∫—Ä—ã—Ç–∏—é –ø–æ—Ä—Ç–∞–ª–∞ –≤ –ª–µ—Ç–æ_  üëçüèº _–û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –º–µ–Ω—é –∏ '
                             '–ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ!_\n'
                             , parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            bot.send_sticker(message.chat.id, get_need_sticker(message, 'fire'))
            if check_final(message.from_user):
                end(message)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, fire3_3)
    except Exception as error:
        print(f'fire3_3: {error}')
        bot.register_next_step_handler(message, fire3_3)


# -------------–í–æ–∑–¥—É—Ö 1---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–≤–æ–∑–¥—É—Ö 1' or message.text.lower() == '–≤–æ–∑–¥—É—Ö 1 ‚úÖ',
                     content_types=['text'])
def air1_1(message):
    try:
        if check(message.from_user, "air_1_1"):
            if check(message.from_user, "air_1_2"):
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª. –í—ã–±–∏—Ä–∞–π—Ç–µ –¥—Ä—É–≥–æ–π_',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            else:
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 2_',
                                 parse_mode="Markdown")
                bot.send_sticker(message.chat.id,
                                 'CAACAgIAAxkBAAEKSnplAhG4q6JXZwisEN6tV5PuwoVTigACWjYAAtua-UtLaF6wxMrMaTAE')
                bot.send_message(message.chat.id,
                                 '_–°–ª—ã—à–∏—Ç–µ? –í–µ—Ç–µ—Ä –¥–æ–Ω–æ—Å–∏—Ç –Ω–æ—Ç—ã –æ—á–µ–Ω—å –∑–Ω–∞–∫–æ–º–æ–π –ø–µ—Å–Ω–∏ –∏–∑ –ø–ª—è–∂–Ω–æ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—á–∏–∫–∞\! '
                                 '–ù–æ —á—Ç–æ –∂–µ —ç—Ç–æ –∑–∞ –ø–µ—Å–Ω—è?_\n'
                                 '\n'
                                 '_–û—Ç–≤–µ—Ç –ø–∏—à–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: *–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å\_–ù–∞–∑–≤–∞–Ω–∏–µ*_'
                                 , parse_mode="MarkdownV2")
                bot.send_audio(message.chat.id,
                               'CQACAgIAAxkBAANhZQNEI83wNmfl0nZ-X52gQ62yHRQAAtc_AALfaRhIY51RdvHwfhEwBA',
                               reply_markup=keyboard.keyboard_miss())
                bot.register_next_step_handler(message, air1_3)
        else:
            bot.send_message(message.chat.id,
                             '_–§–æ—Ç–æ –í–æ–∑–¥—É—Ö 1_',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
            # bot.send_photo(message.chat.id,
            #                'AgACAgIAAxkBAAIBdGQUSliGbcKAQZ5N3Y3fBbdt3WqeAAIQxjEboWegSOJiFHAp2QmyAQADAgADeQADLwQ',)
            bot.register_next_step_handler(message, air1_2)
    except Exception as error:
        print(f'air1_1: {error}')
        bot.register_next_step_handler(message, air1_1)


def air1_2(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['—Å–æ–≤–µ—Å—Ç—å']:
            change(message.from_user, "air_1_1")
            bot.send_sticker(message.chat.id,
                             'CAACAgIAAxkBAAEKSnplAhG4q6JXZwisEN6tV5PuwoVTigACWjYAAtua-UtLaF6wxMrMaTAE')
            bot.send_message(message.chat.id,
                             '_–°–ª—ã—à–∏—Ç–µ? –í–µ—Ç–µ—Ä –¥–æ–Ω–æ—Å–∏—Ç –Ω–æ—Ç—ã –æ—á–µ–Ω—å –∑–Ω–∞–∫–æ–º–æ–π –ø–µ—Å–Ω–∏ –∏–∑ –ø–ª—è–∂–Ω–æ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—á–∏–∫–∞\! '
                             '–ù–æ —á—Ç–æ –∂–µ —ç—Ç–æ –∑–∞ –ø–µ—Å–Ω—è?_\n'
                             '\n'
                             '_–û—Ç–≤–µ—Ç –ø–∏—à–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: *–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å\_–ù–∞–∑–≤–∞–Ω–∏–µ*_'
                             , parse_mode="MarkdownV2")
            bot.send_audio(message.chat.id,
                           'CQACAgIAAxkBAANhZQNEI83wNmfl0nZ-X52gQ62yHRQAAtc_AALfaRhIY51RdvHwfhEwBA',
                           reply_markup=keyboard.keyboard_miss())
            bot.register_next_step_handler(message, air1_3)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, air1_2)
    except Exception as error:
        print(f'air1_2: {error}')
        bot.register_next_step_handler(message, air1_2)


def air1_3(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ["–∂–∞–Ω–Ω–∞ —Ñ—Ä–∏—Å–∫–µ_–≥–¥–µ-—Ç–æ –ª–µ—Ç–æ", "–∂–∞–Ω–Ω–∞ —Ñ—Ä–∏—Å–∫–µ_–≥–¥–µ —Ç–æ –ª–µ—Ç–æ", "—Ñ—Ä–∏—Å–∫–µ_–ª–µ—Ç–æ"
            , "—Ñ—Ä–∏—Å–∫–µ_–≥–¥–µ —Ç–æ –ª–µ—Ç–æ", "—Ñ—Ä–∏—Å–∫–µ_–≥–¥–µ-—Ç–æ –ª–µ—Ç–æ", "–∂–∞–Ω–Ω–∞ —Ñ—Ä–∏—Å–∫–µ –ª–µ—Ç–æ", "–∂–∞–Ω–Ω–∞ —Ñ—Ä–∏—Å–∫–µ_–ª–µ—Ç–æ"]:

            change(message.from_user, "air_1_2")
            bot.send_audio(message.chat.id,
                           'CQACAgIAAxkBAANiZQNEaOphDH5Twf4noQteSyvOHtwAAts_AALfaRhILhxi1CN29JEwBA')
            bot.send_message(message.chat.id,
                             '_–ú–æ–ª–æ–¥—Ü—ã. –í—ã –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ –æ—Ç–∫—Ä—ã—Ç–∏—é –ø–æ—Ä—Ç–∞–ª–∞ –≤ –ª–µ—Ç–æ_  üëçüèº _–û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –º–µ–Ω—é –∏ '
                             '–ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ!_\n'
                             , parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            bot.send_sticker(message.chat.id, get_need_sticker(message, 'air'))
            if check_final(message.from_user):
                end(message)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, air1_3)
    except Exception as error:
        print(f'air1_3: {error}')
        bot.register_next_step_handler(message, air1_3)


# -------------–í–æ–∑–¥—É—Ö 2---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–≤–æ–∑–¥—É—Ö 2' or message.text.lower() == '–≤–æ–∑–¥—É—Ö 2 ‚úÖ',
                     content_types=['text'])
def air2_1(message):
    try:
        if check(message.from_user, "air_2_1"):
            if check(message.from_user, "air_2_2"):
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª. –í—ã–±–∏—Ä–∞–π—Ç–µ –¥—Ä—É–≥–æ–π_',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            else:
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 2_',
                                 parse_mode="Markdown")
                bot.send_sticker(message.chat.id,
                                 'CAACAgIAAxkBAAEKSnplAhG4q6JXZwisEN6tV5PuwoVTigACWjYAAtua-UtLaF6wxMrMaTAE')
                bot.send_message(message.chat.id,
                                 '_–í—Å–ø–æ–º–∏–Ω–∞—Ç—å –æ –ª–µ—Ç–µ –º—ã –±—É–¥–µ–º –µ—â–µ –¥–æ–ª–≥–æ, –Ω–æ —á—Ç–æ–±—ã –µ–≥–æ –∑–∞–ø–æ–º–Ω–∏—Ç—å –µ—â–µ –ª—É—á—à–µ –∏ '
                                 '–¥–µ—Ç–∞–ª—å–Ω–µ–µ –ø–∞–º—è—Ç—å –Ω—É–∂–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å! –°–º–æ–∂–µ—Ç–µ –≤—Å–ø–æ–º–Ω–∏—Ç—å, —á—Ç–æ –∂–µ —Å–ø—Ä—è—Ç–∞–Ω–æ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ?_\n'
                                 '\n'
                                 '_–û—Ç–≤–µ—Ç –ø–∏—à–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –û—Ç–≤–µ—Ç_'
                                 , parse_mode="Markdown")
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAANmZQNFwiMCcpqlMiEP4Uge4O8W7PoAArXMMRvfaRhINBbJMhJQdukBAAMCAAN5AAMwBA'
                               , reply_markup=keyboard.keyboard_miss())
                bot.register_next_step_handler(message, air2_3)
        else:
            bot.send_message(message.chat.id,
                             '_–§–æ—Ç–æ –í–æ–∑–¥—É—Ö 2_',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
            # bot.send_photo(message.chat.id,
            #                'AgACAgIAAxkBAAIBdGQUSliGbcKAQZ5N3Y3fBbdt3WqeAAIQxjEboWegSOJiFHAp2QmyAQADAgADeQADLwQ',)
            bot.register_next_step_handler(message, air2_2)
    except Exception as error:
        print(f'air2_1: {error}')
        bot.register_next_step_handler(message, air2_1)


def air2_2(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['–ø—Ä–∏–∑–Ω–∞–Ω–∏–µ']:
            change(message.from_user, "air_2_1")
            bot.send_sticker(message.chat.id,
                             'CAACAgIAAxkBAAEKSnplAhG4q6JXZwisEN6tV5PuwoVTigACWjYAAtua-UtLaF6wxMrMaTAE')
            bot.send_message(message.chat.id,
                             '_–í—Å–ø–æ–º–∏–Ω–∞—Ç—å –æ –ª–µ—Ç–µ –º—ã –±—É–¥–µ–º –µ—â–µ –¥–æ–ª–≥–æ, –Ω–æ —á—Ç–æ–±—ã –µ–≥–æ –∑–∞–ø–æ–º–Ω–∏—Ç—å –µ—â–µ –ª—É—á—à–µ –∏ '
                             '–¥–µ—Ç–∞–ª—å–Ω–µ–µ –ø–∞–º—è—Ç—å –Ω—É–∂–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å! –°–º–æ–∂–µ—Ç–µ –≤—Å–ø–æ–º–Ω–∏—Ç—å, —á—Ç–æ –∂–µ —Å–ø—Ä—è—Ç–∞–Ω–æ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ?_\n'
                             '\n'
                             '_–û—Ç–≤–µ—Ç –ø–∏—à–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –û—Ç–≤–µ—Ç_'
                             , parse_mode="Markdown")
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAANmZQNFwiMCcpqlMiEP4Uge4O8W7PoAArXMMRvfaRhINBbJMhJQdukBAAMCAAN5AAMwBA',
                           reply_markup=keyboard.keyboard_miss())
            bot.register_next_step_handler(message, air2_3)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, air2_2)
    except Exception as error:
        print(f'air2_2: {error}')
        bot.register_next_step_handler(message, air2_2)


def air2_3(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ["–ø–∞–º—è—Ç–Ω–∏–∫", "–ø–∞–º—è—Ç–Ω–∏–∫ —Å–ª–∞–≤—Å–∫–æ–º—É", "—Å–ª–∞–≤—Å–∫–∏–π"]:
            change(message.from_user, "air_2_2")
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAANnZQNF6HUm2q5v8l5E0BHNr_rPXGAAArbMMRvfaRhIwE6RThQPjo8BAAMCAAN5AAMwBA')
            bot.send_message(message.chat.id,
                             '_–ú–æ–ª–æ–¥—Ü—ã. –í—ã –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ –æ—Ç–∫—Ä—ã—Ç–∏—é –ø–æ—Ä—Ç–∞–ª–∞ –≤ –ª–µ—Ç–æ_  üëçüèº _–û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –º–µ–Ω—é –∏ '
                             '–ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ!_\n'
                             , parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            bot.send_sticker(message.chat.id, get_need_sticker(message, 'air'))
            if check_final(message.from_user):
                end(message)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, air2_3)
    except Exception as error:
        print(f'air2_3: {error}')
        bot.register_next_step_handler(message, air2_3)


# -------------–ó–µ–º–ª—è 1---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–∑–µ–º–ª—è 1' or message.text.lower() == '–∑–µ–º–ª—è 1 ‚úÖ',
                     content_types=['text'])
def earth1_1(message):
    try:
        if check(message.from_user, "earth_1_1"):
            if check(message.from_user, "earth_1_2"):
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª. –í—ã–±–∏—Ä–∞–π—Ç–µ –¥—Ä—É–≥–æ–π_',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            else:
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 2_',
                                 parse_mode="Markdown")
                bot.send_sticker(message.chat.id,
                                 'CAACAgIAAxkBAAEKSnhlAhG21UFRc8vSfLg0VPbs6e4kHgACXzYAAkGH-EsS0BG0h5b3iTAE')
                bot.send_message(message.chat.id,
                                 '_–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ –≤—ã –Ω–∞ –ø–ª—è–∂–µ –ø–æ—Ç–µ—Ä—è–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ –±—Ä–æ—à–∫—É –∏ —Ç–µ–ø–µ—Ä—å –≤–∞–º –Ω—É–∂–Ω–æ '
                                 '–ø–æ —Å–≤–æ–∏–º —Å–ª–µ–¥–∞–º –≤—ã—è–≤–∏—Ç—å –º–µ—Å—Ç–æ –ø–æ—Ç–µ—Ä–∏. –î–ª—è —É–¥–æ–±—Å—Ç–≤–∞, –º—ã –ø–æ–¥–µ–ª–∏–ª–∏ –ø–ª—è–∂ –Ω–∞ —Å–µ–∫—Ç–æ—Ä–∞. '
                                 '–†–µ—à–∏–≤ —ç—Ç—É –∑–∞–≥–∞–¥–∫—É, –Ω–∏–∫–∞–∫–∏–µ –ø–æ—Ç–µ—Ä–∏ –Ω–µ –±—É–¥—É—Ç –≤–∞–º —Å—Ç—Ä–∞—à–Ω—ã!_\n'
                                 '\n'
                                 '_–û—Ç–≤–µ—Ç –ø–∏—à–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –û—Ç–≤–µ—Ç_'
                                 , parse_mode="Markdown")
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAANjZQNEsX97dkW853KxjTSK8crnL24AArHMMRvfaRhI_R89gjGad54BAAMCAAN5AAMwBA',
                               reply_markup=keyboard.keyboard_miss())
                bot.register_next_step_handler(message, earth1_3)
        else:
            bot.send_message(message.chat.id,
                             '_–§–æ—Ç–æ –ó–µ–º–ª—è 1_',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
            # bot.send_photo(message.chat.id,
            #                'AgACAgIAAxkBAAIBdGQUSliGbcKAQZ5N3Y3fBbdt3WqeAAIQxjEboWegSOJiFHAp2QmyAQADAgADeQADLwQ',)
            bot.register_next_step_handler(message, earth1_2)
    except Exception as error:
        print(f'earth1_1: {error}')
        bot.register_next_step_handler(message, earth1_1)


def earth1_2(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['–≤—Ä–µ–º—è']:
            change(message.from_user, "earth_1_1")
            bot.send_sticker(message.chat.id,
                             'CAACAgIAAxkBAAEKSnhlAhG21UFRc8vSfLg0VPbs6e4kHgACXzYAAkGH-EsS0BG0h5b3iTAE')
            bot.send_message(message.chat.id,
                             '_–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ –≤—ã –Ω–∞ –ø–ª—è–∂–µ –ø–æ—Ç–µ—Ä—è–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ –±—Ä–æ—à–∫—É –∏ —Ç–µ–ø–µ—Ä—å –≤–∞–º –Ω—É–∂–Ω–æ '
                             '–ø–æ —Å–≤–æ–∏–º —Å–ª–µ–¥–∞–º –≤—ã—è–≤–∏—Ç—å –º–µ—Å—Ç–æ –ø–æ—Ç–µ—Ä–∏. –î–ª—è —É–¥–æ–±—Å—Ç–≤–∞, –º—ã –ø–æ–¥–µ–ª–∏–ª–∏ –ø–ª—è–∂ –Ω–∞ —Å–µ–∫—Ç–æ—Ä–∞. '
                             '–†–µ—à–∏–≤ —ç—Ç—É –∑–∞–≥–∞–¥–∫—É, –Ω–∏–∫–∞–∫–∏–µ –ø–æ—Ç–µ—Ä–∏ –Ω–µ –±—É–¥—É—Ç –≤–∞–º —Å—Ç—Ä–∞—à–Ω—ã!_\n'
                             '\n'
                             '_–û—Ç–≤–µ—Ç –ø–∏—à–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –û—Ç–≤–µ—Ç_'
                             , parse_mode="Markdown")
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAANjZQNEsX97dkW853KxjTSK8crnL24AArHMMRvfaRhI_R89gjGad54BAAMCAAN5AAMwBA',
                           reply_markup=keyboard.keyboard_miss())
            bot.register_next_step_handler(message, earth1_3)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, earth1_2)
    except Exception as error:
        print(f'earth1_2: {error}')
        bot.register_next_step_handler(message, earth1_2)


def earth1_3(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ["–≥–∏–º–Ω"]:
            change(message.from_user, "earth_1_2")
            bot.send_message(message.chat.id,
                             '_–ú–æ–ª–æ–¥—Ü—ã. –í—ã –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ –æ—Ç–∫—Ä—ã—Ç–∏—é –ø–æ—Ä—Ç–∞–ª–∞ –≤ –ª–µ—Ç–æ_  üëçüèº _–û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –º–µ–Ω—é –∏ '
                             '–ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ!_\n'
                             , parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            bot.send_sticker(message.chat.id, get_need_sticker(message, 'earth'))
            if check_final(message.from_user):
                end(message)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, earth1_3)
    except Exception as error:
        print(f'earth1_3: {error}')
        bot.register_next_step_handler(message, earth1_3)


# -------------–ó–µ–º–ª—è 2---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–∑–µ–º–ª—è 2' or message.text.lower() == '–∑–µ–º–ª—è 2 ‚úÖ',
                     content_types=['text'])
def earth2_1(message):
    try:
        if check(message.from_user, "earth_2_1"):
            if check(message.from_user, "earth_2_2"):
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª. –í—ã–±–∏—Ä–∞–π—Ç–µ –¥—Ä—É–≥–æ–π_',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            else:
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 2_',
                                 parse_mode="Markdown")
                bot.send_sticker(message.chat.id,
                                 'CAACAgIAAxkBAAEKSnhlAhG21UFRc8vSfLg0VPbs6e4kHgACXzYAAkGH-EsS0BG0h5b3iTAE')
                bot.send_message(message.chat.id,
                                 '_–ù–µ–π—Ä–æ—Å–µ—Ç–∏ —Å–µ–π—á–∞—Å –æ–∫—Ä—É–∂–∞—é—Ç –Ω–∞—Å –¥–∞–∂–µ –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö, –ø–æ–º–æ–≥–∞—è —Å–æ—Å—Ç–∞–≤–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã'
                                 ' –∏–ª–∏ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—è –∏ –ø–æ–∫–∞–∑—ã–≤–∞—è –∫—Ä–∞—Å–∏–≤—ã–µ –º–µ—Å—Ç–∞.\n'
                                 '–ó–¥–µ—Å—å –Ω–µ–π—Ä–æ—Å–µ—Ç—å –ø–æ–ø—Ä–æ—Å–∏–ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å –∏–∑–≤–µ—Å—Ç–Ω–æ–µ –∫—Ä—ã–ª–∞—Ç–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å–≤—è–∑–∞–Ω–æ '
                                 '—Å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è–º–∏. –ù–∞–ø–∏—à–∏—Ç–µ –∫–∞–∫–æ–µ._\n'
                                 '\n'
                                 '_–û—Ç–≤–µ—Ç –ø—Ä–∏—Å—ã–ª–∞–π—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –ö—Ä—ã–ª–∞—Ç–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ _'
                                 , parse_mode="Markdown")
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAANuZQNHA3LSpjrxNWO2yXHbEgAB8qgLAALCzDEb32kYSMXmjjNkyH-fAQADAgADeQADMAQ'
                               , reply_markup=keyboard.keyboard_miss())
                bot.register_next_step_handler(message, earth2_3)
        else:
            bot.send_message(message.chat.id,
                             '_–§–æ—Ç–æ –ó–µ–º–ª—è 2_',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
            # bot.send_photo(message.chat.id,
            #                'AgACAgIAAxkBAAIBdGQUSliGbcKAQZ5N3Y3fBbdt3WqeAAIQxjEboWegSOJiFHAp2QmyAQADAgADeQADLwQ',)
            bot.register_next_step_handler(message, earth2_2)
    except Exception as error:
        print(f'earth2_1: {error}')
        bot.register_next_step_handler(message, earth2_1)


def earth2_2(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['–∏–Ω–Ω–æ–≤–∞—Ü–∏—è']:
            change(message.from_user, "earth_2_1")
            bot.send_sticker(message.chat.id,
                             'CAACAgIAAxkBAAEKSnhlAhG21UFRc8vSfLg0VPbs6e4kHgACXzYAAkGH-EsS0BG0h5b3iTAE')
            bot.send_message(message.chat.id,
                             '_–ù–µ–π—Ä–æ—Å–µ—Ç–∏ —Å–µ–π—á–∞—Å –æ–∫—Ä—É–∂–∞—é—Ç –Ω–∞—Å –¥–∞–∂–µ –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö, –ø–æ–º–æ–≥–∞—è —Å–æ—Å—Ç–∞–≤–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã'
                             ' –∏–ª–∏ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—è –∏ –ø–æ–∫–∞–∑—ã–≤–∞—è –∫—Ä–∞—Å–∏–≤—ã–µ –º–µ—Å—Ç–∞.\n'
                             '–ó–¥–µ—Å—å –Ω–µ–π—Ä–æ—Å–µ—Ç—å –ø–æ–ø—Ä–æ—Å–∏–ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å –∏–∑–≤–µ—Å—Ç–Ω–æ–µ –∫—Ä—ã–ª–∞—Ç–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å–≤—è–∑–∞–Ω–æ '
                             '—Å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è–º–∏. –ù–∞–ø–∏—à–∏—Ç–µ –∫–∞–∫–æ–µ._\n'
                             '\n'
                             '_–û—Ç–≤–µ—Ç –ø—Ä–∏—Å—ã–ª–∞–π—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –ö—Ä—ã–ª–∞—Ç–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ _'
                             , parse_mode="Markdown")
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAANuZQNHA3LSpjrxNWO2yXHbEgAB8qgLAALCzDEb32kYSMXmjjNkyH-fAQADAgADeQADMAQ',
                           reply_markup=keyboard.keyboard_miss())
            bot.register_next_step_handler(message, earth2_3)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, earth2_2)
    except Exception as error:
        print(f'earth2_2: {error}')
        bot.register_next_step_handler(message, earth2_2)


def earth2_3(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ["–æ–¥–Ω–∞ –Ω–æ–≥–∞ –∑–¥–µ—Å—å, –¥—Ä—É–≥–∞—è —Ç–∞–º","–æ–¥–Ω–∞ –Ω–æ–≥–∞ –∑–¥–µ—Å—å –¥—Ä—É–≥–∞—è —Ç–∞–º"]:
            change(message.from_user, "earth_2_2")
            bot.send_message(message.chat.id,
                             '_–ú–æ–ª–æ–¥—Ü—ã. –í—ã –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ –æ—Ç–∫—Ä—ã—Ç–∏—é –ø–æ—Ä—Ç–∞–ª–∞ –≤ –ª–µ—Ç–æ_  üëçüèº _–û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –º–µ–Ω—é –∏ '
                             '–ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ!_\n'
                             , parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            bot.send_sticker(message.chat.id, get_need_sticker(message, 'earth'))
            if check_final(message.from_user):
                end(message)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, earth2_3)
    except Exception as error:
        print(f'earth2_3: {error}')
        bot.register_next_step_handler(message, earth2_3)


# -------------–ó–µ–º–ª—è 3 (–Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫–µ)---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–∑–µ–º–ª—è 3' or message.text.lower() == '–∑–µ–º–ª—è 3 ‚úÖ',
                     content_types=['text'])
def earth3_1(message):
    try:
        if check(message.from_user, "earth_3_1"):
            if check(message.from_user, "earth_3_2"):
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª. –í—ã–±–∏—Ä–∞–π—Ç–µ –¥—Ä—É–≥–æ–π_',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            else:
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 2_',
                                 parse_mode="Markdown")
                bot.send_sticker(message.chat.id,
                                 'CAACAgIAAxkBAAEKSnhlAhG21UFRc8vSfLg0VPbs6e4kHgACXzYAAkGH-EsS0BG0h5b3iTAE')
                bot.send_message(message.chat.id,
                                 '_–í—ã –¥–∞–≤–Ω–æ —Ö–æ–¥–∏–ª–∏ –≤ –ø–æ—Ö–æ–¥? –ò–ª–∏ –≤–æ–æ–±—â–µ –Ω–µ —Ö–æ–¥–∏–ª–∏? –ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, —Å–µ–π—á–∞—Å –≤–º–µ—Å—Ç–µ'
                                 ' –∫ –Ω–µ–º—É –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º—Å—è. –ù–∞—Å –∂–¥–µ—Ç –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –≥–æ—Ä–∞–º –ö–∞–≤–∫–∞–∑–∞, 2 –Ω–æ—á–∏ —É –æ–∑–µ—Ä–∞, –∂–∞—Ä–∫–∞—è,'
                                 ' –Ω–æ –¥–æ–∂–¥–ª–∏–≤–∞—è –ø–æ–≥–æ–¥–∞, —Ç–∞–∫ —á—Ç–æ –≤–æ–∑—å–º–∏—Ç–µ —Å —Å–æ–±–æ–π –≤—Å–µ, —á—Ç–æ –º–æ–∂–µ—Ç –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è.'
                                 ' –ù–∏–∂–µ –≤ —Å—Ç–∏–∫–µ—Ä–∞—Ö –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –≤–µ—â–∏ –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è, —á–µ—Ç—ã—Ä–µ—Ö –±—É–¥–µ—Ç '
                                 '–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –æ—Å—Ç–∞–ª—å–Ω–æ–µ —É–∂–µ —Å–æ–±—Ä–∞–Ω–æ._'
                                 , parse_mode="Markdown")
                bot.send_sticker(message.chat.id,
                                 'CAACAgIAAxkBAAEKSrdlAievMcMK_16ed7RacF0pzcFZiwACvzUAAhu2-UvUOmjztTLceDAE'
                                 , reply_markup=keyboard.keyboard_miss())
                bot.register_next_step_handler(message, earth3_3)
        else:
            bot.send_message(message.chat.id,
                             '_–§–æ—Ç–æ –ó–µ–º–ª—è 3_',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
            # bot.send_photo(message.chat.id,
            #                'AgACAgIAAxkBAAIBdGQUSliGbcKAQZ5N3Y3fBbdt3WqeAAIQxjEboWegSOJiFHAp2QmyAQADAgADeQADLwQ',)
            bot.register_next_step_handler(message, earth3_2)
    except Exception as error:
        print(f'earth3_1: {error}')
        bot.register_next_step_handler(message, earth3_1)


def earth3_2(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['—Ç–∏–º–±–∏–ª–¥–∏–Ω–≥']:
            change(message.from_user, "earth_3_1")
            bot.send_sticker(message.chat.id,
                             'CAACAgIAAxkBAAEKSnhlAhG21UFRc8vSfLg0VPbs6e4kHgACXzYAAkGH-EsS0BG0h5b3iTAE')
            bot.send_message(message.chat.id,
                             '_–í—ã –¥–∞–≤–Ω–æ —Ö–æ–¥–∏–ª–∏ –≤ –ø–æ—Ö–æ–¥? –ò–ª–∏ –≤–æ–æ–±—â–µ –Ω–µ —Ö–æ–¥–∏–ª–∏? –ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, —Å–µ–π—á–∞—Å –≤–º–µ—Å—Ç–µ'
                             ' –∫ –Ω–µ–º—É –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º—Å—è. –ù–∞—Å –∂–¥–µ—Ç –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –≥–æ—Ä–∞–º –ö–∞–≤–∫–∞–∑–∞, 2 –Ω–æ—á–∏ —É –æ–∑–µ—Ä–∞, –∂–∞—Ä–∫–∞—è,'
                             ' –Ω–æ –¥–æ–∂–¥–ª–∏–≤–∞—è –ø–æ–≥–æ–¥–∞, —Ç–∞–∫ —á—Ç–æ –≤–æ–∑—å–º–∏—Ç–µ —Å —Å–æ–±–æ–π –≤—Å–µ, —á—Ç–æ –º–æ–∂–µ—Ç –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è.'
                             ' –ù–∏–∂–µ –≤ —Å—Ç–∏–∫–µ—Ä–∞—Ö –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –≤–µ—â–∏ –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è, —á–µ—Ç—ã—Ä–µ—Ö –±—É–¥–µ—Ç '
                             '–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –æ—Å—Ç–∞–ª—å–Ω–æ–µ —É–∂–µ —Å–æ–±—Ä–∞–Ω–æ._'
                             , parse_mode="Markdown")
            bot.send_sticker(message.chat.id,
                             'CAACAgIAAxkBAAEKSrdlAievMcMK_16ed7RacF0pzcFZiwACvzUAAhu2-UvUOmjztTLceDAE'
                             , reply_markup=keyboard.keyboard_miss())
            bot.register_next_step_handler(message, earth3_3)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, earth3_2)
    except Exception as error:
        print(f'earth3_2: {error}')
        bot.register_next_step_handler(message, earth3_2)


def earth3_3(message):
    try:
        if message.content_type == 'text':
            if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
                miss(message)
        elif message.content_type == 'sticker':
            if message.sticker.file_unique_id == "AgADBTwAApA4-Es":
                if check_answer(message.chat, 'answer_sticker', "answer_1"):
                    bot.send_message(message.chat.id,
                                     '_–ü–ª–∞–≤–∫–∏ —É–∂–µ –±—ã–ª–∏_',
                                     parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                    bot.register_next_step_handler(message, earth3_3)
                else:
                    bot.send_message(message.chat.id,
                                     '_–ö—É–ø–∞–ª—å–Ω—ã–µ —à–æ—Ä—Ç—ã –≤—Å–µ–≥–¥–∞ –ø—Ä–∏–≥–æ–¥—è—Ç—Å—è –≤ –∂–∞—Ä–∫—É—é –ø–æ–≥–æ–¥–∫—É, —Ç–µ–º –±–æ–ª–µ–µ —É –æ–∑–µ—Ä–∞ '
                                     '–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±—É–¥—É—Ç_',
                                     parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                    change_answer(message.chat, 'answer_sticker', "answer_1")
                    if check_answer_final(message.chat, 'answer_sticker'):
                        final_earth3_3(message)
                    else:
                        bot.register_next_step_handler(message, earth3_3)
            elif message.sticker.file_unique_id == "AgADWzwAAu0E-Us":
                if check_answer(message.chat, 'answer_sticker', "answer_2"):
                    bot.send_message(message.chat.id,
                                     '_–°–ø–∞–ª—å–Ω–∏–∫ —É–∂–µ –±—ã–ª, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ_',
                                     parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                    bot.register_next_step_handler(message, earth3_3)
                else:
                    bot.send_message(message.chat.id,
                                     '_–ö–æ–Ω–µ—á–Ω–æ –¥–∞, –±–µ–∑ —Å–ø–∞–ª—å–Ω–∏–∫–∞ –Ω–∞–º –Ω–µ –æ–±–æ–π—Ç–∏—Å—å._',
                                     parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                    change_answer(message.chat, 'answer_sticker', "answer_2")
                    if check_answer_final(message.chat, 'answer_sticker'):
                        final_earth3_3(message)
                    else:
                        bot.register_next_step_handler(message, earth3_3)
            elif message.sticker.file_unique_id == "AgADcTkAAmo7-Us":
                if check_answer(message.chat, 'answer_sticker', "answer_3"):
                    bot.send_message(message.chat.id,
                                     '_–ù—É –±—ã–ª –∂–µ –ø–æ–≤–µ—Ä–±–∞–Ω–∫, –¥–∞–≤–∞–π –¥—Ä—É–≥–æ–µ_',
                                     parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                    bot.register_next_step_handler(message, earth3_3)
                else:
                    bot.send_message(message.chat.id,
                                     '_–ú–æ—â–Ω—ã–π, –¥—É–º–∞—é –Ω–∞ –ø–∞—Ä—É –¥–Ω–µ–π –µ–≥–æ –¥–æ–ª–∂–Ω–æ —Ö–≤–∞—Ç–∏—Ç—å, —á—Ç–æ–± –Ω–µ –æ—Å—Ç–∞—Ç—å—Å—è –±–µ–∑ —Å–≤—è–∑–∏._',
                                     parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                    change_answer(message.chat, 'answer_sticker', "answer_3")
                    if check_answer_final(message.chat, 'answer_sticker'):
                        final_earth3_3(message)
                    else:
                        bot.register_next_step_handler(message, earth3_3)
            elif message.sticker.file_unique_id == "AgADRjYAAvzQ-Es":
                if check_answer(message.chat, 'answer_sticker', "answer_4"):
                    bot.send_message(message.chat.id,
                                     '_–û–ø—è—Ç—å –¥–æ–∂–¥–µ–≤–∏–∫? –¢—ã —Å–µ—Ä—å–µ–∑–Ω–æ?!_',
                                     parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                    bot.register_next_step_handler(message, earth3_3)
                else:
                    bot.send_message(message.chat.id,
                                     '_–ü–æ—á—Ç–∏ –Ω–µ –∑–∞–Ω–∏–º–∞–µ—Ç –º–µ—Å—Ç–∞ –∏ —Ç–æ—á–Ω–æ –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è –ø—Ä–∏ –Ω–µ–ø–æ–≥–æ–¥–µ, –∫–æ–Ω–µ—á–Ω–æ –±–µ—Ä–µ–º._',
                                     parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                    change_answer(message.chat, 'answer_sticker', "answer_4")
                    if check_answer_final(message.chat, 'answer_sticker'):
                        final_earth3_3(message)
                    else:
                        bot.register_next_step_handler(message, earth3_3)
            elif message.sticker.file_unique_id == "AgADjTsAAgYhEUg":
                bot.send_message(message.chat.id,
                                 '_–ö–∞–∫–æ–π –µ—â–µ —Å–Ω–æ—É–±–æ—Ä–¥, –≤—ã —Å–º–µ–µ—Ç–µ—Å—å? –ù–µ —Ñ–µ–≤—Ä–∞–ª—å –º–µ—Å—è—Ü –∂–µ._',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                bot.register_next_step_handler(message, earth3_3)
            elif message.sticker.file_unique_id == "AgAD5TwAAsay-Es":
                bot.send_message(message.chat.id,
                                 '_–ù–µ —Å–∞–º–∞—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è –≤–µ—â—å –≤ –ø–æ—Ö–æ–¥–µ, –¥—É–º–∞—é –ª—É—á—à–µ –µ–≥–æ –≤—Å–µ –∂–µ –æ—Å—Ç–∞–≤–∏—Ç—å._',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                bot.register_next_step_handler(message, earth3_3)
            elif message.sticker.file_unique_id == "AgADqj0AAjzS-Es":
                bot.send_message(message.chat.id,
                                 '_–õ–∞–¥–Ω–æ –±—ã –µ—â–µ –ø–ª–∞—Å—Ç–∏–∫–æ–≤–∞—è –∏–ª–∏ –∂–µ–ª–µ–∑–Ω–∞—è –±—ã–ª–∞, –Ω–æ —Ñ–∞—Ä—Ñ–æ—Ä? –ù–µ—Ç —É–∂, —É –Ω–∞—Å —Å —Å–æ–±–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ—Å—É–¥–∞ –±—É–¥–µ—Ç._',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                bot.register_next_step_handler(message, earth3_3)
            elif message.sticker.file_unique_id == "AgADqDYAAqwQ-Es":
                bot.send_message(message.chat.id,
                                 '_–û–Ω –∫–æ–Ω–µ—á–Ω–æ –ø–æ–ª–µ–∑–µ–Ω –ø—Ä–∏ –¥–æ–∂–¥–µ, –Ω–æ –≤—Å–µ –∂–µ –≤ –≥–æ—Ä–æ–¥–µ._',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                bot.register_next_step_handler(message, earth3_3)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_message(message.chat.id, random.choice(incorrect))
                bot.register_next_step_handler(message, earth3_3)
        else:
            bot.send_chat_action(message.chat.id, 'typing')
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, earth3_3)

    except Exception as error:
        print(f'earth3_3: {error}')
        bot.register_next_step_handler(message, earth3_3)


def final_earth3_3(message):
    change(message.from_user, "earth_3_2")
    bot.send_message(message.chat.id,
                     '_–ú–æ–ª–æ–¥—Ü—ã. –í—ã –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ –æ—Ç–∫—Ä—ã—Ç–∏—é –ø–æ—Ä—Ç–∞–ª–∞ –≤ –ª–µ—Ç–æ_ üëçüèº '
                     '_–û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –º–µ–Ω—é –∏ –ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ!_', parse_mode="Markdown",
                     reply_markup=keyboard.keyboard(message.from_user))
    bot.send_sticker(message.chat.id, get_need_sticker(message, 'earth'))
    if check_final(message.from_user):
        end(message)


# -------------–í–æ–¥–∞ 1---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–≤–æ–¥–∞ 1' or message.text.lower() == '–≤–æ–¥–∞ 1 ‚úÖ',
                     content_types=['text'])
def water1_1(message):
    try:
        if check(message.from_user, "water_1_1"):
            if check(message.from_user, "water_1_2"):
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª. –í—ã–±–∏—Ä–∞–π—Ç–µ –¥—Ä—É–≥–æ–π_',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            else:
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 2_',
                                 parse_mode="Markdown")
                bot.send_sticker(message.chat.id,
                                 'CAACAgIAAxkBAAEKSnxlAhG781wuehAVBimZSbaSvjnPzwAC9T0AArW8-EtxOhdKihMcPjAE')
                bot.send_message(message.chat.id,
                                 '_–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ –≤—ã –ø–æ–ø–∞–ª–∏ –≤ –≥–æ—Å—Ç–∏ –∫ —Å–≤–æ–µ–º—É –¥—Ä—É–≥—É, –∫–æ—Ç–æ—Ä—ã–π —Ç–æ–ª—å–∫–æ –≤–µ—Ä–Ω—É–ª—Å—è '
                                 '–∏–∑ –æ—Ç–ø—É—Å–∫–∞. –í—ã –æ—á–µ–Ω—å —Ö–æ—Ç–∏—Ç–µ –µ–≥–æ —É–¥–∏–≤–∏—Ç—å, —Ä–∞—Å—Å–∫–∞–∑–∞–≤ –æ –µ–≥–æ –æ—Ç–ø—É—Å–∫–µ –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ. '
                                 '–î–ª—è —ç—Ç–æ–≥–æ –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –≤–µ–¥—å –æ–Ω –µ—â–µ –Ω–µ —É—Å–ø–µ–ª —Ä–∞–∑–æ–±—Ä–∞—Ç—å –≤–µ—â–∏. '
                                 '–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –Ω–∞ –∫–æ–º–Ω–∞—Ç—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–æ–≥–∞–¥–∞—Ç—å—Å—è –≥–¥–µ –±—ã–ª –≤–∞—à –¥—Ä—É–≥._\n'
                                 '\n'
                                 '_–û—Ç–≤–µ—Ç –ø—Ä–∏—Å—ã–ª–∞–π—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: —Å–ª–æ–≤–æ. –í –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å._'
                                 , parse_mode="Markdown")
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAANoZQNGKT3Y5Hee6RgR8PNF0est7j0AArvMMRvfaRhIpF7yIfo3B_gBAAMCAAN5AAMwBA')
                bot.send_document(message.chat.id,
                                  'BQACAgIAAxkBAANpZQNGVUmNoFrI8z47nPvSwxCN_gAD-j8AAt9pGEhZlNSqBhrWKTAE',
                                  reply_markup=keyboard.keyboard_miss())
                bot.register_next_step_handler(message, water1_3)
        else:
            bot.send_message(message.chat.id,
                             '_–§–æ—Ç–æ –í–æ–¥–∞ 1_',
                             parse_mode="Markdown",
                             reply_markup=keyboard.keyboard_miss())
            # bot.send_photo(message.chat.id,
            #                'AgACAgIAAxkBAAIBdGQUSliGbcKAQZ5N3Y3fBbdt3WqeAAIQxjEboWegSOJiFHAp2QmyAQADAgADeQADLwQ',)
            bot.register_next_step_handler(message, water1_2)
    except Exception as error:
        print(f'water1_1: {error}')
        bot.register_next_step_handler(message, water1_1)


def water1_2(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['—Ä–µ–∑—É–ª—å—Ç–∞—Ç']:
            change(message.from_user, "water_1_1")
            bot.send_sticker(message.chat.id,
                             'CAACAgIAAxkBAAEKSnxlAhG781wuehAVBimZSbaSvjnPzwAC9T0AArW8-EtxOhdKihMcPjAE')
            bot.send_message(message.chat.id,
                             '_–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ –≤—ã –ø–æ–ø–∞–ª–∏ –≤ –≥–æ—Å—Ç–∏ –∫ —Å–≤–æ–µ–º—É –¥—Ä—É–≥—É, –∫–æ—Ç–æ—Ä—ã–π —Ç–æ–ª—å–∫–æ –≤–µ—Ä–Ω—É–ª—Å—è '
                             '–∏–∑ –æ—Ç–ø—É—Å–∫–∞. –í—ã –æ—á–µ–Ω—å —Ö–æ—Ç–∏—Ç–µ –µ–≥–æ —É–¥–∏–≤–∏—Ç—å, —Ä–∞—Å—Å–∫–∞–∑–∞–≤ –æ –µ–≥–æ –æ—Ç–ø—É—Å–∫–µ –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ. '
                             '–î–ª—è —ç—Ç–æ–≥–æ –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –≤–µ–¥—å –æ–Ω –µ—â–µ –Ω–µ —É—Å–ø–µ–ª —Ä–∞–∑–æ–±—Ä–∞—Ç—å –≤–µ—â–∏. '
                             '–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –Ω–∞ –∫–æ–º–Ω–∞—Ç—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–æ–≥–∞–¥–∞—Ç—å—Å—è –≥–¥–µ –±—ã–ª –≤–∞—à –¥—Ä—É–≥._\n'
                             '\n'
                             '_–û—Ç–≤–µ—Ç –ø—Ä–∏—Å—ã–ª–∞–π—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: —Å–ª–æ–≤–æ. –í –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å._'
                             , parse_mode="Markdown")
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAANoZQNGKT3Y5Hee6RgR8PNF0est7j0AArvMMRvfaRhIpF7yIfo3B_gBAAMCAAN5AAMwBA')
            bot.send_document(message.chat.id,
                              'BQACAgIAAxkBAANpZQNGVUmNoFrI8z47nPvSwxCN_gAD-j8AAt9pGEhZlNSqBhrWKTAE',
                              reply_markup=keyboard.keyboard_miss())
            bot.register_next_step_handler(message, water1_3)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, water1_2)
    except Exception as error:
        print(f'water1_2: {error}')
        bot.register_next_step_handler(message, water1_2)


def water1_3(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['—Å–æ—á–∏']:
            if check_answer(message.chat, 'answer', "answer_1"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                bot.register_next_step_handler(message, water1_3)
            else:
                bot.send_message(message.chat.id,
                                 '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è!',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                change_answer(message.chat, 'answer', "answer_1")
                if check_answer_final(message.chat, 'answer'):
                    final_water1_3(message)
                else:
                    bot.register_next_step_handler(message, water1_3)
        elif message.text.lower() in ['—Å—É–≤–µ–Ω–∏—Ä', '—Å—É–≤–µ–Ω–∏—Ä–Ω—É—é —Ç–∞—Ä–µ–ª–∫—É', '—Ç–∞—Ä–µ–ª–∫—É', '—Ç–∞—Ä–µ–ª–∫–∞', '—Å—É–≤–µ–Ω–∏—Ä–Ω–∞—è —Ç–∞—Ä–µ–ª–∫–∞']:
            if check_answer(message.chat, 'answer', "answer_2"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                bot.register_next_step_handler(message, water1_3)
            else:
                bot.send_message(message.chat.id,
                                 '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è!',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                change_answer(message.chat, 'answer', "answer_2")
                if check_answer_final(message.chat, 'answer'):
                    final_water1_3(message)
                else:
                    bot.register_next_step_handler(message, water1_3)
        elif message.text.lower() in ['—Å–∞–º–æ–ª—ë—Ç', '–Ω–∞ —Å–∞–º–æ–ª—ë—Ç–µ', '—Å–∞–º–æ–ª—ë—Ç–æ–º', '—Å–∞–º–æ–ª–µ—Ç', '–Ω–∞ —Å–∞–º–æ–ª–µ—Ç–µ', '—Å–∞–º–æ–ª–µ—Ç–æ–º']:
            if check_answer(message.chat, 'answer', "answer_3"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                bot.register_next_step_handler(message, water1_3)
            else:
                bot.send_message(message.chat.id,
                                 '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è!',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                change_answer(message.chat, 'answer', "answer_3")
                if check_answer_final(message.chat, 'answer'):
                    final_water1_3(message)
                else:
                    bot.register_next_step_handler(message, water1_3)
        elif message.text.lower() in ['—Å—ë—Ä—Ñ–∏–Ω–≥', '—Å—ë—Ä—Ñ–∏–Ω–≥–æ–º', '—Å–µ—Ä—Ñ–∏–Ω–≥', '—Å–µ—Ä—Ñ–∏–Ω–≥–æ–º']:
            if check_answer(message.chat, 'answer', "answer_4"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                bot.register_next_step_handler(message, water1_3)
            else:
                bot.send_message(message.chat.id,
                                 '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è!',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                change_answer(message.chat, 'answer', "answer_4")
                if check_answer_final(message.chat, 'answer'):
                    final_water1_3(message)
                else:
                    bot.register_next_step_handler(message, water1_3)
        else:
            bot.send_chat_action(message.chat.id, 'typing')
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, water1_3)

    except Exception as error:
        print(f'water1_3: {error}')
        bot.register_next_step_handler(message, water1_3)


def final_water1_3(message):
    change(message.from_user, "water_1_2")
    bot.send_message(message.chat.id,
                     '_–ú–æ–ª–æ–¥—Ü—ã. –í—ã –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ –æ—Ç–∫—Ä—ã—Ç–∏—é –ø–æ—Ä—Ç–∞–ª–∞ –≤ –ª–µ—Ç–æ_ üëçüèº '
                     '_–û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –º–µ–Ω—é –∏ –ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ!_', parse_mode="Markdown",
                     reply_markup=keyboard.keyboard(message.from_user))
    bot.send_sticker(message.chat.id, get_need_sticker(message, 'water'))
    if check_final(message.from_user):
        end(message)


# -------------–í–æ–¥–∞ 2---------------------------
photo = [
    'AgACAgIAAxkBAANqZQNGoCwXHRbr07W5oO-SNzQKdAkAAr3MMRvfaRhIfD23k19KTnQBAAMCAAN5AAMwBA',
    'AgACAgIAAxkBAANrZQNGrQRQ6Ce-rKXPfDcNSJwAAUB-AAK-zDEb32kYSAUtPL1xtnSxAQADAgADeQADMAQ',
    'AgACAgIAAxkBAANsZQNGwZJahYADIQWkJsRq8uJzWOwAAr_MMRvfaRhIlyURJ6UWXKEBAAMCAAN5AAMwBA',
    'AgACAgIAAxkBAANtZQNG0I8ZjBzlp6G_GzKqjPo2olIAAsDMMRvfaRhItS-J2dm2g-cBAAMCAAN5AAMwBA'
]


@bot.message_handler(func=lambda message: message.text.lower() == '–≤–æ–¥–∞ 2' or message.text.lower() == '–≤–æ–¥–∞ 2 ‚úÖ',
                     content_types=['text'])
def water2_1(message):
    try:
        if check(message.from_user, "water_2_1"):
            if check(message.from_user, "water_2_2"):
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª. –í—ã–±–∏—Ä–∞–π—Ç–µ –¥—Ä—É–≥–æ–π_',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            else:
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 2_',
                                 parse_mode="Markdown")
                bot.send_sticker(message.chat.id,
                                 'CAACAgIAAxkBAAEKSnxlAhG781wuehAVBimZSbaSvjnPzwAC9T0AArW8-EtxOhdKihMcPjAE')
                bot.send_message(message.chat.id,
                                 '_–û–±–æ–∂–∞—é –∫–æ–≥–¥–∞ –∫–æ –º–Ω–µ –ª–µ—Ç–æ–º –ø—Ä–∏–µ–∑–∂–∞–µ—Ç –º–Ω–æ–≥–æ –ª—é–¥–µ–π, –∏–≥—Ä–∞—é—Ç —Å–æ –º–Ω–æ–π –∏ '
                                 '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É—é—Ç—Å—è –Ω–∞ –ø–∞–º—è—Ç—å. –•–æ—á—É –∏ —Å–µ–π—á–∞—Å —á—Ç–æ–±—ã –≤—ã –æ—Å—Ç–∞–≤–∏–ª–∏ –º–Ω–µ —Å–≤–æ–∏ —Ñ–æ—Ç–æ–∫–∞—Ä—Ç–æ—á–∫–∏ '
                                 '–Ω–∞ –ø–∞–º—è—Ç—å, –¥–µ—Ä–∂–∏—Ç–µ –ø—Ä–∏–º–µ—Ä, —Å–¥–µ–ª–∞–π—Ç–µ –ø–æ—Ö–æ–∂–µ–µ —Ñ–æ—Ç–æ –∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Å—é–¥–∞._\n',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
                bot.send_photo(message.chat.id,
                               random.choice(photo))
                bot.register_next_step_handler(message, water2_3)
        else:
            bot.send_message(message.chat.id,
                             '_–§–æ—Ç–æ –í–æ–¥–∞ 2_',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard_miss())
            # bot.send_photo(message.chat.id,
            #                'AgACAgIAAxkBAAIBdGQUSliGbcKAQZ5N3Y3fBbdt3WqeAAIQxjEboWegSOJiFHAp2QmyAQADAgADeQADLwQ',)
            bot.register_next_step_handler(message, water2_2)
    except Exception as error:
        print(f'water2_1: {error}')
        bot.register_next_step_handler(message, water2_1)


def water2_2(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['–≥—Ä—É–ø–ø–∞']:
            change(message.from_user, "water_2_1")
            bot.send_sticker(message.chat.id,
                             'CAACAgIAAxkBAAEKSnxlAhG781wuehAVBimZSbaSvjnPzwAC9T0AArW8-EtxOhdKihMcPjAE')
            bot.send_message(message.chat.id,
                             '_–û–±–æ–∂–∞—é –∫–æ–≥–¥–∞ –∫–æ –º–Ω–µ –ª–µ—Ç–æ–º –ø—Ä–∏–µ–∑–∂–∞–µ—Ç –º–Ω–æ–≥–æ –ª—é–¥–µ–π, –∏–≥—Ä–∞—é—Ç —Å–æ –º–Ω–æ–π –∏ '
                             '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É—é—Ç—Å—è –Ω–∞ –ø–∞–º—è—Ç—å. –•–æ—á—É –∏ —Å–µ–π—á–∞—Å —á—Ç–æ–±—ã –≤—ã –æ—Å—Ç–∞–≤–∏–ª–∏ –º–Ω–µ —Å–≤–æ–∏ —Ñ–æ—Ç–æ–∫–∞—Ä—Ç–æ—á–∫–∏ '
                             '–Ω–∞ –ø–∞–º—è—Ç—å, –¥–µ—Ä–∂–∏—Ç–µ –ø—Ä–∏–º–µ—Ä, —Å–¥–µ–ª–∞–π—Ç–µ –ø–æ—Ö–æ–∂–µ–µ —Ñ–æ—Ç–æ –∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Å—é–¥–∞._\n',
                             parse_mode="Markdown")
            bot.send_photo(message.chat.id,
                           random.choice(photo), reply_markup=keyboard.keyboard_miss())
            bot.register_next_step_handler(message, water2_3)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, water2_2)
    except Exception as error:
        print(f'water2_2: {error}')
        bot.register_next_step_handler(message, water2_2)


def water2_3(message):
    try:
        if message.content_type == 'text':
            if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
                miss(message)
        elif message.content_type == 'photo':
            keyboard_inline = types.InlineKeyboardMarkup()
            confirm_button = types.InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='confirm')
            cancel_button = types.InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='cancel')
            keyboard_inline.row(confirm_button, cancel_button)
            bot.send_photo(admin_id, message.photo[-1].file_id,
                           caption=f'–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É —ç—Ç–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è "{message.from_user.first_name}":\n'
                                   f'\n'
                                   f'–ó–∞–¥–∞–Ω–∏–µ –í–æ–¥–∞ 2:\n'
                                   f'\n'
                                   f'[ {message.chat} ]'
                                   f'#question_4#',
                           reply_markup=keyboard_inline)

            @bot.callback_query_handler(func=lambda call: True)
            def callback_handler(call):
                text = call.message.caption
                match = re.search(r'\[(.*?)\]', text)
                question = re.search(r'\#(.*?)\#', text)
                text = match.group(1).replace("'", "\"")
                text_end = text.replace("None", "null")
                value = json.loads(text_end)
                chat = types.Chat.de_json(value)
                if call.data == 'confirm':
                    bot.send_message(call.from_user.id, f'–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ —É \"{message.from_user.first_name}\"')
                    # bot.delete_message(call.from_user.id, call.message.id)
                    change(message.from_user, "water_2_2")
                    bot.send_message(chat.id,
                                     '_–ú–æ–ª–æ–¥—Ü—ã. –í—ã –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ –æ—Ç–∫—Ä—ã—Ç–∏—é –ø–æ—Ä—Ç–∞–ª–∞ –≤ –ª–µ—Ç–æ_ üëçüèº _–û—Ç–∫—Ä—ã–≤–∞–π –º–µ–Ω—é, '
                                     '–ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ_', parse_mode="Markdown",
                                     reply_markup=keyboard.keyboard(message.from_user))
                    bot.send_sticker(message.chat.id, get_need_sticker(message, 'water'))
                    if check_final(chat):
                        end(message)
                elif call.data == 'cancel':
                    bot.send_message(chat.id, '–•–º.. –¥–∞—é –µ—â—ë —à–∞–Ω—Å üòä')
                    # bot.delete_message(call.from_user.id, call.message.id)
                    bot.send_message(call.from_user.id, f'–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ —É \"{message.from_user.first_name}\"')
                    bot.register_next_step_handler(message, water2_3)
        else:
            bot.send_chat_action(message.chat.id, 'typing')
            bot.send_message(message.chat.id, '–ù—É–∂–Ω–æ —Ñ–æ—Ç–æ\n',
                             parse_mode="Markdown")
            bot.register_next_step_handler(message, water2_3)
    except Exception as error:
        print(f'water2_3: {error}')
        bot.register_next_step_handler(message, water2_3)


def end(message):
    bot.send_sticker(message.chat.id,
                     "CAACAgIAAxkBAAEKSn9lAhICYzX0fZrQl-hmN_Z5TwjkYgACF0YAAqUFEEjYj5lzUIFNxjAE")
    bot.send_sticker(message.chat.id,
                     "CAACAgIAAxkBAAEKSkZlAgABoWZXxef8hvXfWYJNdtSikK4AAio0AAK5UQABSAOfBYq7prLiMAQ")
    bot.send_message(message.chat.id, '_–í–∞—É! –Ø –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ —Ö–æ—Ä–æ—à–æ —Ç—ã —Ä–∞–∑–±–∏—Ä–∞–µ—à—å—Å—è –≤ —Ü–µ–Ω–Ω–æ—Å—Ç—è—Ö –∫–æ–º–ø–∞–Ω–∏–∏.'
                                      ' –Ø —Ç–æ–±–æ–π –≥–æ—Ä–∂—É—Å—å. –ü–æ—Ç–æ–º—É —á—Ç–æ —Å–∞–º–∞—è –≥–ª–∞–≤–Ω–∞—è, –°–ï–ö–†–ï–¢–ù–ê–Ø, —Ü–µ–Ω–Ω–æ—Å—Ç—å –Ω–∞—à–µ–π '
                                      '–∫–æ–º–ø–∞–Ω–∏–∏ ‚Äì –µ—ë –ª—é–¥–∏. –≠—Ç–æ –¢–´!\n'
                                      '\n'
                                      '–í–ø–µ—Ä–µ–¥–∏ –µ—â—ë –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ. –ñ–µ–ª–∞—é —Ç–µ–±–µ –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞ –Ω–∞ –ø–ª—è–∂–µ '
                                      '‚Äú–£–ª–µ—Ç–∞–π‚Äù_\n',
                     parse_mode="Markdown", disable_web_page_preview=True)
    bot.register_next_step_handler(message, end)


def change(user_data, name_colum):
    database = db.Data(user_data)
    database.replace(name_colum)


def change_answer(user_data, table_name, name_colum):
    database = db.Data(user_data)
    database.replace_answer(table_name, name_colum)


def check(user_id, name_colum):
    database = db.Data(user_id)
    number = database.check(name_colum)
    return number


def check_final(user_data):
    database = db.Data(user_data)
    number = database.check_final()
    if all(number):
        database.final()
        return True
    else:
        return False


def check_answer_final(user_data, table_name):
    database = db.Data(user_data)
    number = database.check_answer_final(table_name)
    if all(number):
        return True
    else:
        return False


def check_answer(user_data, table_name, name_colum):
    database = db.Data(user_data)
    answer_bool = database.response_answer(table_name, name_colum)
    if answer_bool[0]:
        return True
    else:
        return False


def collector(message):
    user = db.Data(message.from_user)
    if bool(message.from_user.username) is True:
        name = message.text
        username = f'https://t.me/{message.from_user.username}'
        user.collection(name, username)
    else:
        name = message.text
        user.collection(name)


def set_surname(message):
    user = db.Data(message.from_user)
    surname = message.text
    user.setSurname(surname)


def set_name(message):
    user = db.Data(message.from_user)
    name = message.text
    user.setName(name)


def set_phone(message):
    user = db.Data(message.from_user)
    phone = message.text
    user.setPhone(phone)


def get_need_sticker(message, task):
    user = db.Data(message.from_user)
    table = user.table()
    table = table[2:]
    if task == 'fire':
        completed_tasks = 0

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫, –µ—Å–ª–∏ –æ–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
        if table[4] and table[5]:
            completed_tasks += 1
        if table[14] and table[15]:
            completed_tasks += 1
        if table[18] and table[19]:
            completed_tasks += 1

        # –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
        if completed_tasks == 1:
            return 'CAACAgIAAxkBAAEKSoZlAhN-B_da5hlceynC-wEDMeaybQACdzkAAsJ--EvZihJw4QLHXTAE'
        elif completed_tasks == 2:
            return 'CAACAgIAAxkBAAEKSoplAhPoRT3l4YbhtB_tXRADrBm9RwACIz0AAmkK-UtgOHrpYpDlzDAE'
        elif completed_tasks == 3:
            return 'CAACAgIAAxkBAAEKSohlAhOC-nEhUO-_mUSErpcyVjABygACuzYAAm7k-Ev3812SKKnsUDAE'
        else:
            print("–ù–∏ –æ–¥–Ω–æ –∑–∞–¥–∞–Ω–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")

    elif task == 'earth':
        completed_tasks = 0

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫, –µ—Å–ª–∏ –æ–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
        if table[2] and table[3]:
            completed_tasks += 1
        if table[12] and table[13]:
            completed_tasks += 1
        if table[16] and table[17]:
            completed_tasks += 1

        # –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
        if completed_tasks == 1:
            return 'CAACAgIAAxkBAAEKSoxlAhQQqQZ29KYw2IS-w5_McKrWtQACcTYAAr6f-EtKXDM7ySzwNzAE'
        elif completed_tasks == 2:
            return 'CAACAgIAAxkBAAEKSo5lAhQW7g1qIOLIxxWal_jYao7eXAACKzUAAsej-UvHhW5LHh5tGjAE'
        elif completed_tasks == 3:
            return 'CAACAgIAAxkBAAEKSpBlAhQbxm1kh6jZjj4K-wABnQJKHrgAAn45AALx-fhL6jMmealKI0swBA'
        else:
            print("–ù–∏ –æ–¥–Ω–æ –∑–∞–¥–∞–Ω–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")

    elif task == 'water':
        completed_tasks = 0

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫, –µ—Å–ª–∏ –æ–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
        if table[8] and table[9]:
            completed_tasks += 1
        if table[10] and table[11]:
            completed_tasks += 1

        # –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
        if completed_tasks == 1:
            return 'CAACAgIAAxkBAAEKSpJlAhSyrJTwjLjyxBtspPXnGhmmNwACTzUAAnFj-EsyPQzF5pWYoDAE'
        elif completed_tasks == 2:
            return 'CAACAgIAAxkBAAEKSpRlAhS0-3XNB-Y6UrdcD-wLkQkupQAC7DQAAvmL-EvHjwABBMgz4lMwBA'
        else:
            print("–ù–∏ –æ–¥–Ω–æ –∑–∞–¥–∞–Ω–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")

    elif task == 'air':
        completed_tasks = 0

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫, –µ—Å–ª–∏ –æ–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
        if table[0] and table[1]:
            completed_tasks += 1
        if table[6] and table[7]:
            completed_tasks += 1

        # –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
        if completed_tasks == 1:
            return 'CAACAgIAAxkBAAEKSpZlAhT7rKOUrdqVlXkYpp8PfLixtgACrzAAAmaAAUiZ5OExs-sdeDAE'
        elif completed_tasks == 2:
            return 'CAACAgIAAxkBAAEKSphlAhT-Vn6EjhoBMVehrqjrRITv9QACGDkAAh7i-EuZnloJctgIJjAE'
        else:
            print("–ù–∏ –æ–¥–Ω–æ –∑–∞–¥–∞–Ω–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")


while True:
    try:
        bot.polling(none_stop=True, timeout=10)
    except Exception as error:
        print(error)
        time.sleep(3)

import random
import telebot
from datetime import datetime
import time
import os
from telebot.types import InputFile

import keyboard.main_keyboard as keyboard
import database.db_aa as db
from Export.export import export_data

bot = telebot.TeleBot('6537930874:AAF2-_i2wtR_fECWv3JANrofBLMOibG-WzE')


def timeppp(message):
    newTimeString = datetime.fromtimestamp(message).strftime('%H:%M:%S - %d %b %Z')
    print(newTimeString)


def text_check(text):
    import re
    regex = re.compile('[^a-zA-Z–∞-—è–ê-–Ø0-9]')
    return regex.sub('', text)


incorrect = ['–•–º.. –¥–∞—é –µ—â—ë —à–∞–Ω—Å üòä',
             '–ü—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ—Ä–∞–∑–º—ã—Å–ª–∏—Ç—å –µ—â—ë',
             '–ù—É—É—É—É... –Ω–µ —Ç–æ, —É–≤—ã',
             '–¢–∞–∫-—Ç–∞–∫-—Ç–∞–∫, –ø–æ—á—Ç–∏! –ù–æ –Ω–µ—Ç!',
             '–î–∞–≤–∞–π-–¥–∞–≤–∞–π! –Ø –≤ —Ç–µ–±—è –≤–µ—Ä—é!',
             ]
menedjer = 483241197
menedjer_1 = 703608663


# 703608663
# 64783167

# def handle_callback_query(message):
#     source = None
#     if len(message.text.split()) > 1:
#         source = message.text.split()[1]
#
#     # Determine where the user came from
#     if source == 'source_qr':
#         # User came from a QR code
#         bot.reply_to(message, 'Welcome! You came from a QR code.')
#     elif source == 'source_link':
#         # User came from a link
#         bot.reply_to(message, 'Welcome! You came from a link.')
#     else:
#         # User did not come from a QR code or link
#         bot.reply_to(message, 'Welcome!')

# -------------–ù–∞—á–∞–ª–æ---------------------------
@bot.message_handler(commands=['start'])
def handle_start(message):
    if (message.from_user.id == menedjer):
        bot.send_message(message.chat.id, '–í–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω —ç–∫—Å–ø–æ—Ä—Ç', reply_markup=keyboard.export())
    else:

        info = db.Data(message.from_user)
        info.create()
        bot.send_sticker(message.chat.id,
                         "CAACAgIAAxkBAAEIHd1kDu6_l3UN8qquRGL97sxH0shhzAACGCwAAnCfWEhLkKAVEv7IwC8E")
        bot.send_message(message.chat.id, '_–ü—Ä–∏–≤–µ—Ç, –¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥! –ë–õ–ê –ë–õ–ê –ë–õ–ê_\n'
                                          '\n'
                                          '_–ú—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–ª—è —Ç–µ–±—è –∫–≤–µ—Å—Ç. –í–ø–µ—Ä–µ–¥–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∑–∞–≥–∞–¥–∫–∏ –Ω–∞ –ª–æ–≥–∏–∫—É, –∞ —Ç–∞–∫–∂–µ '
                                          '–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –ø–æ –≤—Å–µ–π —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏._', parse_mode="Markdown")
        bot.send_sticker(message.chat.id,
                         "CAACAgIAAxkBAAEIHd1kDu6_l3UN8qquRGL97sxH0shhzAACGCwAAnCfWEhLkKAVEv7IwC8E")
        bot.send_message(message.chat.id,
                         "_–ü—Ä–µ–∂–¥–µ, —á–µ–º –º—ã –Ω–∞—á–Ω—ë–º, —Ä–∞—Å—Å–∫–∞–∂—É –æ–± –∏–≥—Ä–µ. –í—Å—ë –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ:_\n"
                         "\n"
                         "_1. –ö–∞–∂–¥—ã–π –∏–≥—Ä–∞–µ—Ç —Å–∞–º –∑–∞ —Å–µ–±—è, –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏  –º–æ–∂–Ω–æ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å—Å—è –≤ –ø–∞—Ä—ã. "
                         "–ë–æ—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å 11:00 –¥–æ 16:00\n"
                         "\n"
                         "2. –í–æ–π—Ç–∏ –≤ –∏–≥—Ä—É –º–æ–∂–Ω–æ –≤ —Ä–∞–º–∫–∞—Ö —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, —Ç–∞–∫–∂–µ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ—Å—Ç–∞–≤–∏—Ç—å –µ—ë –Ω–∞ "
                         "–ø–∞—É–∑—É –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∑–¥–Ω–µ–µ!\n"
                         "\n"
                         "3. –¢—ã –ø–æ–ª—É—á–∏—à—å –º–µ–Ω—é —Å –¥–µ—Å—è—Ç—å—é –∑–∞–¥–∞–Ω–∏—è–º–∏. –í—ã–±–∏—Ä–∞–π –ª—é–±–æ–µ –∏ –Ω–∞–∂–∏–º–∞–π –Ω–∞ –Ω–µ–≥–æ\n"
                         "\n"
                         "4. –Ø –ø—Ä–∏—à–ª—é –∫–∞—Ä—Ç—É —Å –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ–º —Ç–æ—á–∫–∏ –æ—Ñ—Ñ–ª–∞–π–Ω-–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ \n"
                         "\n"
                         "5. –ö–æ–≥–¥–∞ –ø—Ä–∏–¥–µ—à—å –Ω–∞ —Ç–æ—á–∫—É, –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –¥–∞—Å—Ç —Ç–µ–±–µ –æ—Ñ—Ñ–ª–∞–π–Ω-–∑–∞–¥–∞–Ω–∏–µ\n"
                         "\n"
                         "6. –ü–æ—Å–ª–µ –µ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ —Å–∫–∞–∂–µ—Ç –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–¥–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç\n"
                         "\n"
                         "7. –ü–æ—Å–ª–µ –∫–æ–¥–∞, —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ. –û—Ç–≤–µ—Ç –≤–ø–∏—à–∏ –≤ —á–∞—Ç\n"
                         "\n"
                         "8. –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è –æ–¥–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ—è–≤–∏—Ç—Å—è –≥–∞–ª–æ—á–∫–∞ –æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏\n"
                         "\n"
                         "9. –ó–∞–¥–∞–Ω–∏–µ –º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é\n"
                         "\n"
                         "–ó–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–¥–∞–Ω–∏–π, —Ç—ã –ø–æ–ª—É—á–∏—à—å 10 –ì—Ä–∏–Ω–∫–æ–∏–Ω–æ–≤,–Ω–æ –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–º –Ω—É–∂–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è\n"
                         "\n"
                         "–ü–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Å—è:_ [@blacklist_event](@blacklist_event)\n"
                         "\n"
                         "_–ï—Å–ª–∏ –≤—Å—ë –ø–æ–Ω—è—Ç–Ω–æ, –≤–≤–µ–¥–∏ —Å–≤–æ—é_ *—Ñ–∞–º–∏–ª–∏—é*", parse_mode="Markdown")
        bot.register_next_step_handler(message, surname)
        # bot.send_message(64783167, f'–ë–æ—Ç–∞ –∑–∞–ø—É—Å—Ç–∏–ª: {message.from_user.first_name}, @{message.from_user.username}')
        # bot.send_message(1248171558, f'–ë–æ—Ç–∞ –∑–∞–ø—É—Å—Ç–∏–ª: {message.from_user.first_name}, @{message.from_user.username}')
        # bot.send_message(483241197, f'–ë–æ—Ç–∞ –∑–∞–ø—É—Å—Ç–∏–ª: {message.from_user.first_name}, @{message.from_user.username}')


@bot.message_handler(func=lambda message: message.text.lower() == '—ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö', content_types=['text'])
def export(message):
    try:
        if (message.from_user.id == menedjer):
            excel_name = export_data()
            print(excel_name)
            bot.send_document(message.chat.id, InputFile(excel_name))
            os.remove(excel_name)
    except Exception as error:
        print(f'export: {error}')


@bot.message_handler(content_types=['document', 'photo', 'audio', 'video', 'animation', 'voice'])
def take(message):
    print(message)
    bot.delete_message(message.chat.id, message.message_id)


# -------------–í–≤–æ–¥ –∏–º–µ–Ω–∏---------------------------
def surname(message):
    try:
        if message.content_type == 'text':
            collector(message)
            setSurname(message)
            bot.send_message(message.chat.id,
                             "_–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å_ *–∏–º—è*", parse_mode="Markdown")
            bot.register_next_step_handler(message, name)
        else:
            bot.send_chat_action(message.chat.id, 'typing')
            bot.send_message(message.chat.id, '_–ù–∞–¥–æ –≤–≤–µ—Å—Ç–∏_ *—Ñ–∞–º–∏–ª–∏—é*\n',
                             parse_mode="Markdown")
            bot.register_next_step_handler(message, surname)
    except Exception as error:
        print(f'surname: {error}')
        bot.register_next_step_handler(message, surname)


# -------------–í–≤–æ–¥ —Ç–µ–ª–µ—Ñ–æ–Ω–∞---------------------------
def name(message):
    try:
        if message.content_type == 'text':
            setName(message)
            bot.send_message(message.chat.id,
                             "_–í–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ! –ò –ø–æ—Å–ª–µ–¥–Ω–µ–µ ‚Äì_ *–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞*", parse_mode="Markdown")
            bot.register_next_step_handler(message, start)
        else:
            bot.send_chat_action(message.chat.id, 'typing')
            bot.send_message(message.chat.id, '_–ù–∞–¥–æ –≤–≤–µ—Å—Ç–∏_ *–∏–º—è*\n',
                             parse_mode="Markdown")
            bot.register_next_step_handler(message, name)
    except Exception as error:
        print(f'name: {error}')
        bot.register_next_step_handler(message, name)


# -------------–ù–∞—á–∞–ª–æ---------------------------
def start(message):
    try:
        if message.content_type == 'text':
            setPhone(message)
            bot.send_sticker(message.chat.id,
                             "CAACAgIAAxkBAAEIHzFkDzxFeaWhNjihFqQaSFaZNWMzSAACWyoAAvMreEibkHdAfD2kCS8E")
            bot.send_message(message.chat.id, '_–õ–µ—Ç–æ ‚Äì —É–Ω–∏–∫–∞–ª—å–Ω–∞—è –ø–æ—Ä–∞, –∫–æ–≥–¥–∞ –¥–∞–∂–µ —Å–∞–º—ã–π –∑–∞—è–¥–ª—ã–π –¥–æ–º–æ—Å–µ–¥ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è '
                                              '–Ω–∞ –ø—Ä–∏—Ä–æ–¥—É –∏ –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è. –ò–º–µ–Ω–Ω–æ —Ç–∞–º –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ–ø—ã—Ç,'
                                              ' –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è. –í–æ—Ç —Ç–æ–ª—å–∫–æ —Å–µ–π—á–∞—Å –ø–æ—Ä—Ç–∞–ª –≤ –ª–µ—Ç–æ –∑–∞–∫—Ä—ã—Ç!\n'
                                              '\n'
                                              '–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –µ—â–µ –≤ –æ–¥–Ω–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ, —Å—Ç–æ–ª–∫–Ω—É—Ç—å—Å—è —Å–æ –≤—Å–µ–º–∏ '
                                              '—Å—Ç–∏—Ö–∏—è–º–∏ –∏ –ø—Ä–∏—Ä—É—á–∏—Ç—å –∏—Ö! –í–µ–¥—å –µ—Å—Ç—å —Å—Ö–æ–¥—Å—Ç–≤–∞ –º–µ–∂–¥—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏ –ì—Ä–∏–Ω–∞—Ç–æ–º–∞'
                                              ' –∏ —Å—Ç–∏—Ö–∏—è–º–∏: –æ–¥–∏–Ω —Å –æ–≥–Ω–µ–º –≤ –≥–ª–∞–∑–∞—Ö –±–µ—Ä–µ—Ç—Å—è –∑–∞ –Ω–æ–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã; –¥—Ä—É–≥–æ–π '
                                              '–∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –∏ –ª–µ–≥–∫–∏–π –Ω–∞ –ø–æ–¥—ä–µ–º –∫–∞–∫ –≤–æ–∑–¥—É—à–Ω—ã–µ –ø–æ—Ç–æ–∫–∏; –µ—Å—Ç—å –ª—é–¥–∏, –∫–æ—Ç–æ—Ä—ã—Ö'
                                              ' –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤ —Ä–∞–±–æ—á–µ–º –ø—Ä–æ—Ü–µ—Å—Å–µ –∫–∞–∫ –±—É—Ä–Ω—É—é —Ä–µ–∫—É; –∞ –µ—Å—Ç—å –ª—é–¥–∏-—Ç–∏—Ç–∞–Ω—ã,'
                                              ' —Å–ø–æ–∫–æ–π–Ω—ã–µ –∏ —É—Ä–∞–≤–Ω–æ–≤–µ—à–µ–Ω–Ω—ã–µ –ø—Ä–∏ –ª—é–±—ã—Ö –∫—Ä–∏–∑–∏—Å–∞—Ö –∫–∞–∫ —Å–∫–∞–ª—ã. –ò –∏–º–µ–Ω–Ω–æ —ç—Ç–∞ '
                                              '—É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –Ω–∞—Å –≤—Å–µ—Ö –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç.\n'
                                              '\n'
                                              '–°–∞–º–æ–µ –≤—Ä–µ–º—è –ø–æ–ª—É—á–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏: –ø—Ä–æ–∫–∞—á–∞—Ç—å –≤ —Å–µ–±–µ –≤—Å–µ —Å—Ç–∏—Ö–∏–∏ –∏ '
                                              '–ø—Ä–æ–¥–ª–∏—Ç—å –ª–µ—Ç–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–µ –¥–µ–Ω—å–∫–∏.\n'
                                              '\n'
                                              '–°–ø—Ä–∞–≤–∞ —Å–Ω–∏–∑—É –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–∫—Ä–æ–µ—Ç –º–µ–Ω—é, –Ω–∞–∂–º–∏ –µ—ë!_\n',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
        else:
            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id, '_–ú–Ω–µ –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ —Ç–≤–æ–π_ *–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞*\n'
                             , parse_mode="Markdown")
            bot.register_next_step_handler(message, name)
    except Exception as error:
        print(f'start: {error}')
        bot.register_next_step_handler(message, name)


# -------------–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å', content_types=['text'])
def miss(message):
    try:
        bot.send_message(message.chat.id, '_–†–µ—à–∏–ª –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ? –ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ–π—Ç–∏ –µ–≥–æ '
                                          '–ø–æ–∑–∂–µ, –∞ —Å–µ–π—á–∞—Å –≤—ã–±–∏—Ä–∞–π –Ω–æ–≤–æ–µ!_\n',
                         parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
    except Exception as error:
        print(f'miss: {error}')
        bot.register_next_step_handler(message, miss)


# -------------–û–≥–æ–Ω—å 1---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–æ–≥–æ–Ω—å 1' or message.text.lower() == '–æ–≥–æ–Ω—å 1 ‚úÖ',
                     content_types=['text'])
def fire1_1(message):
    try:
        if check(message.from_user, "fire_1_1"):
            if check(message.from_user, "fire_1_2"):
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª. –í—ã–±–∏—Ä–∞–π—Ç–µ –¥—Ä—É–≥–æ–π_',
                                 parse_mode="Markdown")
            else:
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 2_',
                                 parse_mode="Markdown")
                bot.send_message(message.chat.id,
                                 '_–û—Ö —É–∂ —ç—Ç–∏ –ª—é–¥–∏, –æ–Ω–∏ —Ç–∞–∫ –ª—é–±—è—Ç –ø—Ä—è—Ç–∞—Ç—å—Å—è –æ—Ç –º–æ–µ–≥–æ –±—Ä–∞—Ç—Ü–∞ –°–æ–ª–Ω—ã—à–∫–∞ –Ω–∞ —Å–≤–æ–∏—Ö –ø–ª—è–∂–∞—Ö. '
                                 '–ù–æ –∫–∞–∂–µ—Ç—Å—è —ç—Ç–∏ –ø–æ–¥–∞—é—Ç —Å–≤–æ–∏–º–∏ –∑–æ–Ω—Ç–∏–∫–∞–º–∏ –∫–∞–∫–∏–µ-—Ç–æ —Å–∏–≥–Ω–∞–ª—ã. –ß—Ç–æ –∂–µ –æ–Ω–∏ –≥–æ–≤–æ—Ä—è—Ç?\n'
                                 '\n'
                                 '–û—Ç–≤–µ—Ç –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –û—Ç–≤–µ—Ç_\n'
                                 , parse_mode="Markdown")
                bot.send_animation(message.chat.id,
                                   'AAMCAgADGQEAA4NlAXVjaamg6iMcZJ2F5junybau2gACijUAAttyCEirQ648afbeKgEAB20AAzAE')
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAOEZQF1oHWShV1Rck_ako-srlwsGakAAnfMMRvbcghIdYpfVx2b-iABAAMCAAN5AAMwBA')
                bot.register_next_step_handler(message, fire1_3)
        else:
            bot.send_message(message.chat.id,
                             '_–§–æ—Ç–æ –û–≥–æ–Ω—å 1_',
                             parse_mode="Markdown")
            # bot.send_photo(message.chat.id,
            #                'AgACAgIAAxkBAAIBdGQUSliGbcKAQZ5N3Y3fBbdt3WqeAAIQxjEboWegSOJiFHAp2QmyAQADAgADeQADLwQ',)
            bot.register_next_step_handler(message, fire1_2)
    except Exception as error:
        print(f'fire1_1: {error}')
        bot.register_next_step_handler(message, fire1_1)


def fire1_2(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['–∑–∞—â–∏—Ç–∞']:
            change(message.from_user, "fire_1_1")
            bot.send_message(message.chat.id,
                             '_–û—Ö —É–∂ —ç—Ç–∏ –ª—é–¥–∏, –æ–Ω–∏ —Ç–∞–∫ –ª—é–±—è—Ç –ø—Ä—è—Ç–∞—Ç—å—Å—è –æ—Ç –º–æ–µ–≥–æ –±—Ä–∞—Ç—Ü–∞ –°–æ–ª–Ω—ã—à–∫–∞ –Ω–∞ —Å–≤–æ–∏—Ö –ø–ª—è–∂–∞—Ö. '
                             '–ù–æ –∫–∞–∂–µ—Ç—Å—è —ç—Ç–∏ –ø–æ–¥–∞—é—Ç —Å–≤–æ–∏–º–∏ –∑–æ–Ω—Ç–∏–∫–∞–º–∏ –∫–∞–∫–∏–µ-—Ç–æ —Å–∏–≥–Ω–∞–ª—ã. –ß—Ç–æ –∂–µ –æ–Ω–∏ –≥–æ–≤–æ—Ä—è—Ç?\n'
                             '\n'
                             '–û—Ç–≤–µ—Ç –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –û—Ç–≤–µ—Ç_\n'
                             , parse_mode="Markdown")
            bot.send_animation(message.chat.id,
                               'CgACAgIAAxkBAAP6ZQGC445qkv0soM-YQRWZLmYuS6IAAuQ1AALbcghIP5UtsByzqiUwBA')
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAOEZQF1oHWShV1Rck_ako-srlwsGakAAnfMMRvbcghIdYpfVx2b-iABAAMCAAN5AAMwBA')
            bot.register_next_step_handler(message, fire1_3)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, fire1_2)
    except Exception as error:
        print(f'fire1_2: {error}')
        bot.register_next_step_handler(message, fire1_2)


def fire1_3(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['–∂–∞—Ä–∫–æ']:
            if check_final(message.from_user):
                end(message)
            else:
                change(message.from_user, "fire_1_2")
                bot.send_message(message.chat.id,
                                 '_–ú–æ–ª–æ–¥—Ü—ã. –í—ã –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ –æ—Å–≤–æ–µ–Ω–∏—é –æ—á–µ—Ä–µ–¥–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏_ üëçüèº _–û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –º–µ–Ω—é –∏ '
                                 '–ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ!_\n'
                                 , parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
                bot.send_message(message.chat.id, "–°—Ç–∏–∫–µ—Ä –û–≥–æ–Ω—å 1")
                # bot.send_sticker(message.chat.id,"")
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, fire1_3)
    except Exception as error:
        print(f'fire1_3: {error}')
        bot.register_next_step_handler(message, fire1_3)


# -------------–û–≥–æ–Ω—å 2---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–æ–≥–æ–Ω—å 2' or message.text.lower() == '–æ–≥–æ–Ω—å 2 ‚úÖ',
                     content_types=['text'])
def fire2_1(message):
    try:
        if check(message.from_user, "fire_2_1"):
            if check(message.from_user, "fire_2_2"):
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª. –í—ã–±–∏—Ä–∞–π—Ç–µ –¥—Ä—É–≥–æ–π_',
                                 parse_mode="Markdown")
            else:
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 2_',
                                 parse_mode="Markdown")
                bot.send_message(message.chat.id,
                                 '_–õ–µ—Ç–æ —Å–∞–º–∞—è –∂–∞—Ä–∫–∞—è –ø–æ—Ä–∞, —Ç–∞–∫ —á—Ç–æ –¥–∞–º –≤–∞–º —Å–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å —Ç–µ–º, –∫–∞–∫ –≤—ã '
                                 '–ª—é–¥–∏ –ø—Ä—è—á–µ—Ç–µ—Å—å –æ—Ç –∂–∞—Ä—ã. –ó–∞–ø–∏—Ä–∞–µ—Ç–µ—Å—å –¥–æ–º–∞, —Å–º–æ—Ç—Ä–∏—Ç–µ —Ñ–∏–ª—å–º—ã –ø–æ–¥ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–º. '
                                 '–û—Ç–≥–∞–¥–∞–π—Ç–µ –∫–∞–∫–æ–π —è –∑–∞–≥–∞–¥–∞–ª —Ñ–∏–ª—å–º –ø–æ–º–µ–Ω—è–≤ –≤—Å–µ —Å–ª–æ–≤–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–µ_\n'
                                 , parse_mode="Markdown")
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIBJmUBiugFuCg3G6NpVznbcwjDUffdAALDzDEb23IISJb6zw4DJyZJAQADAgADeQADMAQ')
                bot.register_next_step_handler(message, fire2_3)
        else:
            bot.send_message(message.chat.id,
                             '_–§–æ—Ç–æ –û–≥–æ–Ω—å 2_',
                             parse_mode="Markdown")
            # bot.send_photo(message.chat.id,
            #                'AgACAgIAAxkBAAIBdGQUSliGbcKAQZ5N3Y3fBbdt3WqeAAIQxjEboWegSOJiFHAp2QmyAQADAgADeQADLwQ',)
            bot.register_next_step_handler(message, fire2_2)
    except Exception as error:
        print(f'fire2_1: {error}')
        bot.register_next_step_handler(message, fire2_1)


def fire2_2(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['–≤–µ—Å–æ–º–æ—Å—Ç—å']:
            change(message.from_user, "fire_2_1")
            bot.send_message(message.chat.id,
                             '_–õ–µ—Ç–æ —Å–∞–º–∞—è –∂–∞—Ä–∫–∞—è –ø–æ—Ä–∞, —Ç–∞–∫ —á—Ç–æ –¥–∞–º –≤–∞–º —Å–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å —Ç–µ–º, –∫–∞–∫ –≤—ã '
                             '–ª—é–¥–∏ –ø—Ä—è—á–µ—Ç–µ—Å—å –æ—Ç –∂–∞—Ä—ã. –ó–∞–ø–∏—Ä–∞–µ—Ç–µ—Å—å –¥–æ–º–∞, —Å–º–æ—Ç—Ä–∏—Ç–µ —Ñ–∏–ª—å–º—ã –ø–æ–¥ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–º. '
                             '–û—Ç–≥–∞–¥–∞–π—Ç–µ –∫–∞–∫–æ–π —è –∑–∞–≥–∞–¥–∞–ª —Ñ–∏–ª—å–º –ø–æ–º–µ–Ω—è–≤ –≤—Å–µ —Å–ª–æ–≤–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–µ_\n'
                             , parse_mode="Markdown")
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAIBJmUBiugFuCg3G6NpVznbcwjDUffdAALDzDEb23IISJb6zw4DJyZJAQADAgADeQADMAQ')
            bot.register_next_step_handler(message, fire2_3)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, fire2_2)
    except Exception as error:
        print(f'fire2_2: {error}')
        bot.register_next_step_handler(message, fire2_2)


def fire2_3(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['500 –¥–Ω–µ–π –ª–µ—Ç–∞', '–ø—è—Ç—å—Å–æ—Ç –¥–Ω–µ–π –ª–µ—Ç–∞']:
            if check_final(message.from_user):
                end(message)
            else:
                change(message.from_user, "fire_2_2")
                bot.send_message(message.chat.id,
                                 '_–ú–æ–ª–æ–¥—Ü—ã. –í—ã –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ –æ—Å–≤–æ–µ–Ω–∏—é –æ—á–µ—Ä–µ–¥–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏_ üëçüèº _–û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –º–µ–Ω—é –∏ '
                                 '–ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ!_\n'
                                 , parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
                bot.send_message(message.chat.id, "–°—Ç–∏–∫–µ—Ä –û–≥–æ–Ω—å 2")
                # bot.send_sticker(message.chat.id,"")
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, fire2_3)
    except Exception as error:
        print(f'fire2_3: {error}')
        bot.register_next_step_handler(message, fire2_3)


# -------------–û–≥–æ–Ω—å 3---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–æ–≥–æ–Ω—å 3' or message.text.lower() == '–æ–≥–æ–Ω—å 3 ‚úÖ',
                     content_types=['text'])
def fire3_1(message):
    try:
        if check(message.from_user, "fire_3_1"):
            if check(message.from_user, "fire_3_2"):
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª. –í—ã–±–∏—Ä–∞–π—Ç–µ –¥—Ä—É–≥–æ–π_',
                                 parse_mode="Markdown")
            else:
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 2_',
                                 parse_mode="Markdown")
                bot.send_message(message.chat.id,
                                 '_–ù–∞—Å—Ç–æ—è—â–∏–µ –∫–æ–ª–ª–µ–≥–∏ –¥–æ–ª–∂–Ω—ã –ø–æ–Ω–∏–º–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ! –ò –¥–∞–∂–µ –Ω–∞ —è–∑—ã–∫–µ '
                                 '—ç–º–æ–¥–∑–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–Ω—è—Ç—å, –∫—Ç–æ –∂–µ —Ç—É—Ç –∑–∞–≥–∞–¥–∞–Ω!_\n'
                                 , parse_mode="Markdown")
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIBJ2UBjOZBmaA8TnO-wj-2ed-clBt5AALRzDEb23IISBUkSaZSFL5DAQADAgADeQADMAQ')
                bot.register_next_step_handler(message, fire3_3)
        else:
            bot.send_message(message.chat.id,
                             '_–§–æ—Ç–æ –û–≥–æ–Ω—å 3_',
                             parse_mode="Markdown")
            # bot.send_photo(message.chat.id,
            #                'AgACAgIAAxkBAAIBdGQUSliGbcKAQZ5N3Y3fBbdt3WqeAAIQxjEboWegSOJiFHAp2QmyAQADAgADeQADLwQ',)
            bot.register_next_step_handler(message, fire3_2)
    except Exception as error:
        print(f'fire3_1: {error}')
        bot.register_next_step_handler(message, fire3_1)


def fire3_2(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å']:
            change(message.from_user, "fire_3_1")
            bot.send_message(message.chat.id,
                             '_–õ–µ—Ç–æ —Å–∞–º–∞—è –∂–∞—Ä–∫–∞—è –ø–æ—Ä–∞, —Ç–∞–∫ —á—Ç–æ –¥–∞–º –≤–∞–º —Å–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å —Ç–µ–º, –∫–∞–∫ –≤—ã '
                             '–ª—é–¥–∏ –ø—Ä—è—á–µ—Ç–µ—Å—å –æ—Ç –∂–∞—Ä—ã. –ó–∞–ø–∏—Ä–∞–µ—Ç–µ—Å—å –¥–æ–º–∞, —Å–º–æ—Ç—Ä–∏—Ç–µ —Ñ–∏–ª—å–º—ã –ø–æ–¥ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–º. '
                             '–û—Ç–≥–∞–¥–∞–π—Ç–µ –∫–∞–∫–æ–π —è –∑–∞–≥–∞–¥–∞–ª —Ñ–∏–ª—å–º –ø–æ–º–µ–Ω—è–≤ –≤—Å–µ —Å–ª–æ–≤–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–µ\n'
                             , parse_mode="Markdown")
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAIBJ2UBjOZBmaA8TnO-wj-2ed-clBt5AALRzDEb23IISBUkSaZSFL5DAQADAgADeQADMAQ')
            bot.register_next_step_handler(message, fire3_3)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, fire3_2)
    except Exception as error:
        print(f'fire3_2: {error}')
        bot.register_next_step_handler(message, fire3_2)


def fire3_3(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['–∫—É—Ä—á–∞—Ç–æ–≤']:
            if check_final(message.from_user):
                end(message)
            else:
                change(message.from_user, "fire_3_2")
                bot.send_message(message.chat.id,
                                 '_–ú–æ–ª–æ–¥—Ü—ã. –í—ã –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ –æ—Å–≤–æ–µ–Ω–∏—é –æ—á–µ—Ä–µ–¥–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏_  üëçüèº _–û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –º–µ–Ω—é –∏ '
                                 '–ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ!_\n'
                                 , parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
                bot.send_message(message.chat.id, "–°—Ç–∏–∫–µ—Ä –û–≥–æ–Ω—å 3")
                # bot.send_sticker(message.chat.id,"")
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, fire3_3)
    except Exception as error:
        print(f'fire3_3: {error}')
        bot.register_next_step_handler(message, fire3_3)


# -------------–í–æ–∑–¥—É—Ö 1---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–≤–æ–∑–¥—É—Ö 1' or message.text.lower() == '–≤–æ–∑–¥—É—Ö 1 ‚úÖ',
                     content_types=['text'])
def air1_1(message):
    try:
        if check(message.from_user, "air_1_1"):
            if check(message.from_user, "air_1_2"):
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª. –í—ã–±–∏—Ä–∞–π—Ç–µ –¥—Ä—É–≥–æ–π_',
                                 parse_mode="Markdown")
            else:
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 2_',
                                 parse_mode="Markdown")
                bot.send_message(message.chat.id,
                                 '_–°–ª—ã—à–∏—Ç–µ? –í–µ—Ç–µ—Ä –¥–æ–Ω–æ—Å–∏—Ç –Ω–æ—Ç—ã –æ—á–µ–Ω—å –∑–Ω–∞–∫–æ–º–æ–π –ø–µ—Å–Ω–∏ –∏–∑ –ø–ª—è–∂–Ω–æ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—á–∏–∫–∞! '
                                 '–ù–æ —á—Ç–æ –∂–µ —ç—Ç–æ –∑–∞ –ø–µ—Å–Ω—è?_\n'
                                 '\n'
                                 '_–û—Ç–≤–µ—Ç –ø–∏—à–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å_–ù–∞–∑–≤–∞–Ω–∏–µ_'
                                 , parse_mode="Markdown")
                bot.send_audio(message.chat.id,
                               'CQACAgIAAxkBAAIBKGUBkWuoA1DST-Qzl3RIEpjXTA1qAAJaNgAC23IISBbbTcH2f-itMAQ')
                bot.register_next_step_handler(message, air1_3)
        else:
            bot.send_message(message.chat.id,
                             '_–§–æ—Ç–æ –í–æ–∑–¥—É—Ö 1_',
                             parse_mode="Markdown")
            # bot.send_photo(message.chat.id,
            #                'AgACAgIAAxkBAAIBdGQUSliGbcKAQZ5N3Y3fBbdt3WqeAAIQxjEboWegSOJiFHAp2QmyAQADAgADeQADLwQ',)
            bot.register_next_step_handler(message, air1_2)
    except Exception as error:
        print(f'air1_1: {error}')
        bot.register_next_step_handler(message, air1_1)


def air1_2(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['—Å–æ–≤–µ—Å—Ç—å']:
            change(message.from_user, "air_1_1")
            bot.send_message(message.chat.id,
                             '_–°–ª—ã—à–∏—Ç–µ? –í–µ—Ç–µ—Ä –¥–æ–Ω–æ—Å–∏—Ç –Ω–æ—Ç—ã –æ—á–µ–Ω—å –∑–Ω–∞–∫–æ–º–æ–π –ø–µ—Å–Ω–∏ –∏–∑ –ø–ª—è–∂–Ω–æ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—á–∏–∫–∞! '
                             '–ù–æ —á—Ç–æ –∂–µ —ç—Ç–æ –∑–∞ –ø–µ—Å–Ω—è?_\n'
                             '\n'
                             '_–û—Ç–≤–µ—Ç –ø–∏—à–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å_–ù–∞–∑–≤–∞–Ω–∏–µ_'
                             , parse_mode="Markdown")
            bot.send_audio(message.chat.id,
                           'CQACAgIAAxkBAAIBKGUBkWuoA1DST-Qzl3RIEpjXTA1qAAJaNgAC23IISBbbTcH2f-itMAQ')
            bot.register_next_step_handler(message, air1_3)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, air1_2)
    except Exception as error:
        print(f'air1_2: {error}')
        bot.register_next_step_handler(message, air1_2)


def air1_3(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ["–∂–∞–Ω–Ω–∞ —Ñ—Ä–∏—Å–∫–µ_–≥–¥–µ-—Ç–æ –ª–µ—Ç–æ", "–∂–∞–Ω–Ω–∞ —Ñ—Ä–∏—Å–∫–µ_–≥–¥–µ —Ç–æ –ª–µ—Ç–æ", "—Ñ—Ä–∏—Å–∫–µ_–ª–µ—Ç–æ"
            , "—Ñ—Ä–∏—Å–∫–µ_–≥–¥–µ —Ç–æ –ª–µ—Ç–æ", "—Ñ—Ä–∏—Å–∫–µ_–≥–¥–µ-—Ç–æ –ª–µ—Ç–æ", "–∂–∞–Ω–Ω–∞ —Ñ—Ä–∏—Å–∫–µ –ª–µ—Ç–æ", "–∂–∞–Ω–Ω–∞ —Ñ—Ä–∏—Å–∫–µ_–ª–µ—Ç–æ"]:
            if check_final(message.from_user):
                end(message)
            else:
                change(message.from_user, "air_1_2")
                bot.send_message(message.chat.id,
                                 '_–ú–æ–ª–æ–¥—Ü—ã. –í—ã –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ –æ—Å–≤–æ–µ–Ω–∏—é –æ—á–µ—Ä–µ–¥–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏_  üëçüèº _–û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –º–µ–Ω—é –∏ '
                                 '–ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ!_\n'
                                 , parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
                bot.send_message(message.chat.id, "–°—Ç–∏–∫–µ—Ä –í–æ–∑–¥—É—Ö 1")
                # bot.send_sticker(message.chat.id,"")
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, air1_3)
    except Exception as error:
        print(f'air1_3: {error}')
        bot.register_next_step_handler(message, air1_3)


# -------------–í–æ–∑–¥—É—Ö 2---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–≤–æ–∑–¥—É—Ö 2' or message.text.lower() == '–≤–æ–∑–¥—É—Ö 2 ‚úÖ',
                     content_types=['text'])
def air2_1(message):
    try:
        if check(message.from_user, "air_2_1"):
            if check(message.from_user, "air_2_2"):
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª. –í—ã–±–∏—Ä–∞–π—Ç–µ –¥—Ä—É–≥–æ–π_',
                                 parse_mode="Markdown")
            else:
                bot.send_message(message.chat.id,
                                 '_–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 2_',
                                 parse_mode="Markdown")
                bot.send_message(message.chat.id,
                                 '_–í—Å–ø–æ–º–∏–Ω–∞—Ç—å –æ –ª–µ—Ç–µ –º—ã –±—É–¥–µ–º –µ—â–µ –¥–æ–ª–≥–æ, –Ω–æ —á—Ç–æ–±—ã –µ–≥–æ –∑–∞–ø–æ–º–Ω–∏—Ç—å –µ—â–µ –ª—É—á—à–µ –∏ '
                                 '–¥–µ—Ç–∞–ª—å–Ω–µ–µ –ø–∞–º—è—Ç—å –Ω—É–∂–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å! –°–º–æ–∂–µ—Ç–µ –≤—Å–ø–æ–º–Ω–∏—Ç—å, —á—Ç–æ –∂–µ —Å–ø—Ä—è—Ç–∞–Ω–æ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ?_\n'
                                 '\n'
                                 '_–û—Ç–≤–µ—Ç –ø–∏—à–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –û—Ç–≤–µ—Ç_'
                                 , parse_mode="Markdown")
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIBKWUBlDwcYdUovnrlFX9kTANsuOkaAALzzDEb23IISMu7e96jWgpQAQADAgADeQADMAQ')
                bot.register_next_step_handler(message, air2_3)
        else:
            bot.send_message(message.chat.id,
                             '_–§–æ—Ç–æ –í–æ–∑–¥—É—Ö 2_',
                             parse_mode="Markdown")
            # bot.send_photo(message.chat.id,
            #                'AgACAgIAAxkBAAIBdGQUSliGbcKAQZ5N3Y3fBbdt3WqeAAIQxjEboWegSOJiFHAp2QmyAQADAgADeQADLwQ',)
            bot.register_next_step_handler(message, air2_2)
    except Exception as error:
        print(f'air2_1: {error}')
        bot.register_next_step_handler(message, air2_1)


def air2_2(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ['–ø—Ä–∏–∑–Ω–∞–Ω–∏–µ']:
            change(message.from_user, "air_2_1")
            bot.send_message(message.chat.id,
                             '_–í—Å–ø–æ–º–∏–Ω–∞—Ç—å –æ –ª–µ—Ç–µ –º—ã –±—É–¥–µ–º –µ—â–µ –¥–æ–ª–≥–æ, –Ω–æ —á—Ç–æ–±—ã –µ–≥–æ –∑–∞–ø–æ–º–Ω–∏—Ç—å –µ—â–µ –ª—É—á—à–µ –∏ '
                             '–¥–µ—Ç–∞–ª—å–Ω–µ–µ –ø–∞–º—è—Ç—å –Ω—É–∂–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å! –°–º–æ–∂–µ—Ç–µ –≤—Å–ø–æ–º–Ω–∏—Ç—å, —á—Ç–æ –∂–µ —Å–ø—Ä—è—Ç–∞–Ω–æ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ?_\n'
                             '\n'
                             '_–û—Ç–≤–µ—Ç –ø–∏—à–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –û—Ç–≤–µ—Ç_'
                             , parse_mode="Markdown")
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAIBKWUBlDwcYdUovnrlFX9kTANsuOkaAALzzDEb23IISMu7e96jWgpQAQADAgADeQADMAQ')
            bot.register_next_step_handler(message, air2_3)
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, air2_2)
    except Exception as error:
        print(f'air2_2: {error}')
        bot.register_next_step_handler(message, air2_2)


def air2_3(message):
    try:
        if message.text.lower() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å']:
            miss(message)
        elif message.text.lower() in ["–ø–∞–º—è—Ç–Ω–∏–∫", "–ø–∞–º—è—Ç–Ω–∏–∫ —Å–ª–∞–≤—Å–∫–æ–º—É", "—Å–ª–∞–≤—Å–∫–∏–π"]:
            if check_final(message.from_user):
                end(message)
            else:
                change(message.from_user, "air_2_2")
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIBKmUBlUs-i1Gvx_tLykL6AYYDSYHYAAIGzTEb23IISCjL08JPBWSGAQADAgADeQADMAQ')
                bot.send_message(message.chat.id,
                                 '_–ú–æ–ª–æ–¥—Ü—ã. –í—ã –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ –æ—Å–≤–æ–µ–Ω–∏—é –æ—á–µ—Ä–µ–¥–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏_  üëçüèº _–û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –º–µ–Ω—é –∏ '
                                 '–ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ!_\n'
                                 , parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
                bot.send_message(message.chat.id, "–°—Ç–∏–∫–µ—Ä –í–æ–∑–¥—É—Ö 2")
                # bot.send_sticker(message.chat.id,"")
        else:
            bot.send_message(message.chat.id, random.choice(incorrect))
            bot.register_next_step_handler(message, air2_3)
    except Exception as error:
        print(f'air2_3: {error}')
        bot.register_next_step_handler(message, air2_3)


def antiquiz_two(message):
    try:
        if message.text.lower() in ['–æ—Ö–æ—Ç–Ω–∏–∫–∏ –∑–∞ –ø—Ä–∏–≤–∏–¥–µ–Ω–∏—è–º–∏']:
            bot.send_message(message.chat.id,
                             '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!'
                             , parse_mode="Markdown")
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAIBzWQUVjzao6LFm5nwcv5Cv29JnLJRAAJoxjEboWegSFKMdChU_tgZAQADAgADeQADLwQ',
                           )
            bot.register_next_step_handler(message, antiquiz_three)
        else:
            bot.send_chat_action(message.chat.id, 'typing')
            bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                             parse_mode="Markdown")
            bot.register_next_step_handler(message, antiquiz_two)
    except Exception as error:
        print(f'antiquiz: {error}')
        bot.register_next_step_handler(message, antiquiz_two)


def antiquiz_three(message):
    try:
        if message.text.lower() in ['—Ç–∏—Ç–∞–Ω–∏–∫']:
            bot.send_message(message.chat.id,
                             '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!'
                             , parse_mode="Markdown")
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAIBzmQUV7-hypf9o0xw3rt4fScBm2lSAAJwxjEboWegSJekAAGDl-DLcQEAAwIAA3kAAy8E',
                           )
            bot.register_next_step_handler(message, antiquiz_end)
        else:
            bot.send_chat_action(message.chat.id, 'typing')
            bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                             parse_mode="Markdown")
            bot.register_next_step_handler(message, antiquiz_three)
    except Exception as error:
        print(f'antiquiz_three: {error}')
        bot.register_next_step_handler(message, antiquiz_three)


def antiquiz_end(message):
    try:
        if message.text.lower() in ['—à–µ—Ä–ª–æ–∫',
                                    '—à–µ—Ä–ª–æ–∫ —Ö–æ–ª–º—Å',
                                    '—à–µ—Ä–ª–æ–∫ –±–±—Å',
                                    '—à–µ—Ä–ª–æ–∫ bbc',
                                    'sherlock bbc',
                                    '—à–µ—Ä–ª–æ–∫ —Ö–æ–ª–º—Å –∏ –¥–æ–∫—Ç–æ—Ä –≤–∞—Ç—Å–æ–Ω']:
            change(message.from_user, "antiquiz")
            if check_final(message.from_user):
                end(message)
            else:
                bot.send_message(message.chat.id,
                                 '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
                bot.send_message(message.chat.id,
                                 '*Telegram-–∏–≥—Ä—ã* ‚Äì —ç—Ç–æ:\n'
                                 '\n'
                                 'üî∏ –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä: –Ω–µ –ø–æ—Ö–æ–∂ –Ω–∞ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è '
                                 '(–æ–Ω–ª–∞–π–Ω-–∏–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏–∏, –æ–Ω–ª–∞–π–Ω —Ä–æ–ª–µ–≤—ã–µ –∏–≥—Ä—ã, –æ–Ω–ª–∞–π–Ω-–º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã –∏ —Ç–ø)\n'
                                 'üî∏ –ò–≥—Ä–∞-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä: –º–æ–∂–µ–º –≤—ã–±—Ä–∞—Ç—å —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∏–≥—Ä—ã, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, —Ç–µ–º–∞—Ç–∏–∫—É, '
                                 '–∑–∞–¥–∞–Ω–∏—è, –∏ –¥—Ä—É–≥–∏–µ –¥–æ–ø.—Ñ—É–Ω–∫—Ü–∏–∏\n'
                                 'üî∏ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω–æ—Å—Ç—å: –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –∏–≥—Ä —Å –ø–æ–º–æ—â—å—é Telegram-–±–æ—Ç–∞\n'
                                 'üî∏ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ—Å—Ç—å: –∫–∞–∂–¥–∞—è –∏–≥—Ä–∞ –±—Ä–µ–Ω–¥–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥ –ó–∞–∫–∞–∑—á–∏–∫–∞\n'
                                 'üî∏ –ì–∞—Ä–∞–Ω—Ç–∏–∏: —Ç–µ—Å—Ç–∏—Ä—É–µ–º –∏–≥—Ä—É —Å –∑–∞–∫–∞–∑—á–∏–∫–æ–º –∑–∞ 2-–µ —Å—É—Ç–æ–∫ –¥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–ª—è –ø—Ä–∞–≤–æ–∫\n'
                                 'üî∏ –£–¥–∞–ª—ë–Ω–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø–æ–¥ –∫–ª—é—á: –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏\n'
                                 'üî∏ –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n'
                                 'üî∏ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –∏–ª–∏ –∫–æ–º–∞–Ω–¥–Ω–∞—è –∏–≥—Ä–∞!\n'
                                 '\n'
                                 '–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ –º–µ–Ω—é ü•∞',
                                 parse_mode="Markdown", reply_markup=keyboard.telegram_quest_inline())
                if check_final(message.from_user):
                    end(message)
        else:
            bot.send_chat_action(message.chat.id, 'typing')
            bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                             parse_mode="Markdown")
            bot.register_next_step_handler(message, antiquiz_end)
    except Exception as error:
        print(f'antiquiz_end: {error}')
        bot.register_next_step_handler(message, antiquiz_end)


@bot.message_handler(func=lambda message: message.text.lower() == '—à–∞—Ç—Ä—ã' or message.text.lower() == '—à–∞—Ç—Ä—ã ‚úÖ',
                     content_types=['text'])
def tents(message):
    try:
        if check(message.from_user, "tents"):
            bot.send_message(message.chat.id,
                             '–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            bot.send_message(message.chat.id,
                             '–®–∞—Ç—Ä—ã —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –ø–æ–¥ –∫–ª—é—á ‚Äì —ç—Ç–æ –º–∞—Å—Ç—Ö—ç–≤ –¥–ª—è —É–ª–∏—á–Ω–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è. –ì–æ—Ç–æ–≤—ã–µ —à–∞—Ç—Ä—ã –∫—Ä–∞—Å–∏–≤—ã, –æ–Ω–∏ '
                             '—Ö–æ—Ä–æ—à–æ –∑–∞—â–∏—â–∞—é—Ç –æ—Ç –ø–æ–≥–æ–¥–Ω—ã—Ö –ø—Ä–æ—è–≤–ª–µ–Ω–∏–π. –û–Ω–∏ –ø–æ–∑–≤–æ–ª—è—Ç —É–∫—Ä—ã—Ç—å—Å—è –æ—Ç –¥–æ–∂–¥—è, –≤–µ—Ç—Ä–∞ –∏–ª–∏ —Å–æ–ª–Ω—Ü–∞ –≤ '
                             '–∂–∞—Ä–∫—É—é –ø–æ–≥–æ–¥—É. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –º–æ–∂–Ω–æ —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ü–µ–Ω—É, –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –±–∞–Ω–∫–µ—Ç–Ω—ã–µ –∏–ª–∏ —Ñ—É—Ä—à–µ—Ç–Ω—ã–µ '
                             '—Å—Ç–æ–ª—ã –∏ —Å—Ç—É–ª—å—è –¥–ª—è –≥–æ—Å—Ç–µ–π.\n'
                             '\n'
                             '–ü—Ä–æ –º–µ–±–µ–ª—å —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—é –æ—Ç–¥–µ–ª—å–Ω–æ üòè\n'
                             '\n'
                             '–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ –º–µ–Ω—é ü•∞',
                             parse_mode="Markdown", reply_markup=keyboard.telegram_tent_inline())
        else:
            bot.send_sticker(message.chat.id,
                             "CAACAgIAAxkBAAEIHeNkDu9Wd5gvELZtO3MK7S8Y2b8QKgAC5ysAAvIMWEiBgimOerPlQi8E")
            bot.send_message(message.chat.id,
                             'üß© –û–π, —à–∞—Ç—Ä—ã ‚Äì —ç—Ç–æ –≤–æ–æ–±—â–µ —à–∏–∫–∞—Ä–Ω–æ–µ –∫—Ä—É–≥–ª–æ–≥–æ–¥–∏—á–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ! –£ –Ω–∞—Å –æ–Ω–∏ –≤—Å–µ –≤ '
                             '—Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –≥–æ—Ç–æ–≤—ã –≤ –ª—é–±—É—é –ø–æ–≥–æ–¥—É –∏ –≤—Ä–µ–º—è –≥–æ–¥–∞ —Å–ª—É–∂–∏—Ç—å –Ω–∞ –≤–∞—à–µ–º –∏–≤–µ–Ω—Ç–µ.\n'
                             '\n'
                             '–ö—Å—Ç–∞—Ç–∏, –æ –∑–∞–¥–∞–Ω–∏–∏: –ø—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã ‚Äì –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä —Å–≤–∞–¥–µ–±–Ω–æ–≥–æ —Ç–æ—Ä–∂–µ—Å—Ç–≤–∞ –∏ '
                             '–ø—Ä—è–º–æ —Å–µ–π—á–∞—Å '
                             '–∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –º–æ–Ω—Ç–∞–∂ –ø–ª–æ—â–∞–¥–∫–∏. –ù—É–∂–Ω–æ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –æ—Ü–µ–Ω–∏—Ç—å –∏–¥–µ–∞–ª—å–Ω—É—é –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å '
                             '–∏ –ø–æ–Ω—è—Ç—å, –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –ª–∏ –Ω–∞ –ø–ª–æ—â–∞–¥–∫–µ —á—Ç–æ-—Ç–æ –ª–∏—à–Ω–µ–µ. –ü–æ—Ç–æ–º—É —á—Ç–æ –≤—Å—ë –ª–∏—à–Ω–µ–µ,'
                             ' –∫–æ–Ω–µ—á–Ω–æ, –Ω—É–∂–Ω–æ —É–±—Ä–∞—Ç—å. \n'
                             '–ì–ª–∞–≤–Ω–æ–µ ‚Äì –≤ –Ω –∏ –º –∞ —Ç –µ –ª —å –Ω –æ —Å —Ç —å. –ï—ë-—Ç–æ —Å–µ–π—á–∞—Å –∏ –ø—Ä–æ–≤–µ—Ä–∏–º))\n'
                             '\n'
                             '‚úÖ _–ù–∞–∑–æ–≤–∏ 4 –∞—Ç—Ä–∏–±—É—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ *–Ω–µ* –ø–æ—Ç—Ä–µ–±—É—é—Ç—Å—è –Ω–∞ —ç—Ç–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏. –û–¥–∏–Ω '
                             '–ª–∏—à–Ω–∏–π –ø—Ä–µ–¥–º–µ—Ç ‚Äì –æ–¥–∏–Ω –æ—Ç–≤–µ—Ç. –î–∞–≤–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –º–æ–∂–Ω–æ –≤ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ._',
                             parse_mode="Markdown")
            bot.send_document(message.chat.id,
                              'BQACAgIAAxkBAAINP2QcYGv1LXmOSrRCHVXPVMYTMLlAAAKJKQACos_pSOplKiW5_zLULwQ')
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAICIGQVhbzCUTCpsr1NwYMAAe9TMChpJgAC38YxG6FnqEi-V1BXqjzYeQEAAwIAA3kAAy8E',
                           )
            bot.register_next_step_handler(message, tents_end)
    except Exception as error:
        print(f'tents: {error}')
        bot.register_next_step_handler(message, tents)


def tents_end(message):
    try:
        # if check_answer_final(message.from_user, 'tent_answer'):
        #     end(message)
        #     change(message.from_user, "tents")
        if message.text.lower() in ['–º–∏—à–∫–∞',
                                    '–º–µ–¥–≤–µ–∂–æ–Ω–æ–∫',
                                    '–º–µ–¥–≤–µ–¥—å',
                                    '–ø–ª—é—à–µ–≤—ã–π –º–∏—à–∫–∞',
                                    '–ø–ª—é—à–µ–≤—ã–π –º–µ–¥–≤–µ–¥—å',
                                    '–º—è–≥–∫–∞—è –∏–≥—Ä—É—à–∫–∞',
                                    '–∏–≥—Ä—É—à–∫–∞']:
            if check_answer(message.from_user, 'tent_answer', "answer_1"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", )
                bot.register_next_step_handler(message, tents_end)
            else:
                bot.send_message(message.chat.id,
                                 '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è!',
                                 parse_mode="Markdown", )
                change_answer(message.from_user, 'tent_answer', "answer_1")
                change_answer(message.from_user, 'tent_answer', "answer_5")
                if check_answer_final(message.from_user, 'tent_answer'):
                    change(message.from_user, "tents")
                    tents_end_message(message)
                else:
                    bot.register_next_step_handler(message, tents_end)
        elif message.text.lower() in ['–º–µ–Ω—é',
                                      '–º–µ–Ω—é—à–∫–∞']:
            if check_answer(message.from_user, 'tent_answer', "answer_2"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", )
                bot.register_next_step_handler(message, tents_end)
            else:
                bot.send_message(message.chat.id,
                                 '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è!',
                                 parse_mode="Markdown", )
                change_answer(message.from_user, 'tent_answer', "answer_2")
                change_answer(message.from_user, 'tent_answer', "answer_5")
                if check_answer_final(message.from_user, 'tent_answer'):
                    change(message.from_user, "tents")
                    tents_end_message(message)
                else:
                    bot.register_next_step_handler(message, tents_end)
        elif message.text.lower() in ['—ë–ª–∫–∞',
                                      '–µ–ª–∫–∞',
                                      '–Ω–æ–≤–æ–≥–æ–¥–Ω—è—è —ë–ª–∫–∞',
                                      '–Ω–æ–≤–æ–≥–æ–¥–Ω—è—è –µ–ª–∫–∞',
                                      '–µ–ª—å']:
            if check_answer(message.from_user, 'tent_answer', "answer_3"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", )
                bot.register_next_step_handler(message, tents_end)
            else:
                bot.send_message(message.chat.id,
                                 '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è!',
                                 parse_mode="Markdown", )
                change_answer(message.from_user, 'tent_answer', "answer_3")
                change_answer(message.from_user, 'tent_answer', "answer_5")
                if check_answer_final(message.from_user, 'tent_answer'):
                    change(message.from_user, "tents")
                    tents_end_message(message)
                else:
                    bot.register_next_step_handler(message, tents_end)
        elif message.text.lower() in ['–≤–µ–Ω–∏–∫',
                                      '–≤–µ–Ω–∏–∫ –∏ —Å–æ–≤–æ–∫',
                                      '–≤–µ–Ω–∏–∫,—Å–æ–≤–æ–∫',
                                      '–≤–µ–Ω–∏–∫ —Å —Å–æ–≤–∫–æ–º',
                                      '—Å–æ–≤–æ–∫',
                                      '—Å–æ–≤–æ–∫ –∏ –≤–µ–Ω–∏–∫',
                                      '—Å–æ–≤–æ–∫ —Å –≤–µ–Ω–∏–∫–æ–º',
                                      '—à–≤–∞–±—Ä–∞',
                                      '—à–≤–∞–±—Ä–∞ —Å —Å–æ–≤–∫–æ–º',
                                      '—Å–æ–≤–æ–∫ —Å —à–≤–∞–±—Ä–æ–π',
                                      '–º–µ—Ç–ª–∞',
                                      '–º–µ—Ç–ª–∞ –∏ —Å–æ–≤–æ–∫',
                                      '–º–µ—Ç–ª–∞ —Å —Å–æ–≤–∫–æ–º',
                                      '—Å–æ–≤–æ–∫ —Å –º–µ—Ç–ª–æ–π']:
            if check_answer(message.from_user, 'tent_answer', "answer_4"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", )
                bot.register_next_step_handler(message, tents_end)
            else:
                bot.send_message(message.chat.id,
                                 '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è!',
                                 parse_mode="Markdown", )
                change_answer(message.from_user, 'tent_answer', "answer_4")
                change_answer(message.from_user, 'tent_answer', "answer_5")
                if check_answer_final(message.from_user, 'tent_answer'):
                    change(message.from_user, "tents")
                    tents_end_message(message)
                else:
                    bot.register_next_step_handler(message, tents_end)
        else:
            bot.send_message(message.chat.id,
                             '–ü—É-–ø—É-–ø—É.. –Ω–µ–º–Ω–æ–≥–æ –Ω–µ —Ç–æüòä',
                             parse_mode="Markdown", )
            bot.register_next_step_handler(message, tents_end)
    except Exception as error:
        print(f'tents_end: {error}')
        bot.register_next_step_handler(message, tents_end)


def tents_end_message(message):
    try:
        bot.send_message(message.chat.id,
                         '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!',
                         parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
        bot.send_message(message.chat.id,
                         '–®–∞—Ç—Ä—ã —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –ø–æ–¥ –∫–ª—é—á ‚Äì —ç—Ç–æ –º–∞—Å—Ç—Ö—ç–≤ –¥–ª—è —É–ª–∏—á–Ω–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è. –ì–æ—Ç–æ–≤—ã–µ —à–∞—Ç—Ä—ã –∫—Ä–∞—Å–∏–≤—ã, –æ–Ω–∏ '
                         '—Ö–æ—Ä–æ—à–æ –∑–∞—â–∏—â–∞—é—Ç –æ—Ç –ø–æ–≥–æ–¥–Ω—ã—Ö –ø—Ä–æ—è–≤–ª–µ–Ω–∏–π. –û–Ω–∏ –ø–æ–∑–≤–æ–ª—è—Ç —É–∫—Ä—ã—Ç—å—Å—è –æ—Ç –¥–æ–∂–¥—è, –≤–µ—Ç—Ä–∞ –∏–ª–∏ —Å–æ–ª–Ω—Ü–∞ –≤ '
                         '–∂–∞—Ä–∫—É—é –ø–æ–≥–æ–¥—É. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –º–æ–∂–Ω–æ —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ü–µ–Ω—É, –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –±–∞–Ω–∫–µ—Ç–Ω—ã–µ –∏–ª–∏ —Ñ—É—Ä—à–µ—Ç–Ω—ã–µ '
                         '—Å—Ç–æ–ª—ã –∏ —Å—Ç—É–ª—å—è –¥–ª—è –≥–æ—Å—Ç–µ–π.\n'
                         '\n'
                         '–ü—Ä–æ –º–µ–±–µ–ª—å —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—é –æ—Ç–¥–µ–ª—å–Ω–æ üòè\n'
                         '\n'
                         '–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ –º–µ–Ω—é ü•∞',
                         parse_mode="Markdown", reply_markup=keyboard.telegram_tent_inline())
        if check_final(message.from_user):
            end(message)
    except Exception as error:
        print(f'tents_end_message: {error}')
        bot.register_next_step_handler(message, tents_end)

    # bot.register_next_step_handler(message, tents)


@bot.message_handler(func=lambda message: message.text.lower() == '–º–µ–±–µ–ª—å' or message.text.lower() == '–º–µ–±–µ–ª—å ‚úÖ',
                     content_types=['text'])
def furniture(message):
    try:
        if check(message.from_user, "furniture"):
            bot.send_message(message.chat.id,
                             '–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            bot.send_message(message.chat.id,
                             '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –ª—é–±—è—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞ –µ–≥–æ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ, –Ω–æ –∏ –≥–ª–∞–∑–∞–º–∏. –ü–æ—Ç–æ–º—É, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤—ã–¥–µ—Ä–∂–∏–≤–∞—Ç—å '
                             '–≤ –ª—é–±–æ–º –∏–≤–µ–Ω—Ç–µ –æ–±—â–∏–π —Å—Ç–∏–ª—å. –ú–µ–±–µ–ª—å –∏ —Ç–µ–∫—Å—Ç–∏–ª—å, –∞ —Ç–∞–∫–∂–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –¥–µ–∫–æ—Ä ‚Äì —ç—Ç–æ –≤—Å–µ–≥–¥–∞ '
                             '–ø—Ä–µ–∫—Ä–∞—Å–Ω–æ.\n'
                             '\n'
                             '–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ –º–µ–Ω—é ü•∞',
                             parse_mode="Markdown", reply_markup=keyboard.telegram_furniture_inline())
        else:
            bot.send_sticker(message.chat.id,
                             "CAACAgIAAxkBAAEIHzNkDzxnlVv7wpIeJ4ZD_XT8uzXKAAOpJgACYSKBSOj2j1mbeI4SLwQ")
            bot.send_message(message.chat.id,
                             'üß© –ù–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –±–µ–∑ –º–µ–±–µ–ª–∏‚Ä¶ –Ω—É –æ–Ω–ª–∞–π–Ω —Ä–∞–∑–≤–µ —Ç–æ–ª—å–∫–æ üòÄ –û–Ω–∞ –≤–µ–∑–¥–µ –Ω—É–∂–Ω–∞: –ø—É—Ñ–∏–∫–∏, '
                             '–≥–∞—Ä–¥–µ—Ä–æ–±, –∑–µ—Ä–∫–∞–ª–æ –≤ –≥—Ä–∏–º—ë—Ä–∫—É, –≥–∞–º–∞–∫–∏ –Ω–∞ –ø—Ä–∏—Ä–æ–¥—É, –ø–∞–ª–ª–µ—Ç–Ω—ã–µ —Å—Ç–æ–ª—ã‚Ä¶ –í –æ–±—â–µ–º, –µ—Å–ª–∏ —è –Ω–∞—á–Ω—É '
                             '–ø–µ—Ä–µ—á–∏—Å–ª—è—Ç—å –≤—Å—ë, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å, –º—ã –ø—Ä–æ–±—É–¥–µ–º –≤ —ç—Ç–æ–º —á–∞—Ç–µ –µ—â—ë –æ—á–µ–Ω—å-–æ—á–µ–Ω—å –¥–æ–ª–≥–æ))\n'
                             '\n'
                             '–ü—Ä–µ–¥–ª–∞–≥–∞—é —Å—Ä–∞–∑—É –∫ –∑–∞–¥–∞–Ω–∏—é! –Ø –ø—Ä–µ–≤—Ä–∞—Ç–∏–ª 5 –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –º–µ–±–µ–ª–∏ –≤ –∞–Ω–∞–≥—Ä–∞–º–º—É. –≠—Ç–æ –∫–æ–≥–¥–∞ –±—É–∫–≤—ã –≤ '
                             '—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º —Å–ª–æ–≤–µ –ø–µ—Ä–µ–º–µ—à–∞–Ω—ã.\n'
                             '\n'
                             '‚úÖ _–ü–æ–ø—Ä–æ–±—É–π –ø–æ–Ω—è—Ç—å, –∫–∞–∫–∏–µ —Å–ª–æ–≤–∞ —è ‚Äú–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–ª‚Äù –∏ –≤–ø–∏—Å–∞—Ç—å –∏—Ö –≤ –∫—Ä–æ—Å—Å–≤–æ—Ä–¥. –ì–ª–∞–≤–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —ç—Ç–æ—Ç '
                             '—Ä–∞—É–Ω–¥ –±—É–¥–µ—Ç —Å–ª–æ–≤–æ –∏–∑_ *–∫—Ä–∞—Å–Ω—ã—Ö* _–æ–∫–æ—à–µ–∫.\n'
                             '\n'
                             '–ö–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å. –ü–∏—à–∏ –º–Ω–µ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—É—é —Ä–∞–∑–≥–∞–¥–∫—É –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –±–µ–∑ '
                             '–ø—Ä–æ–±–µ–ª–æ–≤_ *1–æ—Ç–≤–µ—Ç.*\n',
                             parse_mode="Markdown", reply_markup=keyboard.crossworld())
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAICzGQVpBiiHqWXPhItEBIy_t0PisOdAAJxxzEboWeoSKojveZ7k4K5AQADAgADeQADLwQ')
            bot.register_next_step_handler(message, furniture_check)
    except Exception as error:
        print(f'furniture: {error}')
        bot.register_next_step_handler(message, furniture)


def furniture_check(message):
    try:
        if message.text.lower() in ['1–∫—Ä–µ—Å–ª–æ']:
            if check_answer(message.from_user, 'furniture_answer', "answer_1"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", )
                bot.register_next_step_handler(message, furniture_check)
            else:
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ',
                                 parse_mode="Markdown", )
                change_answer(message.from_user, 'furniture_answer', "answer_1")
                if check_answer_final(message.from_user, 'furniture_answer'):
                    change(message.from_user, "furniture")
                    bot.send_photo(message.chat.id,
                                   'AgACAgIAAxkBAAICzWQVrj9GWMcYaaYWWXPdN4Kan-OdAAKtxzEboWeoSBaPwuII2i2-AQADAgADeQADLwQ',
                                   reply_markup=keyboard.crossworld())
                    bot.register_next_step_handler(message, furniture_end_message)
                else:
                    bot.register_next_step_handler(message, furniture_check)
        elif message.text.lower() in ['2—Å—Ç—É–ª']:
            if check_answer(message.from_user, 'furniture_answer', "answer_2"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", )
                bot.register_next_step_handler(message, furniture_check)
            else:
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ',
                                 parse_mode="Markdown", )
                change_answer(message.from_user, 'furniture_answer', "answer_2")
                if check_answer_final(message.from_user, 'furniture_answer'):
                    change(message.from_user, "furniture")
                    bot.send_photo(message.chat.id,
                                   'AgACAgIAAxkBAAICzWQVrj9GWMcYaaYWWXPdN4Kan-OdAAKtxzEboWeoSBaPwuII2i2-AQADAgADeQADLwQ',
                                   reply_markup=keyboard.crossworld())
                    bot.register_next_step_handler(message, furniture_end_message)
                else:
                    bot.register_next_step_handler(message, furniture_check)
        elif message.text.lower() in ['3–∑–µ—Ä–∫–∞–ª–æ']:
            if check_answer(message.from_user, 'furniture_answer', "answer_3"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", )
                bot.register_next_step_handler(message, furniture_check)
            else:
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ',
                                 parse_mode="Markdown", )
                change_answer(message.from_user, 'furniture_answer', "answer_3")
                if check_answer_final(message.from_user, 'furniture_answer'):
                    change(message.from_user, "furniture")
                    bot.send_photo(message.chat.id,
                                   'AgACAgIAAxkBAAICzWQVrj9GWMcYaaYWWXPdN4Kan-OdAAKtxzEboWeoSBaPwuII2i2-AQADAgADeQADLwQ',
                                   reply_markup=keyboard.crossworld())
                    bot.register_next_step_handler(message, furniture_end_message)
                else:
                    bot.register_next_step_handler(message, furniture_check)
        elif message.text.lower() in ['4–≤–µ—à–∞–ª–∫–∞']:
            if check_answer(message.from_user, 'furniture_answer', "answer_4"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", )
                bot.register_next_step_handler(message, furniture_check)
            else:
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ',
                                 parse_mode="Markdown", )
                change_answer(message.from_user, 'furniture_answer', "answer_4")
                if check_answer_final(message.from_user, 'furniture_answer'):
                    change(message.from_user, "furniture")
                    bot.send_photo(message.chat.id,
                                   'AgACAgIAAxkBAAICzWQVrj9GWMcYaaYWWXPdN4Kan-OdAAKtxzEboWeoSBaPwuII2i2-AQADAgADeQADLwQ',
                                   reply_markup=keyboard.crossworld())
                    bot.register_next_step_handler(message, furniture_end_message)
                else:
                    bot.register_next_step_handler(message, furniture_check)
        elif message.text.lower() in ['5–¥–∏–≤–∞–Ω']:
            if check_answer(message.from_user, 'furniture_answer', "answer_5"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", )
                bot.register_next_step_handler(message, furniture_check)
            else:
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ',
                                 parse_mode="Markdown", )
                change_answer(message.from_user, 'furniture_answer', "answer_5")
                if check_answer_final(message.from_user, 'furniture_answer'):
                    change(message.from_user, "furniture")
                    bot.send_photo(message.chat.id,
                                   'AgACAgIAAxkBAAICzWQVrj9GWMcYaaYWWXPdN4Kan-OdAAKtxzEboWeoSBaPwuII2i2-AQADAgADeQADLwQ',
                                   reply_markup=keyboard.crossworld())
                    bot.register_next_step_handler(message, furniture_end_message)
                else:
                    bot.register_next_step_handler(message, furniture_check)
        elif message.text.lower() in ['–∫–ª–∞–¥']:
            bot.send_message(message.chat.id,
                             '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            bot.send_message(message.chat.id,
                             '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –ª—é–±—è—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞ –µ–≥–æ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ, –Ω–æ –∏ –≥–ª–∞–∑–∞–º–∏. –ü–æ—Ç–æ–º—É, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤—ã–¥–µ—Ä–∂–∏–≤–∞—Ç—å '
                             '–≤ –ª—é–±–æ–º –∏–≤–µ–Ω—Ç–µ –æ–±—â–∏–π —Å—Ç–∏–ª—å. –ú–µ–±–µ–ª—å –∏ —Ç–µ–∫—Å—Ç–∏–ª—å, –∞ —Ç–∞–∫–∂–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –¥–µ–∫–æ—Ä ‚Äì —ç—Ç–æ –≤—Å–µ–≥–¥–∞ '
                             '–ø—Ä–µ–∫—Ä–∞—Å–Ω–æ.\n'
                             '\n'
                             '–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ –º–µ–Ω—é ü•∞',
                             parse_mode="Markdown", reply_markup=keyboard.telegram_furniture_inline())
            if check_final(message.from_user):
                end(message)
        else:
            bot.send_message(message.chat.id,
                             '–ù–µ –≤–µ—Ä–Ω–æ',
                             parse_mode="Markdown", reply_markup=keyboard.crossworld())
            bot.register_next_step_handler(message, furniture_check)
    except Exception as error:
        print(f'furniture_check: {error}')
        bot.register_next_step_handler(message, furniture_check)


def furniture_end_message(message):
    try:
        if message.text.lower() in ['–∫–ª–∞–¥']:
            bot.send_message(message.chat.id,
                             '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            bot.send_message(message.chat.id,
                             '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –ª—é–±—è—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞ –µ–≥–æ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ, –Ω–æ –∏ –≥–ª–∞–∑–∞–º–∏. –ü–æ—Ç–æ–º—É, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤—ã–¥–µ—Ä–∂–∏–≤–∞—Ç—å '
                             '–≤ –ª—é–±–æ–º –∏–≤–µ–Ω—Ç–µ –æ–±—â–∏–π —Å—Ç–∏–ª—å. –ú–µ–±–µ–ª—å –∏ —Ç–µ–∫—Å—Ç–∏–ª—å, –∞ —Ç–∞–∫–∂–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –¥–µ–∫–æ—Ä ‚Äì —ç—Ç–æ –≤—Å–µ–≥–¥–∞ '
                             '–ø—Ä–µ–∫—Ä–∞—Å–Ω–æ.\n'
                             '\n'
                             '–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ –º–µ–Ω—é ü•∞',
                             parse_mode="Markdown", reply_markup=keyboard.telegram_furniture_inline())
            if check_final(message.from_user):
                end(message)
        else:
            bot.send_message(message.chat.id,
                             '–¢–∞–∫-—Ç–∞–∫-—Ç–∞–∫, —Ä–∞—Å—Å–ª–∞–±–ª—è—Ç—å—Å—è –µ—â—ë —Ä–∞–Ω–æ üòä',
                             parse_mode="Markdown", reply_markup=keyboard.crossworld())
            bot.register_next_step_handler(message, furniture_end_message)
    except Exception as error:
        print(f'furniture_end_message: {error}')
        bot.register_next_step_handler(message, furniture_end_message)


@bot.message_handler(func=lambda message: message.text.lower() == '–∫–∞–∑–∏–Ω–æ' or message.text.lower() == '–∫–∞–∑–∏–Ω–æ ‚úÖ',
                     content_types=['text'])
def casino(message):
    try:
        if check(message.from_user, "furniture"):
            bot.send_message(message.chat.id,
                             '–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            bot.send_message(message.chat.id,
                             '–î–∞, –≤ –Ω–∞—à–µ–π —Å—Ç—Ä–∞–Ω–µ –ö–∞–∑–∏–Ω–æ –∏ –∏–≥—Ä–∞ –Ω–∞ –¥–µ–Ω—å–≥–∏ –∑–∞–ø—Ä–µ—â–µ–Ω—ã. –ò–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É, –Ω–∞—à–µ —Ñ–∞–Ω-–∫–∞–∑–∏–Ω–æ –Ω–∞ —Ç–æ '
                             '–∏ —Ñ–∞–Ω. –ú—ã –∏–≥—Ä–∞–µ–º –Ω–µ –Ω–∞ –¥–µ–Ω—å–≥–∏, –∞ –Ω–∞ —Ñ–∏—à–∫–∏, –∏–Ω—Ç–µ—Ä–µ—Å –∏ –∞–∑–∞—Ä—Ç. –ê –µ—â—ë, –≤—Å–µ –∫—Ä—É–ø—å–µ ‚Äì –Ω–∞—Å—Ç–æ—è—â–∏–µ '
                             '–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—ã. –ë–µ–∑ —à—É—Ç–æ–∫, —ç—Ç–æ —Ä–µ–±—è—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞–ª–∏ –≤ –Ω–∞—Å—Ç–æ—è—â–∏—Ö –∫–∞–∑–∏–Ω–æ. –û–Ω–∏ —Ç–æ—á–Ω–æ '
                             '–∑–Ω–∞—é—Ç —Å–≤–æ—ë –¥–µ–ª–æ)\n'
                             '–§–∞–Ω-–∫–∞–∑–∏–Ω–æ, –∫—É–ª–∏–Ω–∞—Ä–Ω–æ–µ-–∫–∞–∑–∏–Ω–æ, —Ç–∏—Ä—ã –∏ –∏–≥—Ä–æ–≤—ã–µ –∞–ø–ø–∞—Ä–∞—Ç—ã ‚Äì –≤—Å—ë, –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å '
                             '–Ω–∞—Å—Ç–æ—è—â–µ–µ –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ!\n',
                             parse_mode="Markdown", reply_markup=keyboard.telegram_casino_inline())
        else:
            bot.send_sticker(message.chat.id,
                             "CAACAgIAAxkBAAEIHeVkDu949s5aPydxGXaUzMKCPAfQuQAC4igAAu3QWUiJCmpWhUnbJi8E")
            bot.send_message(message.chat.id, 'üß© –ù–∞–¥–µ—é—Å—å –∞–∑–∞—Ä—Ç –æ—Ç —ç—Ç–æ–π –∏–≥—Ä—ã —É–∂–µ —Ä–∞–∑—ã–≥—Ä–∞–ª—Å—è, –∞ —Ç—É—Ç –µ—â—ë –∏ —Ç–µ–º–∞ –ö–∞–∑–∏–Ω–æ! '
                                              '–°—Ä–∞–∑—É —Å–∫–∞–∂—É, —á—Ç–æ –ö–∞–∑–∏–Ω–æ —É –Ω–∞—Å —Ñ–∞–Ω–æ–≤–æ–µ –∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –¥–≤—É—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞—Ö: '
                                              '–∫–ª–∞—Å—Å–∏–∫–∞ (–ø–æ–∫–µ—Ä, —Ä—É–ª–µ—Ç–∫–∞, –±–ª—ç–∫–¥–∂–µ–∫ –∏ –¥—Ä—É–≥–∏–µ) –∏ –∫—É–ª–∏–Ω–∞—Ä–Ω–æ–µ (–≤–∏—Å–∫–∏-–∫–∞–∑–∏–Ω–æ, '
                                              '—Å—ã—Ä–Ω–æ–µ-–∫–∞–∑–∏–Ω–æ, –º–∞—Ä–º–µ–ª–∞–¥–Ω–æ–µ-–∫–∞–∑–∏–Ω–æ –∏ –¥—Ä—É–≥–∏–µ).\n'
                                              '\n'
                                              '‚úÖ _–†–∞—Å—Å–∫–∞–∂—É, –∫–æ–Ω–µ—á–Ω–æ, –≤—Å—ë –ø–æ–¥—Ä–æ–±–Ω–µ–µ, —Ç–æ–ª—å–∫–æ —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–µ–¥–ª–∞–≥–∞—é —Å—ã–≥—Ä–∞—Ç—å '
                                              '—Å–æ –º–Ω–æ–π –≤ –∏–≥—Ä—É. –ò–≥—Ä–∞ ‚Äì —Ä—É—Å—Å–∫–∞—è –≤–µ—Ä—Å–∏—è –ë–ª—ç–∫–¥–∂–µ–∫–∞ ‚Äì –î–≤–∞–¥—Ü–∞—Ç—å –û–¥–Ω–æ. –°—É—Ç—å '
                                              '–æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–∞. –Ø —Ä–∞–∑–¥–∞—é –∫–∞—Ä—Ç—ã, –∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –Ω–∞–±—Ä–∞—Ç—å –≤ —Å—É–º–º–µ 21 –∏–ª–∏ –º–µ–Ω—å—à–µ '
                                              '–æ—á–∫–æ–≤, —á–µ–º —É –º–µ–Ω—è. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç—É–∏—Ü–∏—é. –í—ã–±–µ—Ä–∏: –ø–∞—Å –∏–ª–∏ –µ—â—ë?_\n',
                             parse_mode="Markdown", reply_markup=keyboard.casino_keyboard())
        bot.send_photo(message.chat.id,
                       'AgACAgIAAxkBAAICzmQVr1mnpchGiLFy07QfbRCTBcXmAAK4xzEboWeoSI2Opx-qLif-AQADAgADcwADLwQ')
        bot.send_photo(message.chat.id,
                       'AgACAgIAAxkBAAICz2QVr20kupkYXZg7vjZdjYIOGbGdAAK8xzEboWeoSHTmDCpUfARyAQADAgADeQADLwQ',
                       reply_markup=keyboard.casino_keyboard())
        bot.register_next_step_handler(message, casino_end)
    except Exception as error:
        print(f'casino: {error}')
        bot.register_next_step_handler(message, casino)


def casino_end(message):
    try:
        if message.text.lower() in ['–µ—â–µ', '–µ—â—ë']:
            change(message.from_user, "casino")
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAIC0GQVsGxi-tAcafF7paB4uDLJIdJlAALDxzEboWeoSPSsU6y5nyniAQADAgADeQADLwQ',
                           reply_markup=keyboard.keyboard(message.from_user))
            bot.send_message(message.chat.id,
                             '–¢–∞–∫ —É–∂ –∏ –±—ã—Ç—å‚Ä¶ –û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä, —É–¥–∞—á–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ! –ü–æ–±–µ–¥–∞, –ø–æ–ª—É—á–∞–µ—Ç—Å—è! ü•≥\n'
                             '\n'
                             '–î–∞, –≤ –Ω–∞—à–µ–π —Å—Ç—Ä–∞–Ω–µ –ö–∞–∑–∏–Ω–æ –∏ –∏–≥—Ä–∞ –Ω–∞ –¥–µ–Ω—å–≥–∏ –∑–∞–ø—Ä–µ—â–µ–Ω—ã. –ò–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É, –Ω–∞—à–µ —Ñ–∞–Ω-–∫–∞–∑–∏–Ω–æ –Ω–∞ —Ç–æ '
                             '–∏ —Ñ–∞–Ω. –ú—ã –∏–≥—Ä–∞–µ–º –Ω–µ –Ω–∞ –¥–µ–Ω—å–≥–∏, –∞ –Ω–∞ —Ñ–∏—à–∫–∏, –∏–Ω—Ç–µ—Ä–µ—Å –∏ –∞–∑–∞—Ä—Ç. –ê –µ—â—ë, –≤—Å–µ –∫—Ä—É–ø—å–µ ‚Äì –Ω–∞—Å—Ç–æ—è—â–∏–µ '
                             '–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—ã. –ë–µ–∑ —à—É—Ç–æ–∫! –≠—Ç–æ —Ä–µ–±—è—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞–ª–∏ –≤ –Ω–∞—Å—Ç–æ—è—â–∏—Ö –∫–∞–∑–∏–Ω–æ. –û–Ω–∏ —Ç–æ—á–Ω–æ '
                             '–∑–Ω–∞—é—Ç —Å–≤–æ—ë –¥–µ–ª–æ)\n'
                             '–§–∞–Ω-–∫–∞–∑–∏–Ω–æ, –∫—É–ª–∏–Ω–∞—Ä–Ω–æ–µ-–∫–∞–∑–∏–Ω–æ, —Ç–∏—Ä—ã –∏ –∏–≥—Ä–æ–≤—ã–µ –∞–ø–ø–∞—Ä–∞—Ç—ã ‚Äì –≤—Å—ë, –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å '
                             '–Ω–∞—Å—Ç–æ—è—â–µ–µ –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ!\n'
                             '\n'
                             '–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ –º–µ–Ω—é ü•∞',
                             parse_mode="Markdown", reply_markup=keyboard.telegram_casino_inline())

            if check_final(message.from_user):
                end(message)
        elif message.text.lower() in ['–ø–∞—Å']:
            change(message.from_user, "casino")
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAIC0WQVsYLApjHwS2V-x4dUwqLx4VU2AALHxzEboWeoSFtjgWM2FOxrAQADAgADeQADLwQ',
                           reply_markup=keyboard.keyboard(message.from_user))
            bot.send_message(message.chat.id,
                             '–û–≥–æ, —É–¥–∞—á–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ! –ù—É –ª–∞–¥–Ω–æ, —è —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞—Ç—å—Å—è —Å–µ–≥–æ–¥–Ω—è –Ω–µ –±—É–¥—É. –ü–æ–±–µ–¥–∞ –∑–∞ —Ç–æ–±–æ–π, '
                             '–ø–æ–ª—É—á–∞–µ—Ç—Å—è! ü•≥\n'
                             '\n'
                             '–î–∞, –≤ –Ω–∞—à–µ–π —Å—Ç—Ä–∞–Ω–µ –ö–∞–∑–∏–Ω–æ –∏ –∏–≥—Ä–∞ –Ω–∞ –¥–µ–Ω—å–≥–∏ –∑–∞–ø—Ä–µ—â–µ–Ω—ã. –ò–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É, –Ω–∞—à–µ —Ñ–∞–Ω-–∫–∞–∑–∏–Ω–æ –Ω–∞ —Ç–æ '
                             '–∏ —Ñ–∞–Ω. –ú—ã –∏–≥—Ä–∞–µ–º –Ω–µ –Ω–∞ –¥–µ–Ω—å–≥–∏, –∞ –Ω–∞ —Ñ–∏—à–∫–∏, –∏–Ω—Ç–µ—Ä–µ—Å –∏ –∞–∑–∞—Ä—Ç. –ê –µ—â—ë, –≤—Å–µ –∫—Ä—É–ø—å–µ ‚Äì –Ω–∞—Å—Ç–æ—è—â–∏–µ '
                             '–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—ã. –ë–µ–∑ —à—É—Ç–æ–∫, —ç—Ç–æ —Ä–µ–±—è—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞–ª–∏ –≤ –Ω–∞—Å—Ç–æ—è—â–∏—Ö –∫–∞–∑–∏–Ω–æ. –û–Ω–∏ —Ç–æ—á–Ω–æ '
                             '–∑–Ω–∞—é—Ç —Å–≤–æ—ë –¥–µ–ª–æ)\n'
                             '–§–∞–Ω-–∫–∞–∑–∏–Ω–æ, –∫—É–ª–∏–Ω–∞—Ä–Ω–æ–µ-–∫–∞–∑–∏–Ω–æ, —Ç–∏—Ä—ã –∏ –∏–≥—Ä–æ–≤—ã–µ –∞–ø–ø–∞—Ä–∞—Ç—ã ‚Äì –≤—Å—ë, –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å '
                             '–Ω–∞—Å—Ç–æ—è—â–µ–µ –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ!\n'
                             '\n'
                             '–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ –º–µ–Ω—é ü•∞',
                             parse_mode="Markdown", reply_markup=keyboard.telegram_casino_inline())

            if check_final(message.from_user):
                end(message)
    except Exception as error:
        print(f'casino_end: {error}')
        bot.register_next_step_handler(message, casino_end)


def end(message):
    bot.send_sticker(message.chat.id,
                     "CAACAgIAAxkBAAEIHzFkDzxFeaWhNjihFqQaSFaZNWMzSAACWyoAAvMreEibkHdAfD2kCS8E")
    bot.send_message(message.chat.id, '_–í–∞—É! –Ø –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ —Ö–æ—Ä–æ—à–æ —Ç—ã —Ä–∞–∑–±–∏—Ä–∞–µ—à—å—Å—è –≤ —Ü–µ–Ω–Ω–æ—Å—Ç—è—Ö –∫–æ–º–ø–∞–Ω–∏–∏.'
                                      ' –Ø —Ç–æ–±–æ–π –≥–æ—Ä–∂—É—Å—å. –ü–æ—Ç–æ–º—É —á—Ç–æ —Å–∞–º–∞—è –≥–ª–∞–≤–Ω–∞—è, –°–ï–ö–†–ï–¢–ù–ê–Ø, —Ü–µ–Ω–Ω–æ—Å—Ç—å –Ω–∞—à–µ–π '
                                      '–∫–æ–º–ø–∞–Ω–∏–∏ ‚Äì –µ—ë –ª—é–¥–∏. –≠—Ç–æ –¢–´!\n'
                                      '\n'
                                      '–í–ø–µ—Ä–µ–¥–∏ –µ—â—ë –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ. –ñ–µ–ª–∞—é —Ç–µ–±–µ –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞ –Ω–∞ –ø–ª—è–∂–µ '
                                      '‚Äú–£–ª–µ—Ç–∞–π‚Äù_\n',
                     parse_mode="Markdown", disable_web_page_preview=True)
    bot.register_next_step_handler(message, end)


def change(user_data, name_colum):
    database = db.Data(user_data)
    database.replace(name_colum)


def change_answer(user_data, table_name, name_colum):
    database = db.Data(user_data)
    database.replace_answer(table_name, name_colum)


def check(user_id, name_colum):
    database = db.Data(user_id)
    number = database.check(name_colum)
    return number


def check_final(user_data):
    # rais = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    database = db.Data(user_data)
    number = database.check_final()
    # number.remove(str(user_data.id))
    if all(number):
        return True
    else:
        return False


def check_answer_final(user_data, table_name):
    database = db.Data(user_data)
    number = database.check_answer_final(table_name)
    if all(number):
        return True
    else:
        return False


def check_answer(user_data, table_name, name_colum):
    database = db.Data(user_data)
    answer_bool = database.response_answer(table_name, name_colum)
    if answer_bool[0]:
        return True
    else:
        return False


def collector(message):
    user = db.Data(message.from_user)
    if bool(message.from_user.username) is True:
        name = message.text
        username = f'https://t.me/{message.from_user.username}'
        user.collection(name, username)
    else:
        name = message.text
        user.collection(name)


def setSurname(message):
    user = db.Data(message.from_user)
    surname = message.text
    user.setSurname(surname)


def setName(message):
    user = db.Data(message.from_user)
    name = message.text
    user.setName(name)


def setPhone(message):
    user = db.Data(message.from_user)
    phone = message.text
    user.setPhone(phone)


while True:
    try:
        bot.polling(none_stop=True, timeout=10)
    except Exception as error:
        print(error)
        time.sleep(3)

import telebot
from datetime import datetime
import time
import os
from telebot.types import InputFile

import keyboard.main_keyboard as keyboard
import database.db_aa as db
from Export.export import export_data

bot = telebot.TeleBot('6537930874:AAF2-_i2wtR_fECWv3JANrofBLMOibG-WzE')


def timeppp(message):
    newTimeString = datetime.fromtimestamp(message).strftime('%H:%M:%S - %d %b %Z')
    print(newTimeString)


def text_check(text):
    import re
    regex = re.compile('[^a-zA-Z–∞-—è–ê-–Ø0-9]')
    return regex.sub('', text)


menedjer = 483241197
menedjer_1 = 703608663


# 703608663
# 64783167

# def handle_callback_query(message):
#     source = None
#     if len(message.text.split()) > 1:
#         source = message.text.split()[1]
#
#     # Determine where the user came from
#     if source == 'source_qr':
#         # User came from a QR code
#         bot.reply_to(message, 'Welcome! You came from a QR code.')
#     elif source == 'source_link':
#         # User came from a link
#         bot.reply_to(message, 'Welcome! You came from a link.')
#     else:
#         # User did not come from a QR code or link
#         bot.reply_to(message, 'Welcome!')

# @bot.message_handler(func=lambda message: message.text[:15] == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á')
@bot.message_handler(commands=['start'])
def handle_start(message):
    if (message.from_user.id == menedjer_1):
        bot.send_message(message.chat.id, '–í–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω —ç–∫—Å–ø–æ—Ä—Ç', reply_markup=keyboard.export())
    else:
        info = db.Data(message.from_user)
        info.create()
        bot.send_sticker(message.chat.id,
                         "CAACAgIAAxkBAAEIHd1kDu6_l3UN8qquRGL97sxH0shhzAACGCwAAnCfWEhLkKAVEv7IwC8E")
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, –¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥! ‚ù§Ô∏è\n'
                                          '\n'
                                          '–Ø ‚Äì —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç —Å–µ—Ä–≤–∏—Å–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ ¬´–ê—Ä–µ–Ω–¥–∞ –ê—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤¬ª. '
                                          '–ü—Ä–µ–¥–ª–∞–≥–∞—é —Ç–µ–±–µ –ø—Ä–æ–π—Ç–∏ –º–æ—é –Ω–µ–±–æ–ª—å—à—É—é –∏–≥—Ä—É –∏ –ø–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É –≤ 15% '
                                          '–Ω–∞ –∞—Ä–µ–Ω–¥—É –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è. –ï—Å–ª–∏ –≥–æ—Ç–æ–≤, –ø–∏—à–∏ - *–¥–∞*', parse_mode="Markdown")
        bot.register_next_step_handler(message, rules)
        bot.send_message(64783167, f'–ë–æ—Ç–∞ –∑–∞–ø—É—Å—Ç–∏–ª: {message.from_user.first_name}, @{message.from_user.username}')
        bot.send_message(1248171558, f'–ë–æ—Ç–∞ –∑–∞–ø—É—Å—Ç–∏–ª: {message.from_user.first_name}, @{message.from_user.username}')
        bot.send_message(483241197, f'–ë–æ—Ç–∞ –∑–∞–ø—É—Å—Ç–∏–ª: {message.from_user.first_name}, @{message.from_user.username}')


@bot.message_handler(func=lambda message: message.text.lower() == '—ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö', content_types=['text'])
def export(message):
    try:
        if (message.from_user.id == menedjer):
            excel_name = export_data()
            print(excel_name)
            bot.send_document(message.chat.id, InputFile(excel_name))
            os.remove(excel_name)
    except Exception as error:
        print(f'export: {error}')

@bot.message_handler(content_types=['document', 'photo', 'audio', 'video', 'animation', 'voice'])
def take(message):
    bot.delete_message(message.chat.id, message.message_id)


def rules(message):
    try:
        if message.text.lower() in ['–¥–∞']:
            bot.send_message(message.chat.id,
                             "ü•∞ –£—Ä–∞! –†–∞–¥, —á—Ç–æ —Ç—ã –∑–¥–µ—Å—å\n"
                             "\n"
                             "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞—Å—Å–∫–∞–∂—É –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∞–≤–∏–ª:\n"
                             "‚ö°Ô∏è –°–ø—Ä–∞–≤–∞ —Å–Ω–∏–∑—É –∫–Ω–æ–ø–∫–∞ –≤—ã–∑–æ–≤–∞ –º–µ–Ω—é\n"
                             "‚ö°Ô∏è –û—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ –ø—Ä–æ–π—Ç–∏ –≤—Å–µ 4 –∑–∞–¥–∞–Ω–∏—è\n"
                             "‚ö°Ô∏è –ó–∞–¥–∞–Ω–∏—è –º–æ–∂–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤ –ª—é–±–æ–º –ø–æ—Ä—è–¥–∫–µ\n"
                             "‚ö°Ô∏è –ö–∞–∫ —Ç–æ–ª—å–∫–æ —Ä–∞—É–Ω–¥ —Ä–µ—à–µ–Ω, –≤ –º–µ–Ω—é –ø–æ—è–≤–∏—Ç—Å—è –≥–∞–ª–æ—á–∫–∞ –æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏\n"
                             "‚ö°Ô∏è –ü—Ä–æ–π–¥—è –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è, –ø–æ—è–≤–∏—Ç—Å—è –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ —Å–∫–∏–¥–∫—É\n"
                             "\n"
                             "–í—Å—ë –ø–æ–Ω—è—Ç–Ω–æ?\n"
                             "–ï—Å–ª–∏ –¥–∞, –≤–≤–µ–¥–∏ —Å–≤–æ—ë –∏–º—è\n"
                             "–ï—Å–ª–∏ –Ω–µ—Ç –ø–∏—à–∏ [@natashka1026](@natashka1026)\n", parse_mode="Markdown")
            bot.register_next_step_handler(message, fio)
        else:
            bot.send_chat_action(message.chat.id, 'typing')
            bot.send_message(message.chat.id, '_–ù–∞–¥–æ –≤–≤–µ—Å—Ç–∏_ *–¥–∞*\n',
                             parse_mode="Markdown")
            bot.register_next_step_handler(message, rules)
    except Exception as error:
        print(f'rules: {error}')
        bot.register_next_step_handler(message, rules)

@bot.message_handler(func=lambda message: message.text.lower() == '–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', content_types=['text'])
def fio(message):
    try:
        if message.content_type == 'text':
            collector(message)
            bot.send_sticker(message.chat.id,
                             "CAACAgIAAxkBAAEIHzFkDzxFeaWhNjihFqQaSFaZNWMzSAACWyoAAvMreEibkHdAfD2kCS8E")
            bot.send_message(message.chat.id, '‚ö°Ô∏è –ê—Ä–µ–Ω–¥–∞ –ê—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤ ‚Äì —Å–µ—Ä–≤–∏—Å–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è. –í 2023 –≥–æ–¥—É –Ω–∞–º –∏—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è'
                                              ' 10 –ª–µ—Ç. –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—à—å? –£–∂–µ 10 –ª–µ—Ç, –º—ã —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è!\n'
                                              '\n'
                                              '–í –Ω–∞—à–µ–º –∞—Ä—Å–µ–Ω–∞–ª–µ –µ—Å—Ç—å, –∫–∞–∂–µ—Ç—Å—è, –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–≤–µ–Ω—Ç–∞:\n'
                                              '\n'
                                              '1) –®–∞—Ç—Ä—ã –∏ –º–µ–±–µ–ª—å\n'
                                              '2) –°—Ç—Ä–∏—Ç—Ñ—É–¥ –∏ –∫–µ–π—Ç–µ—Ä–∏–Ω–≥\n'
                                              '3) –§–∞–Ω –∏ –∫—É–ª–∏–Ω–∞—Ä–Ω–æ–µ –∫–∞–∑–∏–Ω–æ\n'
                                              '4) –ò–≥—Ä–æ–≤–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ (VR, –∏–≥—Ä–æ–≤—ã–µ, —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ, —Ä–µ—Ç—Ä–æ)\n'
                                              '5) –ù–∞–¥—É–≤–Ω—ã–µ –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω—ã\n'
                                              '6) –¢–∏–º–±–∏–ª–¥–∏–Ω–≥–∏, –∫–≤–µ—Å—Ç—ã –∏ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ –∏–≥—Ä—ã\n'
                                              '7) –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª\n'
                                              '8) –§–æ—Ç–æ–∑–æ–Ω—ã\n'
                                              '9) –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã\n'
                                              '10) –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ\n'
                                              '\n'
                                              '–°–µ–π—á–∞—Å –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å –ø–æ–º–æ—â—å—é –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–∞–¥–∞–Ω–∏–π –Ω–∞ –ª–æ–≥–∏–∫—É, –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è '
                                              '–±–ª–∏–∂–µ —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ –∏–∑ –ø–æ–∑–∏—Ü–∏–π.\n'
                                              '\n'
                                              'P.s, –∫—Å—Ç–∞—Ç–∏, —Å–µ–π—á–∞—Å —Ç—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—à—å –≤ Telegram-–∫–≤–µ—Å—Ç–µ ‚Äú–ê–Ω—Ç–∏–∫–≤–∏–∑‚Äù üòè\n'
                                              '\n'
                                              '–°–ø—Ä–∞–≤–∞ —Å–Ω–∏–∑—É –µ—Å—Ç—å –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Å —á–µ—Ç—ã—Ä—å–º—è —Ç–æ—á–∫–∞–º–∏, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–∫—Ä–æ–µ—Ç '
                                              '–º–µ–Ω—é. –ù–∞–∂–º–∏ –µ—ë!',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            # bot.register_next_step_handler(message, antiquiz)
        else:
            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id, '–ú–Ω–µ –Ω—É–∂–Ω—ã —Ç–æ–ª—å–∫–æ —Ç–≤–æ–µ –ò–º—è\n'
                             , parse_mode="Markdown")
            bot.register_next_step_handler(message, fio)
    except Exception as error:
        print(f'rules: {error}')
        bot.register_next_step_handler(message, fio)


@bot.message_handler(func=lambda message: message.text.lower() == '–∞–Ω—Ç–∏–∫–≤–∏–∑' or message.text.lower() == '–∞–Ω—Ç–∏–∫–≤–∏–∑ ‚úÖ', content_types=['text'])
def antiquiz(message):
    try:
        if check(message.from_user, "antiquiz"):
            bot.send_message(message.chat.id,
                             '–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            bot.send_message(message.chat.id,
                             '*Telegram-–∏–≥—Ä—ã* ‚Äì —ç—Ç–æ:\n'
                             '\n'
                             'üî∏ –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä: –Ω–µ –ø–æ—Ö–æ–∂ –Ω–∞ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è '
                             '(–æ–Ω–ª–∞–π–Ω-–∏–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏–∏, –æ–Ω–ª–∞–π–Ω —Ä–æ–ª–µ–≤—ã–µ –∏–≥—Ä—ã, –æ–Ω–ª–∞–π–Ω-–º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã –∏ —Ç–ø)\n'
                             'üî∏ –ò–≥—Ä–∞-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä: –º–æ–∂–µ–º –≤—ã–±—Ä–∞—Ç—å —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∏–≥—Ä—ã, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, —Ç–µ–º–∞—Ç–∏–∫—É, '
                             '–∑–∞–¥–∞–Ω–∏—è, –∏ –¥—Ä—É–≥–∏–µ –¥–æ–ø.—Ñ—É–Ω–∫—Ü–∏–∏\n'
                             'üî∏ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω–æ—Å—Ç—å: –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –∏–≥—Ä —Å –ø–æ–º–æ—â—å—é Telegram-–±–æ—Ç–∞\n'
                             'üî∏ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ—Å—Ç—å: –∫–∞–∂–¥–∞—è –∏–≥—Ä–∞ –±—Ä–µ–Ω–¥–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥ –ó–∞–∫–∞–∑—á–∏–∫–∞\n'
                             'üî∏ –ì–∞—Ä–∞–Ω—Ç–∏–∏: —Ç–µ—Å—Ç–∏—Ä—É–µ–º –∏–≥—Ä—É —Å –∑–∞–∫–∞–∑—á–∏–∫–æ–º –∑–∞ 2-–µ —Å—É—Ç–æ–∫ –¥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–ª—è –ø—Ä–∞–≤–æ–∫\n'
                             'üî∏ –£–¥–∞–ª—ë–Ω–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø–æ–¥ –∫–ª—é—á: –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏\n'
                             'üî∏ –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n'
                             'üî∏ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –∏–ª–∏ –∫–æ–º–∞–Ω–¥–Ω–∞—è –∏–≥—Ä–∞!\n'
                             '\n'
                             '–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ –º–µ–Ω—é ü•∞',
                             parse_mode="Markdown", reply_markup=keyboard.telegram_quest_inline())
        else:
            bot.send_message(message.chat.id,
                             'üß© –ê–Ω—Ç–∏–∫–≤–∏–∑ ‚Äì –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∏–≥—Ä. –í—Å–µ –∑–∞–¥–∞–Ω–∏—è –ê–Ω—Ç–∏–∫–≤–∏–∑–∞ –Ω–∞'
                             ' –ª–æ–≥–∏–∫—É, –ø–æ—Ç–æ–º—É, –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å–º–µ–∫–∞–ª–∫–∞\n'
                             '\n'
                             '–¢–µ–º–∞—Ç–∏–∫–∞ –∏–≥—Ä—ã –º–æ–∂–µ—Ç –±—ã—Ç—å –∞–±—Å–æ–ª—é—Ç–Ω–æ –ª—é–±–æ–π. –î–ª—è –ø—Ä–∏–º–µ—Ä–∞, –º—ã –≤–∑—è–ª–∏ –∫–ª–∞—Å—Å–∏–∫—É - –∑–∞–¥–∞–Ω–∏–µ '
                             '–ø–æ —Ñ–∏–ª—å–º–∞–º.\n'
                             '\n'
                             '‚úÖ _–ó–∞–¥–∞—á–∞ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–∞, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ —ç–º–æ–¥–∑–∏ –∏ –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –≤ –æ—Ç–≤–µ—Ç_'
                             ,parse_mode="Markdown",)
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAIBdGQUSliGbcKAQZ5N3Y3fBbdt3WqeAAIQxjEboWegSOJiFHAp2QmyAQADAgADeQADLwQ',
                           )
            bot.register_next_step_handler(message, antiquiz_two)
    except Exception as error:
        print(f'antiquiz: {error}')
        bot.register_next_step_handler(message, antiquiz)


def antiquiz_two(message):
    try:
        if message.text.lower() in ['–æ—Ö–æ—Ç–Ω–∏–∫–∏ –∑–∞ –ø—Ä–∏–≤–∏–¥–µ–Ω–∏—è–º–∏']:
            bot.send_message(message.chat.id,
                             '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!'
                             , parse_mode="Markdown")
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAIBzWQUVjzao6LFm5nwcv5Cv29JnLJRAAJoxjEboWegSFKMdChU_tgZAQADAgADeQADLwQ',
                           )
            bot.register_next_step_handler(message, antiquiz_three)
        else:
            bot.send_chat_action(message.chat.id, 'typing')
            bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                             parse_mode="Markdown")
            bot.register_next_step_handler(message, antiquiz_two)
    except Exception as error:
        print(f'antiquiz: {error}')
        bot.register_next_step_handler(message, antiquiz_two)


def antiquiz_three(message):
    try:
        if message.text.lower() in ['—Ç–∏—Ç–∞–Ω–∏–∫']:
            bot.send_message(message.chat.id,
                             '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!'
                             , parse_mode="Markdown")
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAIBzmQUV7-hypf9o0xw3rt4fScBm2lSAAJwxjEboWegSJekAAGDl-DLcQEAAwIAA3kAAy8E',
                           )
            bot.register_next_step_handler(message, antiquiz_end)
        else:
            bot.send_chat_action(message.chat.id, 'typing')
            bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                             parse_mode="Markdown")
            bot.register_next_step_handler(message, antiquiz_three)
    except Exception as error:
        print(f'antiquiz_three: {error}')
        bot.register_next_step_handler(message, antiquiz_three)


def antiquiz_end(message):
    try:
        if message.text.lower() in ['—à–µ—Ä–ª–æ–∫',
                                    '—à–µ—Ä–ª–æ–∫ —Ö–æ–ª–º—Å',
                                    '—à–µ—Ä–ª–æ–∫ –±–±—Å',
                                    '—à–µ—Ä–ª–æ–∫ bbc',
                                    'sherlock bbc',
                                    '—à–µ—Ä–ª–æ–∫ —Ö–æ–ª–º—Å –∏ –¥–æ–∫—Ç–æ—Ä –≤–∞—Ç—Å–æ–Ω']:
            change(message.from_user, "antiquiz")
            if check_final(message.from_user):
                end(message)
            else:
                bot.send_message(message.chat.id,
                                 '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!',
                                 parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
                bot.send_message(message.chat.id,
                                 '*Telegram-–∏–≥—Ä—ã* ‚Äì —ç—Ç–æ:\n'
                                 '\n'
                                 'üî∏ –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä: –Ω–µ –ø–æ—Ö–æ–∂ –Ω–∞ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è '
                                 '(–æ–Ω–ª–∞–π–Ω-–∏–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏–∏, –æ–Ω–ª–∞–π–Ω —Ä–æ–ª–µ–≤—ã–µ –∏–≥—Ä—ã, –æ–Ω–ª–∞–π–Ω-–º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã –∏ —Ç–ø)\n'
                                 'üî∏ –ò–≥—Ä–∞-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä: –º–æ–∂–µ–º –≤—ã–±—Ä–∞—Ç—å —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∏–≥—Ä—ã, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, —Ç–µ–º–∞—Ç–∏–∫—É, '
                                 '–∑–∞–¥–∞–Ω–∏—è, –∏ –¥—Ä—É–≥–∏–µ –¥–æ–ø.—Ñ—É–Ω–∫—Ü–∏–∏\n'
                                 'üî∏ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω–æ—Å—Ç—å: –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –∏–≥—Ä —Å –ø–æ–º–æ—â—å—é Telegram-–±–æ—Ç–∞\n'
                                 'üî∏ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ—Å—Ç—å: –∫–∞–∂–¥–∞—è –∏–≥—Ä–∞ –±—Ä–µ–Ω–¥–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥ –ó–∞–∫–∞–∑—á–∏–∫–∞\n'
                                 'üî∏ –ì–∞—Ä–∞–Ω—Ç–∏–∏: —Ç–µ—Å—Ç–∏—Ä—É–µ–º –∏–≥—Ä—É —Å –∑–∞–∫–∞–∑—á–∏–∫–æ–º –∑–∞ 2-–µ —Å—É—Ç–æ–∫ –¥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–ª—è –ø—Ä–∞–≤–æ–∫\n'
                                 'üî∏ –£–¥–∞–ª—ë–Ω–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø–æ–¥ –∫–ª—é—á: –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏\n'
                                 'üî∏ –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n'
                                 'üî∏ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –∏–ª–∏ –∫–æ–º–∞–Ω–¥–Ω–∞—è –∏–≥—Ä–∞!\n'
                                 '\n'
                                 '–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ –º–µ–Ω—é ü•∞',
                                 parse_mode="Markdown", reply_markup=keyboard.telegram_quest_inline())
                if check_final(message.from_user):
                    end(message)
        else:
            bot.send_chat_action(message.chat.id, 'typing')
            bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                             parse_mode="Markdown")
            bot.register_next_step_handler(message, antiquiz_end)
    except Exception as error:
        print(f'antiquiz_end: {error}')
        bot.register_next_step_handler(message, antiquiz_end)


@bot.message_handler(func=lambda message: message.text.lower() == '—à–∞—Ç—Ä—ã' or message.text.lower() == '—à–∞—Ç—Ä—ã ‚úÖ', content_types=['text'])
def tents(message):
    try:
        if check(message.from_user, "tents"):
            bot.send_message(message.chat.id,
                             '–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            bot.send_message(message.chat.id,
                             '–®–∞—Ç—Ä—ã —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –ø–æ–¥ –∫–ª—é—á ‚Äì —ç—Ç–æ –º–∞—Å—Ç—Ö—ç–≤ –¥–ª—è —É–ª–∏—á–Ω–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è. –ì–æ—Ç–æ–≤—ã–µ —à–∞—Ç—Ä—ã –∫—Ä–∞—Å–∏–≤—ã, –æ–Ω–∏ '
                             '—Ö–æ—Ä–æ—à–æ –∑–∞—â–∏—â–∞—é—Ç –æ—Ç –ø–æ–≥–æ–¥–Ω—ã—Ö –ø—Ä–æ—è–≤–ª–µ–Ω–∏–π. –û–Ω–∏ –ø–æ–∑–≤–æ–ª—è—Ç —É–∫—Ä—ã—Ç—å—Å—è –æ—Ç –¥–æ–∂–¥—è, –≤–µ—Ç—Ä–∞ –∏–ª–∏ —Å–æ–ª–Ω—Ü–∞ –≤ '
                             '–∂–∞—Ä–∫—É—é –ø–æ–≥–æ–¥—É. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –º–æ–∂–Ω–æ —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ü–µ–Ω—É, –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –±–∞–Ω–∫–µ—Ç–Ω—ã–µ –∏–ª–∏ —Ñ—É—Ä—à–µ—Ç–Ω—ã–µ '
                             '—Å—Ç–æ–ª—ã –∏ —Å—Ç—É–ª—å—è –¥–ª—è –≥–æ—Å—Ç–µ–π.\n'
                             '\n'
                             '–ü—Ä–æ –º–µ–±–µ–ª—å —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—é –æ—Ç–¥–µ–ª—å–Ω–æ üòè\n'
                             '\n'
                             '–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ –º–µ–Ω—é ü•∞',
                             parse_mode="Markdown", reply_markup=keyboard.telegram_tent_inline())
        else:
            bot.send_sticker(message.chat.id,
                             "CAACAgIAAxkBAAEIHeNkDu9Wd5gvELZtO3MK7S8Y2b8QKgAC5ysAAvIMWEiBgimOerPlQi8E")
            bot.send_message(message.chat.id, 'üß© –û–π, —à–∞—Ç—Ä—ã ‚Äì —ç—Ç–æ –≤–æ–æ–±—â–µ —à–∏–∫–∞—Ä–Ω–æ–µ –∫—Ä—É–≥–ª–æ–≥–æ–¥–∏—á–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ! –£ –Ω–∞—Å –æ–Ω–∏ –≤—Å–µ –≤ '
                                              '—Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –≥–æ—Ç–æ–≤—ã –≤ –ª—é–±—É—é –ø–æ–≥–æ–¥—É –∏ –≤—Ä–µ–º—è –≥–æ–¥–∞ —Å–ª—É–∂–∏—Ç—å –Ω–∞ –≤–∞—à–µ–º –∏–≤–µ–Ω—Ç–µ.\n'
                                              '\n'
                                              '–ö—Å—Ç–∞—Ç–∏, –æ –∑–∞–¥–∞–Ω–∏–∏: –ø—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã ‚Äì –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä —Å–≤–∞–¥–µ–±–Ω–æ–≥–æ —Ç–æ—Ä–∂–µ—Å—Ç–≤–∞ –∏ '
                                              '–ø—Ä—è–º–æ —Å–µ–π—á–∞—Å '
                                              '–∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –º–æ–Ω—Ç–∞–∂ –ø–ª–æ—â–∞–¥–∫–∏. –ù—É–∂–Ω–æ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –æ—Ü–µ–Ω–∏—Ç—å –∏–¥–µ–∞–ª—å–Ω—É—é –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å '
                                              '–∏ –ø–æ–Ω—è—Ç—å, –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –ª–∏ –Ω–∞ –ø–ª–æ—â–∞–¥–∫–µ —á—Ç–æ-—Ç–æ –ª–∏—à–Ω–µ–µ. –ü–æ—Ç–æ–º—É —á—Ç–æ –≤—Å—ë –ª–∏—à–Ω–µ–µ,'
                                              ' –∫–æ–Ω–µ—á–Ω–æ, –Ω—É–∂–Ω–æ —É–±—Ä–∞—Ç—å. \n'
                                              '–ì–ª–∞–≤–Ω–æ–µ ‚Äì –≤ –Ω –∏ –º –∞ —Ç –µ –ª —å –Ω –æ —Å —Ç —å. –ï—ë-—Ç–æ —Å–µ–π—á–∞—Å –∏ –ø—Ä–æ–≤–µ—Ä–∏–º))\n'
                                              '\n'
                                              '‚úÖ _–ù–∞–∑–æ–≤–∏ 4 –∞—Ç—Ä–∏–±—É—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ *–Ω–µ* –ø–æ—Ç—Ä–µ–±—É—é—Ç—Å—è –Ω–∞ —ç—Ç–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏. –û–¥–∏–Ω '
                                              '–ª–∏—à–Ω–∏–π –ø—Ä–µ–¥–º–µ—Ç ‚Äì –æ–¥–∏–Ω –æ—Ç–≤–µ—Ç. –î–∞–≤–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –º–æ–∂–Ω–æ –≤ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ._',
                             parse_mode="Markdown")
            bot.send_document(message.chat.id,
                           'BQACAgIAAxkBAAINP2QcYGv1LXmOSrRCHVXPVMYTMLlAAAKJKQACos_pSOplKiW5_zLULwQ')
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAICIGQVhbzCUTCpsr1NwYMAAe9TMChpJgAC38YxG6FnqEi-V1BXqjzYeQEAAwIAA3kAAy8E',
                           )
            bot.register_next_step_handler(message, tents_end)
    except Exception as error:
        print(f'tents: {error}')
        bot.register_next_step_handler(message, tents)


def tents_end(message):
    try:
        # if check_answer_final(message.from_user, 'tent_answer'):
        #     end(message)
        #     change(message.from_user, "tents")
        if message.text.lower() in ['–º–∏—à–∫–∞',
                                    '–º–µ–¥–≤–µ–∂–æ–Ω–æ–∫',
                                    '–º–µ–¥–≤–µ–¥—å',
                                    '–ø–ª—é—à–µ–≤—ã–π –º–∏—à–∫–∞',
                                    '–ø–ª—é—à–µ–≤—ã–π –º–µ–¥–≤–µ–¥—å',
                                    '–º—è–≥–∫–∞—è –∏–≥—Ä—É—à–∫–∞',
                                    '–∏–≥—Ä—É—à–∫–∞']:
            if check_answer(message.from_user, 'tent_answer', "answer_1"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", )
                bot.register_next_step_handler(message, tents_end)
            else:
                bot.send_message(message.chat.id,
                                 '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è!',
                                 parse_mode="Markdown", )
                change_answer(message.from_user, 'tent_answer', "answer_1")
                change_answer(message.from_user, 'tent_answer', "answer_5")
                if check_answer_final(message.from_user, 'tent_answer'):
                    change(message.from_user, "tents")
                    tents_end_message(message)
                else:
                    bot.register_next_step_handler(message, tents_end)
        elif message.text.lower() in ['–º–µ–Ω—é',
                                      '–º–µ–Ω—é—à–∫–∞']:
            if check_answer(message.from_user, 'tent_answer', "answer_2"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", )
                bot.register_next_step_handler(message, tents_end)
            else:
                bot.send_message(message.chat.id,
                                 '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è!',
                                 parse_mode="Markdown", )
                change_answer(message.from_user, 'tent_answer', "answer_2")
                change_answer(message.from_user, 'tent_answer', "answer_5")
                if check_answer_final(message.from_user, 'tent_answer'):
                    change(message.from_user, "tents")
                    tents_end_message(message)
                else:
                    bot.register_next_step_handler(message, tents_end)
        elif message.text.lower() in ['—ë–ª–∫–∞',
                                      '–µ–ª–∫–∞',
                                      '–Ω–æ–≤–æ–≥–æ–¥–Ω—è—è —ë–ª–∫–∞',
                                      '–Ω–æ–≤–æ–≥–æ–¥–Ω—è—è –µ–ª–∫–∞',
                                      '–µ–ª—å']:
            if check_answer(message.from_user, 'tent_answer', "answer_3"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", )
                bot.register_next_step_handler(message, tents_end)
            else:
                bot.send_message(message.chat.id,
                                 '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è!',
                                 parse_mode="Markdown", )
                change_answer(message.from_user, 'tent_answer', "answer_3")
                change_answer(message.from_user, 'tent_answer', "answer_5")
                if check_answer_final(message.from_user, 'tent_answer'):
                    change(message.from_user, "tents")
                    tents_end_message(message)
                else:
                    bot.register_next_step_handler(message, tents_end)
        elif message.text.lower() in ['–≤–µ–Ω–∏–∫',
                                      '–≤–µ–Ω–∏–∫ –∏ —Å–æ–≤–æ–∫',
                                      '–≤–µ–Ω–∏–∫,—Å–æ–≤–æ–∫',
                                      '–≤–µ–Ω–∏–∫ —Å —Å–æ–≤–∫–æ–º',
                                      '—Å–æ–≤–æ–∫',
                                      '—Å–æ–≤–æ–∫ –∏ –≤–µ–Ω–∏–∫',
                                      '—Å–æ–≤–æ–∫ —Å –≤–µ–Ω–∏–∫–æ–º',
                                      '—à–≤–∞–±—Ä–∞',
                                      '—à–≤–∞–±—Ä–∞ —Å —Å–æ–≤–∫–æ–º',
                                      '—Å–æ–≤–æ–∫ —Å —à–≤–∞–±—Ä–æ–π',
                                      '–º–µ—Ç–ª–∞',
                                      '–º–µ—Ç–ª–∞ –∏ —Å–æ–≤–æ–∫',
                                      '–º–µ—Ç–ª–∞ —Å —Å–æ–≤–∫–æ–º',
                                      '—Å–æ–≤–æ–∫ —Å –º–µ—Ç–ª–æ–π']:
            if check_answer(message.from_user, 'tent_answer', "answer_4"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", )
                bot.register_next_step_handler(message, tents_end)
            else:
                bot.send_message(message.chat.id,
                                 '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è!',
                                 parse_mode="Markdown", )
                change_answer(message.from_user, 'tent_answer', "answer_4")
                change_answer(message.from_user, 'tent_answer', "answer_5")
                if check_answer_final(message.from_user, 'tent_answer'):
                    change(message.from_user, "tents")
                    tents_end_message(message)
                else:
                    bot.register_next_step_handler(message, tents_end)
        else:
            bot.send_message(message.chat.id,
                             '–ü—É-–ø—É-–ø—É.. –Ω–µ–º–Ω–æ–≥–æ –Ω–µ —Ç–æüòä',
                             parse_mode="Markdown", )
            bot.register_next_step_handler(message, tents_end)
    except Exception as error:
        print(f'tents_end: {error}')
        bot.register_next_step_handler(message, tents_end)


def tents_end_message(message):
    try:
        bot.send_message(message.chat.id,
                         '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!',
                         parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
        bot.send_message(message.chat.id,
                         '–®–∞—Ç—Ä—ã —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –ø–æ–¥ –∫–ª—é—á ‚Äì —ç—Ç–æ –º–∞—Å—Ç—Ö—ç–≤ –¥–ª—è —É–ª–∏—á–Ω–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è. –ì–æ—Ç–æ–≤—ã–µ —à–∞—Ç—Ä—ã –∫—Ä–∞—Å–∏–≤—ã, –æ–Ω–∏ '
                         '—Ö–æ—Ä–æ—à–æ –∑–∞—â–∏—â–∞—é—Ç –æ—Ç –ø–æ–≥–æ–¥–Ω—ã—Ö –ø—Ä–æ—è–≤–ª–µ–Ω–∏–π. –û–Ω–∏ –ø–æ–∑–≤–æ–ª—è—Ç —É–∫—Ä—ã—Ç—å—Å—è –æ—Ç –¥–æ–∂–¥—è, –≤–µ—Ç—Ä–∞ –∏–ª–∏ —Å–æ–ª–Ω—Ü–∞ –≤ '
                         '–∂–∞—Ä–∫—É—é –ø–æ–≥–æ–¥—É. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –º–æ–∂–Ω–æ —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ü–µ–Ω—É, –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –±–∞–Ω–∫–µ—Ç–Ω—ã–µ –∏–ª–∏ —Ñ—É—Ä—à–µ—Ç–Ω—ã–µ '
                         '—Å—Ç–æ–ª—ã –∏ —Å—Ç—É–ª—å—è –¥–ª—è –≥–æ—Å—Ç–µ–π.\n'
                         '\n'
                         '–ü—Ä–æ –º–µ–±–µ–ª—å —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—é –æ—Ç–¥–µ–ª—å–Ω–æ üòè\n'
                         '\n'
                         '–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ –º–µ–Ω—é ü•∞',
                         parse_mode="Markdown", reply_markup=keyboard.telegram_tent_inline())
        if check_final(message.from_user):
            end(message)
    except Exception as error:
        print(f'tents_end_message: {error}')
        bot.register_next_step_handler(message, tents_end)

    # bot.register_next_step_handler(message, tents)


@bot.message_handler(func=lambda message: message.text.lower() == '–º–µ–±–µ–ª—å' or message.text.lower() == '–º–µ–±–µ–ª—å ‚úÖ', content_types=['text'])
def furniture(message):
    try:
        if check(message.from_user, "furniture"):
            bot.send_message(message.chat.id,
                             '–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            bot.send_message(message.chat.id,
                             '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –ª—é–±—è—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞ –µ–≥–æ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ, –Ω–æ –∏ –≥–ª–∞–∑–∞–º–∏. –ü–æ—Ç–æ–º—É, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤—ã–¥–µ—Ä–∂–∏–≤–∞—Ç—å '
                             '–≤ –ª—é–±–æ–º –∏–≤–µ–Ω—Ç–µ –æ–±—â–∏–π —Å—Ç–∏–ª—å. –ú–µ–±–µ–ª—å –∏ —Ç–µ–∫—Å—Ç–∏–ª—å, –∞ —Ç–∞–∫–∂–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –¥–µ–∫–æ—Ä ‚Äì —ç—Ç–æ –≤—Å–µ–≥–¥–∞ '
                             '–ø—Ä–µ–∫—Ä–∞—Å–Ω–æ.\n'
                             '\n'
                             '–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ –º–µ–Ω—é ü•∞',
                             parse_mode="Markdown", reply_markup=keyboard.telegram_furniture_inline())
        else:
            bot.send_sticker(message.chat.id,
                             "CAACAgIAAxkBAAEIHzNkDzxnlVv7wpIeJ4ZD_XT8uzXKAAOpJgACYSKBSOj2j1mbeI4SLwQ")
            bot.send_message(message.chat.id,
                             'üß© –ù–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –±–µ–∑ –º–µ–±–µ–ª–∏‚Ä¶ –Ω—É –æ–Ω–ª–∞–π–Ω —Ä–∞–∑–≤–µ —Ç–æ–ª—å–∫–æ üòÄ –û–Ω–∞ –≤–µ–∑–¥–µ –Ω—É–∂–Ω–∞: –ø—É—Ñ–∏–∫–∏, '
                             '–≥–∞—Ä–¥–µ—Ä–æ–±, –∑–µ—Ä–∫–∞–ª–æ –≤ –≥—Ä–∏–º—ë—Ä–∫—É, –≥–∞–º–∞–∫–∏ –Ω–∞ –ø—Ä–∏—Ä–æ–¥—É, –ø–∞–ª–ª–µ—Ç–Ω—ã–µ —Å—Ç–æ–ª—ã‚Ä¶ –í –æ–±—â–µ–º, –µ—Å–ª–∏ —è –Ω–∞—á–Ω—É '
                             '–ø–µ—Ä–µ—á–∏—Å–ª—è—Ç—å –≤—Å—ë, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å, –º—ã –ø—Ä–æ–±—É–¥–µ–º –≤ —ç—Ç–æ–º —á–∞—Ç–µ –µ—â—ë –æ—á–µ–Ω—å-–æ—á–µ–Ω—å –¥–æ–ª–≥–æ))\n'
                             '\n'
                             '–ü—Ä–µ–¥–ª–∞–≥–∞—é —Å—Ä–∞–∑—É –∫ –∑–∞–¥–∞–Ω–∏—é! –Ø –ø—Ä–µ–≤—Ä–∞—Ç–∏–ª 5 –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –º–µ–±–µ–ª–∏ –≤ –∞–Ω–∞–≥—Ä–∞–º–º—É. –≠—Ç–æ –∫–æ–≥–¥–∞ –±—É–∫–≤—ã –≤ '
                             '—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º —Å–ª–æ–≤–µ –ø–µ—Ä–µ–º–µ—à–∞–Ω—ã.\n'
                             '\n'
                             '‚úÖ _–ü–æ–ø—Ä–æ–±—É–π –ø–æ–Ω—è—Ç—å, –∫–∞–∫–∏–µ —Å–ª–æ–≤–∞ —è ‚Äú–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–ª‚Äù –∏ –≤–ø–∏—Å–∞—Ç—å –∏—Ö –≤ –∫—Ä–æ—Å—Å–≤–æ—Ä–¥. –ì–ª–∞–≤–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —ç—Ç–æ—Ç '
                             '—Ä–∞—É–Ω–¥ –±—É–¥–µ—Ç —Å–ª–æ–≤–æ –∏–∑_ *–∫—Ä–∞—Å–Ω—ã—Ö* _–æ–∫–æ—à–µ–∫.\n'
                             '\n'
                             '–ö–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å. –ü–∏—à–∏ –º–Ω–µ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—É—é —Ä–∞–∑–≥–∞–¥–∫—É –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –±–µ–∑ '
                             '–ø—Ä–æ–±–µ–ª–æ–≤_ *1–æ—Ç–≤–µ—Ç.*\n',
                             parse_mode="Markdown", reply_markup=keyboard.crossworld())
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAICzGQVpBiiHqWXPhItEBIy_t0PisOdAAJxxzEboWeoSKojveZ7k4K5AQADAgADeQADLwQ')
            bot.register_next_step_handler(message, furniture_check)
    except Exception as error:
        print(f'furniture: {error}')
        bot.register_next_step_handler(message, furniture)


def furniture_check(message):
    try:
        if message.text.lower() in ['1–∫—Ä–µ—Å–ª–æ']:
            if check_answer(message.from_user, 'furniture_answer', "answer_1"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", )
                bot.register_next_step_handler(message, furniture_check)
            else:
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ',
                                 parse_mode="Markdown", )
                change_answer(message.from_user, 'furniture_answer', "answer_1")
                if check_answer_final(message.from_user, 'furniture_answer'):
                    change(message.from_user, "furniture")
                    bot.send_photo(message.chat.id,
                                   'AgACAgIAAxkBAAICzWQVrj9GWMcYaaYWWXPdN4Kan-OdAAKtxzEboWeoSBaPwuII2i2-AQADAgADeQADLwQ',
                                   reply_markup=keyboard.crossworld())
                    bot.register_next_step_handler(message, furniture_end_message)
                else:
                    bot.register_next_step_handler(message, furniture_check)
        elif message.text.lower() in ['2—Å—Ç—É–ª']:
            if check_answer(message.from_user, 'furniture_answer', "answer_2"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", )
                bot.register_next_step_handler(message, furniture_check)
            else:
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ',
                                 parse_mode="Markdown", )
                change_answer(message.from_user, 'furniture_answer', "answer_2")
                if check_answer_final(message.from_user, 'furniture_answer'):
                    change(message.from_user, "furniture")
                    bot.send_photo(message.chat.id,
                                   'AgACAgIAAxkBAAICzWQVrj9GWMcYaaYWWXPdN4Kan-OdAAKtxzEboWeoSBaPwuII2i2-AQADAgADeQADLwQ',
                                   reply_markup=keyboard.crossworld())
                    bot.register_next_step_handler(message, furniture_end_message)
                else:
                    bot.register_next_step_handler(message, furniture_check)
        elif message.text.lower() in ['3–∑–µ—Ä–∫–∞–ª–æ']:
            if check_answer(message.from_user, 'furniture_answer', "answer_3"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", )
                bot.register_next_step_handler(message, furniture_check)
            else:
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ',
                                 parse_mode="Markdown", )
                change_answer(message.from_user, 'furniture_answer', "answer_3")
                if check_answer_final(message.from_user, 'furniture_answer'):
                    change(message.from_user, "furniture")
                    bot.send_photo(message.chat.id,
                                   'AgACAgIAAxkBAAICzWQVrj9GWMcYaaYWWXPdN4Kan-OdAAKtxzEboWeoSBaPwuII2i2-AQADAgADeQADLwQ',
                                   reply_markup=keyboard.crossworld())
                    bot.register_next_step_handler(message, furniture_end_message)
                else:
                    bot.register_next_step_handler(message, furniture_check)
        elif message.text.lower() in ['4–≤–µ—à–∞–ª–∫–∞']:
            if check_answer(message.from_user, 'furniture_answer', "answer_4"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", )
                bot.register_next_step_handler(message, furniture_check)
            else:
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ',
                                 parse_mode="Markdown", )
                change_answer(message.from_user, 'furniture_answer', "answer_4")
                if check_answer_final(message.from_user, 'furniture_answer'):
                    change(message.from_user, "furniture")
                    bot.send_photo(message.chat.id,
                                   'AgACAgIAAxkBAAICzWQVrj9GWMcYaaYWWXPdN4Kan-OdAAKtxzEboWeoSBaPwuII2i2-AQADAgADeQADLwQ',
                                   reply_markup=keyboard.crossworld())
                    bot.register_next_step_handler(message, furniture_end_message)
                else:
                    bot.register_next_step_handler(message, furniture_check)
        elif message.text.lower() in ['5–¥–∏–≤–∞–Ω']:
            if check_answer(message.from_user, 'furniture_answer', "answer_5"):
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                 parse_mode="Markdown", )
                bot.register_next_step_handler(message, furniture_check)
            else:
                bot.send_message(message.chat.id,
                                 '–í–µ—Ä–Ω–æ',
                                 parse_mode="Markdown", )
                change_answer(message.from_user, 'furniture_answer', "answer_5")
                if check_answer_final(message.from_user, 'furniture_answer'):
                    change(message.from_user, "furniture")
                    bot.send_photo(message.chat.id,
                                   'AgACAgIAAxkBAAICzWQVrj9GWMcYaaYWWXPdN4Kan-OdAAKtxzEboWeoSBaPwuII2i2-AQADAgADeQADLwQ',
                                   reply_markup=keyboard.crossworld())
                    bot.register_next_step_handler(message, furniture_end_message)
                else:
                    bot.register_next_step_handler(message, furniture_check)
        elif message.text.lower() in ['–∫–ª–∞–¥']:
            bot.send_message(message.chat.id,
                             '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            bot.send_message(message.chat.id,
                             '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –ª—é–±—è—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞ –µ–≥–æ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ, –Ω–æ –∏ –≥–ª–∞–∑–∞–º–∏. –ü–æ—Ç–æ–º—É, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤—ã–¥–µ—Ä–∂–∏–≤–∞—Ç—å '
                             '–≤ –ª—é–±–æ–º –∏–≤–µ–Ω—Ç–µ –æ–±—â–∏–π —Å—Ç–∏–ª—å. –ú–µ–±–µ–ª—å –∏ —Ç–µ–∫—Å—Ç–∏–ª—å, –∞ —Ç–∞–∫–∂–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –¥–µ–∫–æ—Ä ‚Äì —ç—Ç–æ –≤—Å–µ–≥–¥–∞ '
                             '–ø—Ä–µ–∫—Ä–∞—Å–Ω–æ.\n'
                             '\n'
                             '–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ –º–µ–Ω—é ü•∞',
                             parse_mode="Markdown", reply_markup=keyboard.telegram_furniture_inline())
            if check_final(message.from_user):
                end(message)
        else:
            bot.send_message(message.chat.id,
                             '–ù–µ –≤–µ—Ä–Ω–æ',
                             parse_mode="Markdown", reply_markup=keyboard.crossworld())
            bot.register_next_step_handler(message, furniture_check)
    except Exception as error:
        print(f'furniture_check: {error}')
        bot.register_next_step_handler(message, furniture_check)


def furniture_end_message(message):
    try:
        if message.text.lower() in ['–∫–ª–∞–¥']:
            bot.send_message(message.chat.id,
                             '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            bot.send_message(message.chat.id,
                             '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –ª—é–±—è—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞ –µ–≥–æ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ, –Ω–æ –∏ –≥–ª–∞–∑–∞–º–∏. –ü–æ—Ç–æ–º—É, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤—ã–¥–µ—Ä–∂–∏–≤–∞—Ç—å '
                             '–≤ –ª—é–±–æ–º –∏–≤–µ–Ω—Ç–µ –æ–±—â–∏–π —Å—Ç–∏–ª—å. –ú–µ–±–µ–ª—å –∏ —Ç–µ–∫—Å—Ç–∏–ª—å, –∞ —Ç–∞–∫–∂–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –¥–µ–∫–æ—Ä ‚Äì —ç—Ç–æ –≤—Å–µ–≥–¥–∞ '
                             '–ø—Ä–µ–∫—Ä–∞—Å–Ω–æ.\n'
                             '\n'
                             '–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ –º–µ–Ω—é ü•∞',
                             parse_mode="Markdown", reply_markup=keyboard.telegram_furniture_inline())
            if check_final(message.from_user):
                end(message)
        else:
            bot.send_message(message.chat.id,
                             '–¢–∞–∫-—Ç–∞–∫-—Ç–∞–∫, —Ä–∞—Å—Å–ª–∞–±–ª—è—Ç—å—Å—è –µ—â—ë —Ä–∞–Ω–æ üòä',
                             parse_mode="Markdown", reply_markup=keyboard.crossworld())
            bot.register_next_step_handler(message, furniture_end_message)
    except Exception as error:
        print(f'furniture_end_message: {error}')
        bot.register_next_step_handler(message, furniture_end_message)


@bot.message_handler(func=lambda message: message.text.lower() == '–∫–∞–∑–∏–Ω–æ' or message.text.lower() == '–∫–∞–∑–∏–Ω–æ ‚úÖ', content_types=['text'])
def casino(message):
    try:
        if check(message.from_user, "furniture"):
            bot.send_message(message.chat.id,
                             '–í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user))
            bot.send_message(message.chat.id,
                             '–î–∞, –≤ –Ω–∞—à–µ–π —Å—Ç—Ä–∞–Ω–µ –ö–∞–∑–∏–Ω–æ –∏ –∏–≥—Ä–∞ –Ω–∞ –¥–µ–Ω—å–≥–∏ –∑–∞–ø—Ä–µ—â–µ–Ω—ã. –ò–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É, –Ω–∞—à–µ —Ñ–∞–Ω-–∫–∞–∑–∏–Ω–æ –Ω–∞ —Ç–æ '
                             '–∏ —Ñ–∞–Ω. –ú—ã –∏–≥—Ä–∞–µ–º –Ω–µ –Ω–∞ –¥–µ–Ω—å–≥–∏, –∞ –Ω–∞ —Ñ–∏—à–∫–∏, –∏–Ω—Ç–µ—Ä–µ—Å –∏ –∞–∑–∞—Ä—Ç. –ê –µ—â—ë, –≤—Å–µ –∫—Ä—É–ø—å–µ ‚Äì –Ω–∞—Å—Ç–æ—è—â–∏–µ '
                             '–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—ã. –ë–µ–∑ —à—É—Ç–æ–∫, —ç—Ç–æ —Ä–µ–±—è—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞–ª–∏ –≤ –Ω–∞—Å—Ç–æ—è—â–∏—Ö –∫–∞–∑–∏–Ω–æ. –û–Ω–∏ —Ç–æ—á–Ω–æ '
                             '–∑–Ω–∞—é—Ç —Å–≤–æ—ë –¥–µ–ª–æ)\n'
                             '–§–∞–Ω-–∫–∞–∑–∏–Ω–æ, –∫—É–ª–∏–Ω–∞—Ä–Ω–æ–µ-–∫–∞–∑–∏–Ω–æ, —Ç–∏—Ä—ã –∏ –∏–≥—Ä–æ–≤—ã–µ –∞–ø–ø–∞—Ä–∞—Ç—ã ‚Äì –≤—Å—ë, –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å '
                             '–Ω–∞—Å—Ç–æ—è—â–µ–µ –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ!\n',
                             parse_mode="Markdown", reply_markup=keyboard.telegram_casino_inline())
        else:
            bot.send_sticker(message.chat.id,
                             "CAACAgIAAxkBAAEIHeVkDu949s5aPydxGXaUzMKCPAfQuQAC4igAAu3QWUiJCmpWhUnbJi8E")
            bot.send_message(message.chat.id, 'üß© –ù–∞–¥–µ—é—Å—å –∞–∑–∞—Ä—Ç –æ—Ç —ç—Ç–æ–π –∏–≥—Ä—ã —É–∂–µ —Ä–∞–∑—ã–≥—Ä–∞–ª—Å—è, –∞ —Ç—É—Ç –µ—â—ë –∏ —Ç–µ–º–∞ –ö–∞–∑–∏–Ω–æ! '
                                              '–°—Ä–∞–∑—É —Å–∫–∞–∂—É, —á—Ç–æ –ö–∞–∑–∏–Ω–æ —É –Ω–∞—Å —Ñ–∞–Ω–æ–≤–æ–µ –∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –¥–≤—É—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞—Ö: '
                                              '–∫–ª–∞—Å—Å–∏–∫–∞ (–ø–æ–∫–µ—Ä, —Ä—É–ª–µ—Ç–∫–∞, –±–ª—ç–∫–¥–∂–µ–∫ –∏ –¥—Ä—É–≥–∏–µ) –∏ –∫—É–ª–∏–Ω–∞—Ä–Ω–æ–µ (–≤–∏—Å–∫–∏-–∫–∞–∑–∏–Ω–æ, '
                                              '—Å—ã—Ä–Ω–æ–µ-–∫–∞–∑–∏–Ω–æ, –º–∞—Ä–º–µ–ª–∞–¥–Ω–æ–µ-–∫–∞–∑–∏–Ω–æ –∏ –¥—Ä—É–≥–∏–µ).\n'
                                              '\n'
                                              '‚úÖ _–†–∞—Å—Å–∫–∞–∂—É, –∫–æ–Ω–µ—á–Ω–æ, –≤—Å—ë –ø–æ–¥—Ä–æ–±–Ω–µ–µ, —Ç–æ–ª—å–∫–æ —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–µ–¥–ª–∞–≥–∞—é —Å—ã–≥—Ä–∞—Ç—å '
                                              '—Å–æ –º–Ω–æ–π –≤ –∏–≥—Ä—É. –ò–≥—Ä–∞ ‚Äì —Ä—É—Å—Å–∫–∞—è –≤–µ—Ä—Å–∏—è –ë–ª—ç–∫–¥–∂–µ–∫–∞ ‚Äì –î–≤–∞–¥—Ü–∞—Ç—å –û–¥–Ω–æ. –°—É—Ç—å '
                                              '–æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–∞. –Ø —Ä–∞–∑–¥–∞—é –∫–∞—Ä—Ç—ã, –∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –Ω–∞–±—Ä–∞—Ç—å –≤ —Å—É–º–º–µ 21 –∏–ª–∏ –º–µ–Ω—å—à–µ '
                                              '–æ—á–∫–æ–≤, —á–µ–º —É –º–µ–Ω—è. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç—É–∏—Ü–∏—é. –í—ã–±–µ—Ä–∏: –ø–∞—Å –∏–ª–∏ –µ—â—ë?_\n',
                             parse_mode="Markdown", reply_markup=keyboard.casino_keyboard())
        bot.send_photo(message.chat.id,
                       'AgACAgIAAxkBAAICzmQVr1mnpchGiLFy07QfbRCTBcXmAAK4xzEboWeoSI2Opx-qLif-AQADAgADcwADLwQ')
        bot.send_photo(message.chat.id,
                       'AgACAgIAAxkBAAICz2QVr20kupkYXZg7vjZdjYIOGbGdAAK8xzEboWeoSHTmDCpUfARyAQADAgADeQADLwQ',
                       reply_markup=keyboard.casino_keyboard())
        bot.register_next_step_handler(message, casino_end)
    except Exception as error:
        print(f'casino: {error}')
        bot.register_next_step_handler(message, casino)


def casino_end(message):
    try:
        if message.text.lower() in ['–µ—â–µ', '–µ—â—ë']:
            change(message.from_user, "casino")
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAIC0GQVsGxi-tAcafF7paB4uDLJIdJlAALDxzEboWeoSPSsU6y5nyniAQADAgADeQADLwQ',reply_markup=keyboard.keyboard(message.from_user))
            bot.send_message(message.chat.id,
                             '–¢–∞–∫ —É–∂ –∏ –±—ã—Ç—å‚Ä¶ –û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä, —É–¥–∞—á–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ! –ü–æ–±–µ–¥–∞, –ø–æ–ª—É—á–∞–µ—Ç—Å—è! ü•≥\n'
                             '\n'
                             '–î–∞, –≤ –Ω–∞—à–µ–π —Å—Ç—Ä–∞–Ω–µ –ö–∞–∑–∏–Ω–æ –∏ –∏–≥—Ä–∞ –Ω–∞ –¥–µ–Ω—å–≥–∏ –∑–∞–ø—Ä–µ—â–µ–Ω—ã. –ò–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É, –Ω–∞—à–µ —Ñ–∞–Ω-–∫–∞–∑–∏–Ω–æ –Ω–∞ —Ç–æ '
                             '–∏ —Ñ–∞–Ω. –ú—ã –∏–≥—Ä–∞–µ–º –Ω–µ –Ω–∞ –¥–µ–Ω—å–≥–∏, –∞ –Ω–∞ —Ñ–∏—à–∫–∏, –∏–Ω—Ç–µ—Ä–µ—Å –∏ –∞–∑–∞—Ä—Ç. –ê –µ—â—ë, –≤—Å–µ –∫—Ä—É–ø—å–µ ‚Äì –Ω–∞—Å—Ç–æ—è—â–∏–µ '
                             '–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—ã. –ë–µ–∑ —à—É—Ç–æ–∫! –≠—Ç–æ —Ä–µ–±—è—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞–ª–∏ –≤ –Ω–∞—Å—Ç–æ—è—â–∏—Ö –∫–∞–∑–∏–Ω–æ. –û–Ω–∏ —Ç–æ—á–Ω–æ '
                             '–∑–Ω–∞—é—Ç —Å–≤–æ—ë –¥–µ–ª–æ)\n'
                             '–§–∞–Ω-–∫–∞–∑–∏–Ω–æ, –∫—É–ª–∏–Ω–∞—Ä–Ω–æ–µ-–∫–∞–∑–∏–Ω–æ, —Ç–∏—Ä—ã –∏ –∏–≥—Ä–æ–≤—ã–µ –∞–ø–ø–∞—Ä–∞—Ç—ã ‚Äì –≤—Å—ë, –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å '
                             '–Ω–∞—Å—Ç–æ—è—â–µ–µ –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ!\n'
                             '\n'
                             '–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ –º–µ–Ω—é ü•∞',
                             parse_mode="Markdown", reply_markup=keyboard.telegram_casino_inline())

            if check_final(message.from_user):
                end(message)
        elif message.text.lower() in ['–ø–∞—Å']:
            change(message.from_user, "casino")
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAIC0WQVsYLApjHwS2V-x4dUwqLx4VU2AALHxzEboWeoSFtjgWM2FOxrAQADAgADeQADLwQ', reply_markup=keyboard.keyboard(message.from_user))
            bot.send_message(message.chat.id,
                             '–û–≥–æ, —É–¥–∞—á–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ! –ù—É –ª–∞–¥–Ω–æ, —è —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞—Ç—å—Å—è —Å–µ–≥–æ–¥–Ω—è –Ω–µ –±—É–¥—É. –ü–æ–±–µ–¥–∞ –∑–∞ —Ç–æ–±–æ–π, '
                             '–ø–æ–ª—É—á–∞–µ—Ç—Å—è! ü•≥\n'
                             '\n'
                             '–î–∞, –≤ –Ω–∞—à–µ–π —Å—Ç—Ä–∞–Ω–µ –ö–∞–∑–∏–Ω–æ –∏ –∏–≥—Ä–∞ –Ω–∞ –¥–µ–Ω—å–≥–∏ –∑–∞–ø—Ä–µ—â–µ–Ω—ã. –ò–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É, –Ω–∞—à–µ —Ñ–∞–Ω-–∫–∞–∑–∏–Ω–æ –Ω–∞ —Ç–æ '
                             '–∏ —Ñ–∞–Ω. –ú—ã –∏–≥—Ä–∞–µ–º –Ω–µ –Ω–∞ –¥–µ–Ω—å–≥–∏, –∞ –Ω–∞ —Ñ–∏—à–∫–∏, –∏–Ω—Ç–µ—Ä–µ—Å –∏ –∞–∑–∞—Ä—Ç. –ê –µ—â—ë, –≤—Å–µ –∫—Ä—É–ø—å–µ ‚Äì –Ω–∞—Å—Ç–æ—è—â–∏–µ '
                             '–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—ã. –ë–µ–∑ —à—É—Ç–æ–∫, —ç—Ç–æ —Ä–µ–±—è—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞–ª–∏ –≤ –Ω–∞—Å—Ç–æ—è—â–∏—Ö –∫–∞–∑–∏–Ω–æ. –û–Ω–∏ —Ç–æ—á–Ω–æ '
                             '–∑–Ω–∞—é—Ç —Å–≤–æ—ë –¥–µ–ª–æ)\n'
                             '–§–∞–Ω-–∫–∞–∑–∏–Ω–æ, –∫—É–ª–∏–Ω–∞—Ä–Ω–æ–µ-–∫–∞–∑–∏–Ω–æ, —Ç–∏—Ä—ã –∏ –∏–≥—Ä–æ–≤—ã–µ –∞–ø–ø–∞—Ä–∞—Ç—ã ‚Äì –≤—Å—ë, –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å '
                             '–Ω–∞—Å—Ç–æ—è—â–µ–µ –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ!\n'
                             '\n'
                             '–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ –º–µ–Ω—é ü•∞',
                             parse_mode="Markdown", reply_markup=keyboard.telegram_casino_inline())

            if check_final(message.from_user):
                end(message)
    except Exception as error:
        print(f'casino_end: {error}')
        bot.register_next_step_handler(message, casino_end)


def end(message):
    try:
        bot.send_sticker(message.chat.id,
                         "CAACAgIAAxkBAAEIHzVkDzyVU6XqbFLkRK6_y80nhMPWqgACSisAAof_eEh223V-zyr6vS8E")
        bot.send_message(message.chat.id, '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! ü•≥\n'
                                          '–ú–æ–π —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –∫–≤–µ—Å—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–æ–π–¥–µ–Ω. –ê —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ —è —Å —á–∏—Å—Ç–æ–π '
                                          '—Å–æ–≤–µ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –≤—Ä—É—á–∏—Ç—å —Ç–µ–±–µ –ø—Ä–æ–º–æ–∫–æ–¥!\n'
                                          '\n'
                                          '–ù–∞–ø–∏—à–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞!',
                         parse_mode="Markdown")
        bot.register_next_step_handler(message, end_phone)
    except Exception as error:
        print(f'end: {error}')
        bot.register_next_step_handler(message, casino_end)

def end_phone(message):
    try:
        if message.content_type=='text':
            telephone(message)
            bot.send_sticker(message.chat.id,
                             "CAACAgIAAxkBAAEIHzFkDzxFeaWhNjihFqQaSFaZNWMzSAACWyoAAvMreEibkHdAfD2kCS8E")
            bot.send_message(message.chat.id, '‚ù§Ô∏è –°–µ—Ä–≤–∏—Å–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è ‚Äú–ê—Ä–µ–Ω–¥–∞ –ê—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤‚Äù\n'
                                              '\n'
                                              '–í –Ω–∞—à –î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è, —Ö–æ—Ç–∏–º –≤—Ä—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É 15% —Ç–µ–±–µ!\n'
                                              '\n'
                                              'üîπ *–ü–†–û–ú–û–ö–û–î:* ARENDA2023\n'
                                              '–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –Ω–∞—à telegram-–∫–∞–Ω–∞–ª, –±—É–¥—å –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–∞—à–∏—Ö –Ω–æ–≤–∏–Ω–æ–∫!\n'
                                              '\n'
                                              '[–ö–∞–Ω–∞–ª –ê—Ä–µ–Ω–¥—ã –ê—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤](https://t.me/arenda_attrakcionov)'
                                              '\n'
                                              '–î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á!\n'
                                              '–û–±–Ω–∏–º–∞–µ–º!\n'
                                              '‚ù§Ô∏è',
                             parse_mode="Markdown", reply_markup=keyboard.keyboard(message.from_user), disable_web_page_preview=True)
    except Exception as error:
        print(f'end_phone: {error}')
        bot.register_next_step_handler(message, casino_end)
# def end(message):
#     bot.send_sticker(message.chat.id,
#                      "CAACAgIAAxkBAAEIHzFkDzxFeaWhNjihFqQaSFaZNWMzSAACWyoAAvMreEibkHdAfD2kCS8E")
#     bot.send_message(message.chat.id, '‚ù§Ô∏è –°–µ—Ä–≤–∏—Å–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è ‚Äú–ê—Ä–µ–Ω–¥–∞ –ê—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤‚Äù\n'
#                                       '\n'
#                                       '–í –Ω–∞—à –î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è, —Ö–æ—Ç–∏–º –≤—Ä—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É 15% —Ç–µ–±–µ!\n'
#                                       '\n'
#                                       'üîπ –ü–†–û–ú–û–ö–û–î: ARENDA2023\n'
#                                       '–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –Ω–∞—à telegram-–∫–∞–Ω–∞–ª, –±—É–¥—å –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–∞—à–∏—Ö –Ω–æ–≤–∏–Ω–æ–∫!\n'
#                                       '\n'
#                                       '[Telegram](https://t.me/arenda_attrakcionov)'
#                                       '\n'
#                                       '–î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á!\n'
#                                       '–û–±–Ω–∏–º–∞–µ–º!\n'
#                                       '‚ù§Ô∏è',
#                      parse_mode="Markdown",disable_web_page_preview=True)
#         # bot.register_next_step_handler(message, end_phone)

def change(user_data, name_colum):
    database = db.Data(user_data)
    database.replace(name_colum)


def change_answer(user_data, table_name, name_colum):
    database = db.Data(user_data)
    database.replace_answer(table_name, name_colum)


def check(user_id, name_colum):
    database = db.Data(user_id)
    number = database.check(name_colum)
    return number


def check_final(user_data):
    # rais = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    database = db.Data(user_data)
    number = database.check_final()
    # number.remove(str(user_data.id))
    if all(number):
        return True
    else:
        return False


def check_answer_final(user_data, table_name):
    database = db.Data(user_data)
    number = database.check_answer_final(table_name)
    if all(number):
        return True
    else:
        return False


def check_answer(user_data, table_name, name_colum):
    database = db.Data(user_data)
    answer_bool = database.response_answer(table_name, name_colum)
    if answer_bool[0]:
        return True
    else:
        return False


def collector(message):
    user = db.Data(message.from_user)
    if bool(message.from_user.username) is True:
        name = message.text
        username = f'https://t.me/{message.from_user.username}'
        user.collection(name, username)
    else:
        name = message.text
        user.collection(name)

def telephone(message):
    user = db.Data(message.from_user)
    phone = message.text
    user.collection_phone(phone)

while True:
    try:
        bot.polling(none_stop=True, timeout=10)
    except Exception as error:
        print(error)
        time.sleep(3)
